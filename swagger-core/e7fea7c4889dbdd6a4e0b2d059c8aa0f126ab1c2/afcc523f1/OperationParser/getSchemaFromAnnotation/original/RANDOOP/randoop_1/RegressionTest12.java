import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema12.getReadOnly();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.maximum(bigDecimal14);
        java.lang.Integer int16 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema12.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema12.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema12.setExternalDocs(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema11.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minItems((java.lang.Integer) 1);
        schema11.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML19 = schema11.getXml();
        io.swagger.oas.models.media.Schema schema21 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.discriminator(discriminator24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema21.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.title("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema9 = schema7.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema7.readOnly((java.lang.Boolean) true);
        java.lang.String str12 = schema7.getDescription();
        java.lang.Integer int13 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal15 = null;
        objSchema14.setMultipleOf(bigDecimal15);
        objSchema14.setType("");
        java.math.BigDecimal bigDecimal19 = objSchema14.getMaximum();
        java.lang.Boolean boolean20 = objSchema14.getExclusiveMinimum();
        schema7.setDefault((java.lang.Object) boolean20);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.discriminator(discriminator33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        objSchema35.addEnumItemObject((java.lang.Object) objSchema40);
        objSchema35.setMinProperties((java.lang.Integer) 100);
        objSchema35.setPattern("");
        java.math.BigDecimal bigDecimal51 = objSchema35.getMultipleOf();
        java.lang.String[] strArray69 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        io.swagger.oas.models.media.Schema schema72 = objSchema35.required((java.util.List<java.lang.String>) strList70);
        schema34.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema19.required((java.util.List<java.lang.String>) strList70);
        java.lang.Boolean boolean75 = schema19.getNullable();
        java.lang.String str76 = schema19.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema73.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList80 = objSchema73.getEnum();
        java.lang.Boolean boolean81 = objSchema73.getNullable();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = schema83.getMaximum();
        io.swagger.oas.models.media.Schema schema85 = schema7.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema87 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema87.setPattern("no description");
        java.math.BigDecimal bigDecimal90 = null;
        objSchema87.setMinimum(bigDecimal90);
        java.lang.Boolean boolean92 = objSchema87.getReadOnly();
        io.swagger.oas.models.media.Schema schema93 = schema83.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema87);
        java.lang.Boolean boolean94 = schema93.getNullable();
        schema93.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema98 = schema93.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(objList80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getUniqueItems();
        java.lang.Boolean boolean17 = schema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema15.setDiscriminator(discriminator20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        objSchema23.addExtension("", (java.lang.Object) objSchema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        objSchema27.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = objSchema27.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema38 = objSchema27.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = schema38.minLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        schema40.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema44.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = objSchema44.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema40.additionalProperties(schema55);
        schema15.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema40);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema15.xml(xML58);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        io.swagger.oas.models.media.Schema schema60 = objSchema50.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal61 = null;
        objSchema50.setMultipleOf(bigDecimal61);
        java.lang.Boolean boolean63 = objSchema50.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema65 = objSchema50.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema7.addProperties("hi!", schema65);
        io.swagger.oas.models.media.Schema schema68 = schema65.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema65.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str71 = schema65.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str71, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema37 = schema34.description("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        objSchema0.setDiscriminator(discriminator16);
        objSchema0.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        objSchema0.setMaximum(bigDecimal20);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.maxProperties((java.lang.Integer) 1);
        java.lang.Object obj16 = objSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.String str22 = objSchema17.getName();
        objSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList25 = objSchema17.getEnum();
        io.swagger.oas.models.media.Schema schema27 = objSchema17.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = objSchema17.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = objSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema32 = objSchema17.title("*/*");
        java.lang.Boolean boolean33 = objSchema17.getExclusiveMinimum();
        objSchema17.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = objSchema17.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        objSchema17.setProperties(strMap38);
        java.lang.Object obj40 = objSchema17.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema50.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = schema62.getExtensions();
        io.swagger.oas.models.media.Schema schema65 = schema62.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        schema62.setMinimum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema69 = schema62.maxLength((java.lang.Integer) 10);
        schema54.addEnumItemObject((java.lang.Object) schema69);
        io.swagger.oas.models.media.Schema schema72 = schema69.name("");
        io.swagger.oas.models.media.Schema schema73 = objSchema17.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema69);
        io.swagger.oas.models.media.Schema schema75 = objSchema17.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = schema75.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema75.externalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = schema75.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean81 = schema75.getUniqueItems();
        objSchema0.setDefault((java.lang.Object) boolean81);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(objList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(externalDocumentation76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean81);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema75.addProperties("*/*", schema81);
        io.swagger.oas.models.media.Schema schema84 = schema82.title("hi!");
        io.swagger.oas.models.media.Schema schema86 = schema84.maxLength((java.lang.Integer) 1);
        schema84.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema84.uniqueItems((java.lang.Boolean) true);
        schema74.setNot(schema84);
        io.swagger.oas.models.media.Schema schema93 = schema74.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema95 = schema93.pattern("");
        java.util.List<java.lang.Object> objList96 = schema95.getEnum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(objList96);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Boolean boolean14 = schema13.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.format("");
        java.util.List<java.lang.String> strList26 = schema25.getRequired();
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMaximum(bigDecimal27);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.Boolean boolean53 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema55 = objSchema0.minItems((java.lang.Integer) 0);
        schema55.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = schema55.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap58);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.maximum(bigDecimal17);
        java.lang.String str19 = schema16.getTitle();
        java.lang.Integer int20 = schema16.getMaxLength();
        schema16.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema16.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema16.xml(xML25);
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.String str43 = schema39.getDescription();
        schema39.setMinProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean46 = schema39.getReadOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = objSchema4.getExclusiveMinimum();
        java.util.List<java.lang.Object> objList17 = objSchema4.getEnum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(objList17);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema14.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList13 = schema10.getRequired();
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setType("");
        java.math.BigDecimal bigDecimal21 = objSchema16.getMaximum();
        java.lang.Boolean boolean22 = objSchema16.getExclusiveMinimum();
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema16);
        io.swagger.oas.models.media.Schema schema29 = schema27.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema29.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema29.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("hi!");
        java.lang.Object obj34 = schema33.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        java.util.List<java.lang.String> strList53 = schema51.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema33.addProperties("", schema51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int76 = objSchema71.getMinLength();
        objSchema66.addEnumItemObject((java.lang.Object) objSchema71);
        objSchema71.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int80 = objSchema71.getMaxLength();
        schema62.addExtension("no description", (java.lang.Object) objSchema71);
        io.swagger.oas.models.media.Schema schema83 = schema62.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = schema62.getExtensions();
        schema54.setExtensions(strMap84);
        schema23.setExtensions(strMap84);
        schema13.setExtensions(strMap84);
        java.lang.Object obj88 = new java.lang.Object();
        schema13.addEnumItemObject(obj88);
        schema13.setMaxProperties((java.lang.Integer) (-1));
        schema13.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        schema13.setMinItems((java.lang.Integer) 0);
        java.lang.String str18 = schema13.getTitle();
        java.lang.String str19 = schema13.get$ref();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "*/*" + "'", str19, "*/*");
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxProperties((java.lang.Integer) (-1));
        schema16.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema9.minItems((java.lang.Integer) (-1));
        java.lang.String str30 = schema9.getDescription();
        io.swagger.oas.models.media.Schema schema32 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema9.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int29 = schema28.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema31.xml(xML41);
        io.swagger.oas.models.media.Schema schema44 = objSchema31.deprecated((java.lang.Boolean) false);
        schema44.set$ref("*/*");
        io.swagger.oas.models.media.XML xML47 = null;
        schema44.setXml(xML47);
        io.swagger.oas.models.media.Schema schema50 = schema44.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema44.externalDocs(externalDocumentation51);
        java.lang.String str53 = schema44.getName();
        io.swagger.oas.models.media.Schema schema54 = schema28.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        io.swagger.oas.models.media.Schema schema56 = schema44.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema56.nullable((java.lang.Boolean) true);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.example(obj59);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        java.lang.Object obj11 = null;
        objSchema0.addEnumItemObject(obj11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.Boolean boolean34 = schema23.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.String str41 = objSchema36.getName();
        objSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = objSchema36.getEnum();
        io.swagger.oas.models.media.Schema schema46 = objSchema36.name(",");
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema36.properties(strMap65);
        java.lang.Object obj67 = schema66.getDefault();
        io.swagger.oas.models.media.Schema schema68 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = schema23.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator70 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema71 = schema14.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema23);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML39 = null;
        schema26.setXml(xML39);
        java.lang.Integer int41 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema43 = schema26.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema43.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema43.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = schema13.deprecated((java.lang.Boolean) false);
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema13.discriminator(discriminator33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = objSchema35.getNot();
        java.lang.Integer int41 = objSchema35.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = objSchema47.getMinLength();
        objSchema42.addEnumItemObject((java.lang.Object) objSchema47);
        objSchema42.setMinProperties((java.lang.Integer) 100);
        objSchema42.setPattern("");
        java.math.BigDecimal bigDecimal58 = objSchema42.getMultipleOf();
        java.lang.String[] strArray76 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        io.swagger.oas.models.media.Schema schema79 = objSchema42.required((java.util.List<java.lang.String>) strList77);
        java.util.List<java.lang.Object> objList80 = schema79.getEnum();
        objSchema35.setEnum(objList80);
        schema34.setEnum(objList80);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(objList80);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        objSchema27.setExternalDocs(externalDocumentation32);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema27.multipleOf(bigDecimal34);
        objSchema27.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.xml(xML49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema53.properties(strMap60);
        io.swagger.oas.models.media.Schema schema63 = schema61.type("");
        io.swagger.oas.models.media.Schema schema65 = schema63.title("*/*");
        io.swagger.oas.models.media.Schema schema67 = schema65.description(",");
        java.lang.String[] strArray70 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        io.swagger.oas.models.media.Schema schema73 = schema65.required((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema74 = schema48.required((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema75 = objSchema27.required((java.util.List<java.lang.String>) strList71);
        schema26.setRequired((java.util.List<java.lang.String>) strList71);
        java.lang.Object obj77 = schema26.getExample();
        io.swagger.oas.models.media.Schema schema79 = schema26.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.maximum(bigDecimal80);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        java.lang.Boolean boolean16 = objSchema5.getUniqueItems();
        java.lang.Boolean boolean17 = objSchema5.getExclusiveMaximum();
        java.lang.String str18 = objSchema5.getName();
        objSchema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: [#/components/schemas/, ,, ,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.title("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema44.description(",");
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema44.required((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.multipleOf(bigDecimal53);
        java.lang.Integer int55 = schema52.getMinProperties();
        schema30.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.Schema schema66 = objSchema57.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema57.xml(xML67);
        java.lang.Boolean boolean69 = schema68.getNullable();
        io.swagger.oas.models.media.Schema schema71 = schema68.minProperties((java.lang.Integer) 0);
        java.lang.Object obj72 = schema68.getDefault();
        schema52.setExample((java.lang.Object) schema68);
        java.lang.Integer int74 = schema68.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema68.discriminator(discriminator75);
        schema68.setUniqueItems((java.lang.Boolean) true);
        schema68.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = schema13.deprecated((java.lang.Boolean) false);
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema33.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = objSchema33.getExternalDocs();
        io.swagger.oas.models.media.Schema schema48 = objSchema33.title("*/*");
        java.lang.Boolean boolean49 = objSchema33.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = objSchema33.minLength((java.lang.Integer) 100);
        schema13.addEnumItemObject((java.lang.Object) objSchema33);
        io.swagger.oas.models.media.Schema schema54 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: #/components/schemas/\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj55 = schema13.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String str33 = objSchema0.get$ref();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.externalDocs(externalDocumentation31);
        schema27.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        objSchema13.setRequired((java.util.List<java.lang.String>) strList20);
        io.swagger.oas.models.media.Schema schema24 = objSchema13.pattern("*/*");
        java.lang.Boolean boolean25 = schema24.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        objSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema26.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema46.getExtensions();
        io.swagger.oas.models.media.Schema schema49 = schema46.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal50 = null;
        schema46.setMinimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema46.maxLength((java.lang.Integer) 10);
        schema38.addEnumItemObject((java.lang.Object) schema53);
        java.math.BigDecimal bigDecimal55 = schema53.getMinimum();
        schema53.setType("#/components/schemas/no description");
        schema24.setExample((java.lang.Object) schema53);
        schema10.addExtension("", (java.lang.Object) schema24);
        java.math.BigDecimal bigDecimal60 = schema24.getMultipleOf();
        schema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList65 = schema64.getRequired();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strList65);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.XML xML7 = objSchema0.getXml();
        java.math.BigDecimal bigDecimal8 = objSchema0.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objSchema0.getExtensions();
        java.util.List<java.lang.String> strList10 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema13.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema13.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = objSchema13.title("*/*");
        java.lang.Boolean boolean29 = objSchema13.getExclusiveMinimum();
        objSchema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema13.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        objSchema13.setProperties(strMap34);
        objSchema13.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema38.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = objSchema38.deprecated((java.lang.Boolean) false);
        schema51.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema13.setNot(schema55);
        io.swagger.oas.models.media.Schema schema58 = objSchema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean59 = objSchema13.getNullable();
        java.lang.Integer int60 = objSchema13.getMinProperties();
        boolean boolean61 = schema12.equals((java.lang.Object) objSchema13);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = objSchema29.getMinLength();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema29);
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.XML xML46 = null;
        schema45.setXml(xML46);
        schema45.setTitle("*/*");
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.xml(xML50);
        schema25.setDefault((java.lang.Object) xML50);
        io.swagger.oas.models.media.Schema schema54 = schema25.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema25.discriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema57 = schema10.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema59 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        schema59.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.String str12 = schema8.getName();
        schema8.setNullable((java.lang.Boolean) false);
        java.lang.String str15 = schema8.getName();
        io.swagger.oas.models.media.Schema schema16 = schema8.getNot();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        java.lang.Integer int14 = schema10.getMinLength();
        java.lang.Boolean boolean15 = schema10.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema10.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema32.xml(xML42);
        java.math.BigDecimal bigDecimal44 = schema43.getMultipleOf();
        io.swagger.oas.models.media.Schema schema45 = schema28.additionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) schema43);
        io.swagger.oas.models.media.Schema schema48 = schema10.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Integer int24 = schema7.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        objSchema13.setRequired((java.util.List<java.lang.String>) strList20);
        io.swagger.oas.models.media.Schema schema24 = objSchema13.pattern("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.xml(xML25);
        schema24.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema24.maxLength((java.lang.Integer) 0);
        schema7.setDefault((java.lang.Object) schema30);
        java.math.BigDecimal bigDecimal32 = schema7.getMultipleOf();
        java.util.List<java.lang.String> strList33 = schema7.getRequired();
        java.lang.String str34 = schema7.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMinItems((java.lang.Integer) 1);
        java.lang.String str16 = schema11.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = objSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema24 = objSchema17.exclusiveMinimum((java.lang.Boolean) false);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        schema11.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        schema35.setTitle("*/*");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        schema35.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema11.required((java.util.List<java.lang.String>) strList47);
        java.math.BigDecimal bigDecimal51 = schema11.getMultipleOf();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        io.swagger.oas.models.media.Schema schema58 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        schema58.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.multipleOf(bigDecimal61);
        java.math.BigDecimal bigDecimal63 = schema58.getMaximum();
        schema58.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal63);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        java.lang.String str23 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema25 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Schema schema28 = schema25.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "," + "'", str23, ",");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema8.maximum(bigDecimal13);
        schema8.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.xml(xML17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema8.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        io.swagger.oas.models.media.Schema schema36 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema schema37 = schema23.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema schema39 = schema23.readOnly((java.lang.Boolean) false);
        schema39.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema39.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = objSchema0.example((java.lang.Object) schema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema0.externalDocs(externalDocumentation45);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        java.math.BigDecimal bigDecimal10 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.addRequiredItem("#/components/schemas/");
        schema20.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator23 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        schema31.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema20.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal43 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = objSchema0.additionalProperties(schema40);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.discriminator(discriminator45);
        schema44.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = schema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema37 = schema34.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.xml(xML40);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema37.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema37.name("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal7 = schema6.getMaximum();
        java.lang.Boolean boolean8 = schema6.getExclusiveMinimum();
        java.lang.Integer int9 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal11 = null;
        objSchema10.setMultipleOf(bigDecimal11);
        objSchema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = objSchema15.getMinLength();
        objSchema10.addEnumItemObject((java.lang.Object) objSchema15);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema15.maxProperties((java.lang.Integer) 0);
        objSchema15.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema29 = objSchema15.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = objSchema15.type(",");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema15.minimum(bigDecimal32);
        schema33.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean36 = schema33.getReadOnly();
        java.lang.Object obj37 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema38 = schema6.example(obj37);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema7.xml(xML20);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.discriminator(discriminator24);
        java.math.BigDecimal bigDecimal26 = schema21.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = schema21.title("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.maxLength((java.lang.Integer) 1);
        schema23.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema23.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setNot(schema29);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        objSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setType("");
        java.math.BigDecimal bigDecimal82 = objSchema77.getMaximum();
        java.math.BigDecimal bigDecimal83 = null;
        objSchema77.setMultipleOf(bigDecimal83);
        java.math.BigDecimal bigDecimal85 = objSchema77.getMaximum();
        java.lang.String str86 = objSchema77.getTitle();
        objSchema0.setNot((io.swagger.oas.models.media.Schema) objSchema77);
        io.swagger.oas.models.media.Discriminator discriminator88 = null;
        io.swagger.oas.models.media.Schema schema89 = objSchema77.discriminator(discriminator88);
        io.swagger.oas.models.media.Schema schema91 = schema89.maxLength((java.lang.Integer) 10);
        schema91.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.media.Schema schema46 = schema44.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean47 = schema46.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal48 = schema46.getMaximum();
        java.math.BigDecimal bigDecimal49 = schema46.getMultipleOf();
        java.lang.String str50 = schema46.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        schema7.setMaximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema7.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML22 = null;
        schema7.setXml(xML22);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        objSchema12.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setType("");
        java.math.BigDecimal bigDecimal27 = objSchema22.getMaximum();
        io.swagger.oas.models.media.Schema schema29 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int30 = objSchema22.getMinProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = objSchema22.getExtensions();
        objSchema12.setDefault((java.lang.Object) strMap31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema12.maximum(bigDecimal33);
        schema34.setFormat("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema7.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema23 = schema20.name("no description");
        io.swagger.oas.models.media.Schema schema25 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema20.setMultipleOf(bigDecimal26);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema3.setPattern("no description");
        objSchema3.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = null;
        io.swagger.oas.models.media.Schema schema10 = objSchema3.addProperties("*/*", schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema14.getMinLength();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema14);
        schema10.setMinProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema10);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = objSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema32 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setTitle("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = objSchema0.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema37.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = objSchema37.getExternalDocs();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema37.xml(xML51);
        java.lang.Boolean boolean53 = schema52.getNullable();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.maximum(bigDecimal54);
        java.lang.Integer int56 = schema55.getMinProperties();
        io.swagger.oas.models.media.Schema schema57 = schema36.not(schema55);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        objSchema34.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = objSchema34.pattern("*/*");
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.xml(xML46);
        java.lang.String str48 = schema45.getDescription();
        objSchema15.setAdditionalProperties(schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = schema45.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(externalDocumentation50);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        java.util.List<java.lang.String> strList20 = schema18.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        schema38.setTitle("*/*");
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.xml(xML43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema38.externalDocs(externalDocumentation45);
        schema30.addEnumItemObject((java.lang.Object) schema46);
        schema46.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setWriteOnly((java.lang.Boolean) true);
        schema46.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema18.addProperties("", schema46);
        io.swagger.oas.models.media.Schema schema56 = schema54.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("");
        schema26.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        schema26.setMultipleOf(bigDecimal29);
        schema26.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal45 = null;
        schema41.setMinimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema41.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema41.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.Object> objList51 = null;
        schema41.setEnum(objList51);
        io.swagger.oas.models.media.Schema schema54 = schema41.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema41.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema57 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema41);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.format("");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema7.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        objSchema12.setMaxProperties((java.lang.Integer) (-1));
        objSchema12.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        objSchema0.set$ref("#/components/schemas/no description");
        objSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        objSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema14.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.deprecated((java.lang.Boolean) true);
        java.lang.Integer int27 = schema26.getMaxItems();
        objSchema0.setAdditionalProperties(schema26);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean19 = schema7.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        schema9.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema9.maxLength((java.lang.Integer) 100);
        schema14.setFormat("");
        java.lang.String str17 = schema14.getDescription();
        schema14.setPattern("#/components/schemas/no description");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema40.pattern("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema31.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema49 = schema20.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema schema51 = schema47.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        objSchema52.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        io.swagger.oas.models.media.Schema schema69 = objSchema59.name(",");
        objSchema59.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema73 = objSchema59.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList74 = schema73.getEnum();
        io.swagger.oas.models.media.Schema schema76 = schema73.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = objSchema52.additionalProperties(schema76);
        io.swagger.oas.models.media.Schema schema79 = objSchema52.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema81 = schema79.nullable((java.lang.Boolean) false);
        schema51.setDefault((java.lang.Object) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(objList74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        java.lang.Boolean boolean33 = objSchema24.getWriteOnly();
        io.swagger.oas.annotations.media.Content content34 = null;
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(content34, produces35, produces36, components37);
        boolean boolean39 = objSchema24.equals((java.lang.Object) contentOptional38);
        schema21.addExtension("no description", (java.lang.Object) objSchema24);
        io.swagger.oas.models.media.XML xML41 = objSchema24.getXml();
        java.lang.Integer int42 = objSchema24.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema33.addExtension("", (java.lang.Object) objSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        objSchema37.setExternalDocs(externalDocumentation43);
        java.lang.String str45 = objSchema37.getName();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        schema57.setTitle("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema57.xml(xML62);
        schema57.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema57.$ref("*/*");
        schema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema57.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        objSchema72.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema72.properties(strMap79);
        io.swagger.oas.models.media.Schema schema82 = schema80.type("");
        io.swagger.oas.models.media.Schema schema84 = schema82.title("*/*");
        io.swagger.oas.models.media.Schema schema86 = schema84.description(",");
        java.lang.String[] strArray89 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        io.swagger.oas.models.media.Schema schema92 = schema84.required((java.util.List<java.lang.String>) strList90);
        schema71.setRequired((java.util.List<java.lang.String>) strList90);
        schema47.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema95 = objSchema0.required((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema96 = objSchema0.getAdditionalProperties();
        java.math.BigDecimal bigDecimal97 = objSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(schema96);
        org.junit.Assert.assertNull(bigDecimal97);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema10.getExtensions();
        java.lang.Integer int15 = schema10.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        schema18.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal22 = schema18.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = schema12.toString();
        io.swagger.oas.models.media.Schema schema23 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema12.getNullable();
        schema12.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal29 = null;
        objSchema28.setMultipleOf(bigDecimal29);
        objSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = objSchema33.getMinLength();
        objSchema28.addEnumItemObject((java.lang.Object) objSchema33);
        io.swagger.oas.models.media.Schema schema41 = objSchema33.readOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema44.addRequiredItem("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema48.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int51 = schema48.getMaxItems();
        java.lang.String str52 = schema48.get$ref();
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema48);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.minProperties((java.lang.Integer) (-1));
        java.lang.Integer int11 = schema10.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema8.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema24.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.xml(xML38);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.xml(xML40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        objSchema42.addExtension("", (java.lang.Object) objSchema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema46.setExternalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = objSchema46.addRequiredItem(",");
        schema55.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj58 = schema55.getExample();
        java.util.List<java.lang.String> strList59 = schema55.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema41.required(strList59);
        schema26.setRequired(strList59);
        io.swagger.oas.models.media.Schema schema62 = schema8.required(strList59);
        schema62.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema65.addProperties("*/*", schema71);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = schema72.getExtensions();
        io.swagger.oas.models.media.Schema schema75 = schema72.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.xml(xML76);
        io.swagger.oas.models.media.Schema schema79 = schema75.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema81 = schema79.nullable((java.lang.Boolean) true);
        schema62.setAdditionalProperties(schema81);
        io.swagger.oas.models.media.Schema schema84 = schema62.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema62.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str38 = objSchema0.getType();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema7.type(",");
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) true);
        schema22.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        schema56.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema10.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList57 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema59 = objSchema49.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema49.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = objSchema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.title("*/*");
        java.lang.Boolean boolean65 = objSchema49.getExclusiveMinimum();
        objSchema49.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = objSchema49.getUniqueItems();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema49.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.String str76 = objSchema71.getName();
        objSchema71.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList79 = objSchema71.getEnum();
        io.swagger.oas.models.media.Schema schema81 = objSchema71.name(",");
        objSchema71.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = objSchema71.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = schema85.getEnum();
        io.swagger.oas.models.media.Schema schema88 = schema85.uniqueItems((java.lang.Boolean) true);
        schema70.setAdditionalProperties(schema85);
        io.swagger.oas.models.media.Schema schema90 = schema48.additionalProperties(schema85);
        schema10.setNot(schema90);
        java.lang.Integer int92 = schema90.getMinItems();
        io.swagger.oas.models.media.Schema schema94 = schema90.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(objList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(objList79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema7.getExtensions();
        schema7.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        schema26.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema26.$ref("");
        java.lang.Object obj31 = schema26.getDefault();
        schema26.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        objSchema34.addExtension("", (java.lang.Object) objSchema38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        objSchema38.setExternalDocs(externalDocumentation44);
        java.lang.String str46 = objSchema38.getName();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) false);
        schema26.setNot(schema48);
        io.swagger.oas.models.media.Schema schema53 = schema26.title("*/*");
        java.lang.Integer int54 = schema26.getMinItems();
        schema15.setAdditionalProperties(schema26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.String str61 = objSchema56.getName();
        objSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList64 = objSchema56.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema15.additionalProperties((io.swagger.oas.models.media.Schema) objSchema56);
        java.lang.Boolean boolean68 = schema67.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator69 = schema67.getDiscriminator();
        io.swagger.oas.models.media.Schema schema71 = schema67.type("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema67.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        java.math.BigDecimal bigDecimal13 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema schema15 = schema9.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal16 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema9.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML19 = schema18.getXml();
        io.swagger.oas.models.media.Schema schema21 = schema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = schema23.getDeprecated();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(xML19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema29 = objSchema0.properties(strMap28);
        io.swagger.oas.models.media.XML xML30 = schema29.getXml();
        java.util.List<java.lang.Object> objList31 = schema29.getEnum();
        java.math.BigDecimal bigDecimal32 = schema29.getMinimum();
        java.lang.String str33 = schema29.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        schema19.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema19.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema25.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema27.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema14 = null;
        objSchema0.setAdditionalProperties(schema14);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMaximum();
        java.lang.String str9 = objSchema0.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        objSchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema15.getType();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        schema26.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        objSchema42.addExtension("", (java.lang.Object) objSchema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema46.setExternalDocs(externalDocumentation52);
        java.lang.String str54 = objSchema46.getName();
        io.swagger.oas.models.media.Schema schema56 = objSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema46.maximum(bigDecimal57);
        java.util.List<java.lang.String> strList59 = objSchema46.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        objSchema46.setExternalDocs(externalDocumentation60);
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema46);
        objSchema46.setUniqueItems((java.lang.Boolean) true);
        objSchema46.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strList59);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.maxLength((java.lang.Integer) (-1));
        objSchema0.setMinLength((java.lang.Integer) (-1));
        objSchema0.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = objSchema0.name("");
        io.swagger.oas.models.media.Schema schema24 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMaxLength((java.lang.Integer) 10);
        java.lang.String str13 = schema8.getPattern();
        java.lang.Object obj14 = schema8.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "no description" + "'", str13, "no description");
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        io.swagger.oas.models.media.Schema schema18 = schema16.maxLength((java.lang.Integer) 10);
        schema18.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        java.lang.Boolean boolean2 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema4 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        io.swagger.oas.models.media.Schema schema15 = objSchema6.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal16 = schema15.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        schema15.addExtension("#/components/schemas/", (java.lang.Object) objSchema18);
        io.swagger.jaxrs2.OperationParser operationParser24 = new io.swagger.jaxrs2.OperationParser();
        schema15.addEnumItemObject((java.lang.Object) operationParser24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        schema15.setAdditionalProperties(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema41.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema49.type("");
        io.swagger.oas.models.media.Schema schema53 = schema51.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal65 = null;
        schema61.setMinimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = schema61.maxLength((java.lang.Integer) 10);
        schema53.addEnumItemObject((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema71 = schema53.type("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = schema53.getProperties();
        io.swagger.oas.models.media.Schema schema73 = schema33.addProperties("", schema53);
        schema4.addExtension("#/components/schemas/hi!", (java.lang.Object) schema33);
        java.lang.Boolean boolean75 = schema4.getExclusiveMaximum();
        java.lang.Integer int76 = schema4.getMinProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int18 = schema13.getMaxLength();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.maxProperties((java.lang.Integer) 1);
        java.lang.String str32 = schema31.getFormat();
        io.swagger.oas.models.media.Schema schema34 = schema31.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema7.maxItems((java.lang.Integer) 100);
        java.lang.String str17 = schema16.getPattern();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean22 = objSchema21.getDeprecated();
        java.lang.Boolean boolean23 = objSchema21.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema25 = objSchema21.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema26.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        objSchema26.setProperties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = objSchema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = objSchema26.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        objSchema38.setProperties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = objSchema38.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int50 = objSchema38.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = objSchema26.additionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        java.lang.Integer int52 = objSchema38.getMinItems();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        io.swagger.oas.models.media.Schema schema54 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        schema16.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "no description" + "'", str17, "no description");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.String str43 = schema39.getDescription();
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.title("hi!");
        java.lang.Object obj56 = schema55.getExample();
        java.lang.String str57 = schema55.get$ref();
        io.swagger.oas.models.media.Schema schema58 = schema39.example((java.lang.Object) str57);
        java.lang.Integer int59 = schema39.getMaxItems();
        java.lang.Integer int60 = schema39.getMaxLength();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int60);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema32.maxProperties((java.lang.Integer) 0);
        objSchema32.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = objSchema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema32.type(",");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema32.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema56.getEnum();
        java.lang.Boolean boolean64 = objSchema56.getWriteOnly();
        java.lang.Boolean boolean65 = objSchema56.getWriteOnly();
        boolean boolean66 = schema50.equals((java.lang.Object) objSchema56);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema68.getExtensions();
        java.lang.String str70 = schema68.getType();
        io.swagger.oas.models.media.Schema schema72 = schema68.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean73 = schema68.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.pattern("#/components/schemas/no description");
        java.lang.Integer int13 = schema12.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        objSchema0.setMinItems((java.lang.Integer) 0);
        java.lang.Integer int13 = objSchema0.getMaxProperties();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) true);
        schema15.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = objSchema22.getNot();
        java.lang.Integer int28 = objSchema22.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = objSchema34.getMinLength();
        objSchema29.addEnumItemObject((java.lang.Object) objSchema34);
        objSchema29.setMinProperties((java.lang.Integer) 100);
        objSchema29.setPattern("");
        java.math.BigDecimal bigDecimal45 = objSchema29.getMultipleOf();
        java.lang.String[] strArray63 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        io.swagger.oas.models.media.Schema schema66 = objSchema29.required((java.util.List<java.lang.String>) strList64);
        java.util.List<java.lang.Object> objList67 = schema66.getEnum();
        objSchema22.setEnum(objList67);
        schema15.setEnum(objList67);
        io.swagger.oas.models.media.Schema schema71 = schema15.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(objList67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        io.swagger.oas.models.media.Schema schema61 = schema14.addProperties("hi!", (io.swagger.oas.models.media.Schema) objSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        objSchema62.addExtension("", (java.lang.Object) objSchema66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        objSchema66.setExternalDocs(externalDocumentation72);
        java.lang.String str74 = objSchema66.getName();
        io.swagger.oas.models.media.Schema schema76 = objSchema66.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema76.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int79 = schema78.getMinItems();
        schema78.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema14.not(schema78);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.externalDocs(externalDocumentation83);
        java.lang.String str85 = schema82.get$ref();
        java.lang.String str86 = schema82.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        java.lang.Integer int31 = schema12.getMinProperties();
        java.lang.Boolean boolean32 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema33.xml(xML43);
        io.swagger.oas.models.media.Schema schema46 = objSchema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema46.maxItems((java.lang.Integer) 0);
        boolean boolean51 = schema12.equals((java.lang.Object) schema50);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.Integer int43 = schema39.getMinLength();
        java.lang.String str44 = schema39.get$ref();
        java.lang.Integer int45 = schema39.getMinProperties();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema39.maximum(bigDecimal46);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema39.maximum(bigDecimal50);
        java.lang.Boolean boolean52 = schema51.getExclusiveMaximum();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        objSchema0.setType("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        schema27.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.minItems((java.lang.Integer) 100);
        java.lang.Integer int32 = schema31.getMaxLength();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.multipleOf(bigDecimal33);
        schema31.setMinLength((java.lang.Integer) 10);
        schema31.setType(",");
        io.swagger.oas.models.media.Schema schema40 = schema31.uniqueItems((java.lang.Boolean) true);
        schema31.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema31.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = objSchema0.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema47.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        java.lang.Object obj55 = schema52.getExample();
        io.swagger.oas.models.media.Schema schema56 = schema52.getNot();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(schema56);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("no description");
        schema30.setName("");
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema30.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema40 = schema7.example((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema41.properties(strMap48);
        schema49.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema49.minItems((java.lang.Integer) 100);
        java.lang.Integer int54 = schema53.getMaxLength();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.multipleOf(bigDecimal55);
        schema39.setExample((java.lang.Object) schema56);
        java.lang.Integer int58 = schema39.getMaxProperties();
        java.lang.Integer int59 = schema39.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator60 = schema39.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(discriminator60);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        schema9.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema9.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.description("");
        java.lang.Boolean boolean19 = schema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        java.lang.Object obj23 = objSchema20.getDefault();
        io.swagger.oas.models.media.Schema schema25 = objSchema20.uniqueItems((java.lang.Boolean) true);
        objSchema20.setUniqueItems((java.lang.Boolean) true);
        boolean boolean28 = schema15.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        objSchema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = objSchema13.exclusiveMinimum((java.lang.Boolean) true);
        objSchema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema13.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema7.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minLength((java.lang.Integer) 0);
        java.lang.Object obj14 = schema13.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema35.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal59 = null;
        schema55.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema55.maxLength((java.lang.Integer) 10);
        schema47.addEnumItemObject((java.lang.Object) schema62);
        io.swagger.oas.annotations.servers.Server server64 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray65 = new io.swagger.oas.annotations.servers.Server[] { server64 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional66 = io.swagger.jaxrs2.OperationParser.getServers(serverArray65);
        schema47.setDefault((java.lang.Object) serverListOptional66);
        io.swagger.oas.models.media.Schema schema69 = schema47.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema71 = schema47.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean72 = schema30.equals((java.lang.Object) schema71);
        schema30.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(serverArray65);
        org.junit.Assert.assertNotNull(serverListOptional66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.nullable((java.lang.Boolean) false);
        schema11.setDescription("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema7.getAdditionalProperties();
        java.lang.Boolean boolean23 = schema22.getReadOnly();
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema9.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema9.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.XML xML7 = objSchema0.getXml();
        java.math.BigDecimal bigDecimal8 = objSchema0.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objSchema0.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objSchema0.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objSchema0.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        schema13.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal40 = null;
        schema36.setMinimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema36.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        schema43.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str57 = schema43.get$ref();
        java.lang.Object obj58 = schema43.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal60 = null;
        objSchema59.setMultipleOf(bigDecimal60);
        objSchema59.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        objSchema59.setExternalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema59.properties(strMap82);
        schema43.setProperties(strMap82);
        io.swagger.oas.models.media.Schema schema85 = schema26.properties(strMap82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema85.getProperties();
        schema85.setExclusiveMinimum((java.lang.Boolean) false);
        schema85.setPattern("#/components/schemas/");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = null;
        io.swagger.oas.models.media.Schema schema84 = objSchema77.addProperties("*/*", schema83);
        io.swagger.oas.models.media.Schema schema86 = objSchema77.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML87 = null;
        io.swagger.oas.models.media.Schema schema88 = objSchema77.xml(xML87);
        io.swagger.oas.models.media.Schema schema90 = objSchema77.deprecated((java.lang.Boolean) false);
        schema90.set$ref("*/*");
        io.swagger.oas.models.media.XML xML93 = null;
        schema90.setXml(xML93);
        schema90.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator97 = null;
        schema90.setDiscriminator(discriminator97);
        boolean boolean99 = schema76.equals((java.lang.Object) discriminator97);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema73.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList80 = objSchema73.getEnum();
        java.lang.Boolean boolean81 = objSchema73.getNullable();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = schema83.getMaximum();
        io.swagger.oas.models.media.Schema schema85 = schema7.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema87 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema87.setPattern("no description");
        java.math.BigDecimal bigDecimal90 = null;
        objSchema87.setMinimum(bigDecimal90);
        java.lang.Boolean boolean92 = objSchema87.getReadOnly();
        io.swagger.oas.models.media.Schema schema93 = schema83.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema87);
        java.lang.String str94 = objSchema87.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(objList80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal25 = null;
        schema21.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema21.maxLength((java.lang.Integer) 10);
        java.lang.String str29 = schema21.getTitle();
        io.swagger.oas.models.media.Schema schema31 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema10.example((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema34 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema10.discriminator(discriminator35);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema10.discriminator(discriminator37);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.XML xML14 = null;
        schema13.setXml(xML14);
        java.util.List<java.lang.Object> objList16 = null;
        schema13.setEnum(objList16);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        java.lang.String str14 = objSchema5.getTitle();
        objSchema5.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = objSchema5.getExternalDocs();
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxItems((java.lang.Integer) 1);
        objSchema5.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        schema21.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema25);
        java.lang.Boolean boolean32 = schema21.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema34.properties(strMap63);
        java.lang.Object obj65 = schema64.getDefault();
        io.swagger.oas.models.media.Schema schema66 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        schema66.setMaxItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList69 = schema66.getRequired();
        schema13.setRequired(strList69);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema13.getProperties();
        java.lang.Integer int72 = schema13.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(int72);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema7.additionalProperties(schema26);
        java.lang.Object obj28 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema29 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema7.xml(xML30);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema7.xml(xML32);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema14.externalDocs(externalDocumentation21);
        schema22.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema0.externalDocs(externalDocumentation33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.minimum(bigDecimal35);
        java.lang.Integer int37 = schema36.getMinProperties();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        objSchema0.setType("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        schema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema31);
        java.lang.Boolean boolean38 = schema27.getNullable();
        io.swagger.oas.models.media.Schema schema40 = schema27.type(",");
        objSchema0.addExtension("*/*", (java.lang.Object) schema40);
        java.math.BigDecimal bigDecimal42 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.name(",");
        java.lang.Object obj25 = null;
        objSchema14.addEnumItemObject(obj25);
        java.lang.Boolean boolean27 = objSchema14.getWriteOnly();
        schema11.setNot((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema30 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.lang.Integer int12 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        schema16.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean19 = schema16.getNullable();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean10 = schema9.getExclusiveMaximum();
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 10);
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = objSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Object obj34 = objSchema0.getDefault();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        schema15.setType(",");
        java.lang.Integer int18 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMultipleOf(bigDecimal21);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema28);
        java.lang.Boolean boolean35 = schema24.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.name(",");
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        schema57.setTitle("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema57.xml(xML62);
        io.swagger.oas.models.media.Schema schema65 = schema57.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema67 = objSchema37.properties(strMap66);
        java.lang.Object obj68 = schema67.getDefault();
        io.swagger.oas.models.media.Schema schema69 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema24.getProperties();
        io.swagger.oas.models.media.Schema schema71 = schema15.properties(strMap70);
        java.lang.String str72 = schema71.getType();
        java.math.BigDecimal bigDecimal73 = schema71.getMaximum();
        java.lang.Integer int74 = schema71.getMaxItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(bigDecimal73);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.title("hi!");
        java.lang.Object obj27 = schema26.getExample();
        schema12.addEnumItemObject((java.lang.Object) schema26);
        java.lang.String str29 = schema12.getType();
        java.lang.String str30 = schema12.getTitle();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "*/*" + "'", str30, "*/*");
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        objSchema5.setFormat("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema18 = objSchema5.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMinimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList29 = objSchema21.getEnum();
        io.swagger.oas.models.media.Schema schema31 = objSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema21.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = objSchema21.getExternalDocs();
        java.lang.Integer int35 = objSchema21.getMaxLength();
        objSchema21.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = objSchema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema18.additionalProperties(schema39);
        java.lang.String str41 = schema18.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.addRequiredItem("");
        schema68.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal71 = null;
        schema68.setMultipleOf(bigDecimal71);
        schema68.setNullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = schema68.getProperties();
        schema18.setProperties(strMap75);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(objList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        schema32.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minLength((java.lang.Integer) 1);
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        schema13.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema18.set$ref("no description");
        objSchema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema38 = objSchema28.name(",");
        objSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema18.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = objSchema18.name("*/*");
        io.swagger.oas.models.media.Schema schema44 = objSchema18.getNot();
        io.swagger.oas.models.media.Schema schema46 = objSchema18.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int47 = schema46.getMaxProperties();
        java.math.BigDecimal bigDecimal48 = null;
        schema46.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema13.additionalProperties(schema46);
        schema50.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.Boolean boolean53 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema55 = objSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema0.externalDocs(externalDocumentation56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        java.lang.Integer int60 = schema59.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        schema68.setTitle("*/*");
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema68.xml(xML73);
        schema68.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema68.$ref("*/*");
        java.lang.Integer int79 = schema68.getMaxProperties();
        io.swagger.oas.models.media.Schema schema80 = schema59.example((java.lang.Object) schema68);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema15.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = objSchema15.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = objSchema15.getMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        objSchema31.setExternalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.XML xML46 = null;
        schema45.setXml(xML46);
        schema45.setTitle("*/*");
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.xml(xML50);
        io.swagger.oas.models.media.Schema schema53 = schema45.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = schema53.getProperties();
        io.swagger.oas.models.media.Schema schema55 = objSchema31.properties(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        objSchema56.setExternalDocs(externalDocumentation61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema63.addProperties("*/*", schema69);
        io.swagger.oas.models.media.XML xML71 = null;
        schema70.setXml(xML71);
        schema70.setTitle("*/*");
        io.swagger.oas.models.media.XML xML75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema70.xml(xML75);
        io.swagger.oas.models.media.Schema schema78 = schema70.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = schema78.getProperties();
        io.swagger.oas.models.media.Schema schema80 = objSchema56.properties(strMap79);
        schema55.setProperties(strMap79);
        io.swagger.oas.models.media.Schema schema83 = schema55.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.externalDocs(externalDocumentation84);
        io.swagger.oas.models.media.Schema schema86 = objSchema15.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema88 = schema83.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        objSchema0.setMinProperties((java.lang.Integer) 10);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML6 = objSchema0.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(xML6);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal17 = objSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = objSchema5.minProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema5.properties(strMap20);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        java.lang.Integer int12 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.lang.Boolean boolean24 = schema23.getReadOnly();
        java.lang.Integer int25 = schema23.getMaxItems();
        schema10.setNot(schema23);
        java.lang.Integer int27 = schema10.getMaxLength();
        schema10.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        objSchema0.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList21 = schema20.getRequired();
        io.swagger.oas.models.media.Schema schema22 = schema20.getAdditionalProperties();
        java.lang.Boolean boolean23 = schema20.getNullable();
        schema20.setWriteOnly((java.lang.Boolean) true);
        schema20.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema20.externalDocs(externalDocumentation28);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getExample();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.multipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        schema15.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Object obj54 = schema53.getExample();
        java.lang.Boolean boolean55 = schema53.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema56 = schema53.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + true + "'", boolean55, true);
        org.junit.Assert.assertNull(schema56);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema8.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema11.getExternalDocs();
        java.math.BigDecimal bigDecimal13 = schema11.getMinimum();
        java.lang.Object obj14 = schema11.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setMinProperties((java.lang.Integer) 0);
        schema40.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.name("#/components/schemas/hi!");
        java.util.List<java.lang.Object> objList27 = schema26.getEnum();
        java.lang.Boolean boolean28 = schema26.getReadOnly();
        io.swagger.oas.models.media.Schema schema29 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        schema26.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean30 = objSchema29.getDeprecated();
        java.lang.Boolean boolean31 = objSchema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = objSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema27.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.addRequiredItem("#/components/schemas/");
        java.lang.Object obj47 = schema46.getDefault();
        io.swagger.oas.models.media.XML xML48 = schema46.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema56.setRequired((java.util.List<java.lang.String>) strList68);
        schema46.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema34.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema74 = schema72.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str75 = schema72.getTitle();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "*/*" + "'", str75, "*/*");
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMaximum();
        java.lang.String str9 = objSchema0.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        objSchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        java.lang.Boolean boolean18 = schema15.getUniqueItems();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        java.lang.String str14 = objSchema5.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema5.discriminator(discriminator15);
        java.lang.String str17 = objSchema5.getTitle();
        java.lang.Boolean boolean18 = objSchema5.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema5.setMaximum(bigDecimal19);
        objSchema5.setMinItems((java.lang.Integer) 1);
        java.lang.String str23 = objSchema5.getName();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        schema10.setMinLength((java.lang.Integer) 1);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema10.getMaxLength();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.maxLength((java.lang.Integer) (-1));
        objSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = objSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = objSchema23.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = objSchema23.getExternalDocs();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema23.xml(xML37);
        io.swagger.oas.models.media.XML xML39 = null;
        objSchema23.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = objSchema23.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str43 = schema42.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        objSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema44.properties(strMap51);
        schema52.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema52.minItems((java.lang.Integer) 100);
        java.lang.Integer int57 = schema56.getMaxLength();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema56.multipleOf(bigDecimal58);
        schema56.setMinLength((java.lang.Integer) 10);
        schema56.setType(",");
        io.swagger.oas.models.media.Schema schema65 = schema56.uniqueItems((java.lang.Boolean) true);
        schema56.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema56.externalDocs(externalDocumentation68);
        io.swagger.oas.models.media.Schema schema71 = schema69.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema72 = schema42.additionalProperties(schema69);
        boolean boolean73 = objSchema0.equals((java.lang.Object) schema72);
        io.swagger.oas.models.media.Schema schema75 = schema72.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        java.math.BigDecimal bigDecimal55 = objSchema50.getMaximum();
        objSchema50.setMinLength((java.lang.Integer) 0);
        objSchema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str61 = schema12.getName();
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        schema12.setDiscriminator(discriminator62);
        java.math.BigDecimal bigDecimal64 = schema12.getMultipleOf();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(bigDecimal64);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.xml(xML24);
        schema18.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.math.BigDecimal bigDecimal18 = null;
        schema13.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema13.name("");
        java.lang.String str22 = schema21.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema21.getExternalDocs();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(externalDocumentation23);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList27 = objSchema19.getEnum();
        java.lang.Boolean boolean28 = objSchema19.getWriteOnly();
        java.lang.Boolean boolean29 = objSchema19.getReadOnly();
        io.swagger.oas.models.media.Schema schema31 = objSchema19.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema13.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML37 = schema13.getXml();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(xML37);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema11.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Integer int24 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) true);
        schema28.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal31 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal60 = null;
        objSchema59.setMultipleOf(bigDecimal60);
        objSchema59.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int69 = objSchema64.getMinLength();
        objSchema59.addEnumItemObject((java.lang.Object) objSchema64);
        objSchema64.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = objSchema64.maxProperties((java.lang.Integer) 0);
        objSchema64.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema78 = objSchema64.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = objSchema64.type(",");
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema64.minimum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = schema82.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema86 = schema82.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema41.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema82);
        java.lang.Integer int88 = schema87.getMaxProperties();
        java.lang.String str89 = schema87.getName();
        io.swagger.oas.models.media.Schema schema90 = schema28.additionalProperties(schema87);
        io.swagger.oas.models.media.Schema schema92 = schema28.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.title("");
        java.lang.Boolean boolean29 = schema28.getDeprecated();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema17.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        schema31.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema31.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema22.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = objSchema31.minItems((java.lang.Integer) 1);
        schema12.setAdditionalProperties(schema37);
        java.lang.Boolean boolean39 = schema37.getExclusiveMinimum();
        schema37.setWriteOnly((java.lang.Boolean) false);
        schema37.setDescription("");
        schema37.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        objSchema12.setProperties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int24 = objSchema12.getMaxItems();
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema12);
        java.lang.String str26 = objSchema0.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema0.externalDocs(externalDocumentation27);
        java.lang.Boolean boolean29 = schema28.getNullable();
        io.swagger.oas.models.media.Schema schema31 = schema28.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema28.type("");
        java.lang.Boolean boolean35 = schema34.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = objSchema37.getEnum();
        java.lang.Boolean boolean45 = objSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema37);
        io.swagger.oas.models.media.Schema schema50 = objSchema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema58.getExtensions();
        io.swagger.oas.models.media.Schema schema61 = schema58.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.xml(xML62);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        objSchema66.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = objSchema66.properties(strMap73);
        io.swagger.oas.models.media.Schema schema76 = schema74.type("");
        io.swagger.oas.models.media.Schema schema78 = schema76.title("*/*");
        io.swagger.oas.models.media.Schema schema80 = schema78.description(",");
        java.lang.String[] strArray83 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        io.swagger.oas.models.media.Schema schema86 = schema78.required((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema87 = schema61.required((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema87.externalDocs(externalDocumentation88);
        io.swagger.oas.models.media.Schema schema91 = schema87.writeOnly((java.lang.Boolean) false);
        boolean boolean92 = objSchema37.equals((java.lang.Object) schema87);
        java.math.BigDecimal bigDecimal93 = null;
        objSchema37.setMultipleOf(bigDecimal93);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        java.lang.Boolean boolean33 = objSchema24.getWriteOnly();
        io.swagger.oas.annotations.media.Content content34 = null;
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(content34, produces35, produces36, components37);
        boolean boolean39 = objSchema24.equals((java.lang.Object) contentOptional38);
        schema21.addExtension("no description", (java.lang.Object) objSchema24);
        io.swagger.oas.models.media.Schema schema42 = schema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema21.minItems((java.lang.Integer) 0);
        schema21.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        schema28.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema40.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = schema40.getDeprecated();
        io.swagger.oas.models.media.Schema schema44 = schema28.not(schema40);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema57 = schema54.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.xml(xML58);
        io.swagger.oas.models.media.Schema schema61 = schema57.maxItems((java.lang.Integer) 0);
        schema61.setMinItems((java.lang.Integer) 1);
        schema61.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema82.setPattern("no description");
        objSchema82.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int87 = objSchema82.getMinLength();
        objSchema77.addEnumItemObject((java.lang.Object) objSchema82);
        objSchema82.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int91 = objSchema82.getMaxLength();
        schema73.addExtension("no description", (java.lang.Object) objSchema82);
        io.swagger.oas.models.media.Schema schema94 = schema73.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = schema73.getExtensions();
        schema61.setExtensions(strMap95);
        schema40.setExtensions(strMap95);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.String str13 = objSchema8.getName();
        objSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList16 = objSchema8.getEnum();
        io.swagger.oas.models.media.Schema schema18 = objSchema8.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema8.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = objSchema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("#/components/schemas/");
        objSchema23.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = objSchema8.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema23);
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 1);
        schema41.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.additionalProperties(schema41);
        java.math.BigDecimal bigDecimal47 = null;
        schema46.setMultipleOf(bigDecimal47);
        java.util.List<java.lang.Object> objList49 = schema46.getEnum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(objList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(objList49);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = objSchema0.getExclusiveMinimum();
        objSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = objSchema0.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema32.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema31.properties(strMap61);
        objSchema12.setProperties(strMap61);
        io.swagger.oas.models.media.Schema schema66 = objSchema12.maxItems((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass67 = schema66.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinProperties();
        schema9.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema9.setDiscriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema9.getWriteOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        objSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int11 = objSchema0.getMaxProperties();
        java.lang.Integer int12 = objSchema0.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        objSchema5.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema26.setXml(xML27);
        schema26.setTitle("*/*");
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.xml(xML31);
        schema26.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema26.$ref("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema36.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema38.getReadOnly();
        schema38.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = schema38.getMaximum();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.multipleOf(bigDecimal43);
        objSchema5.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) bigDecimal43);
        io.swagger.oas.models.media.Discriminator discriminator46 = objSchema5.getDiscriminator();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator46);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.lang.Object obj10 = objSchema0.getExample();
        io.swagger.oas.models.media.XML xML11 = objSchema0.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(xML11);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str9 = schema6.getPattern();
        schema6.setDescription("hi!");
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "no description" + "'", str9, "no description");
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        io.swagger.oas.models.media.Schema schema25 = objSchema16.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = schema25.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema25.additionalProperties(schema34);
        java.lang.Boolean boolean40 = schema34.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal41 = null;
        schema34.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema34.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema13.not(schema34);
        io.swagger.oas.models.media.Schema schema47 = schema34.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        java.lang.Boolean boolean33 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema35 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = schema35.getName();
        java.lang.Integer int37 = schema35.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        java.lang.String str34 = schema27.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = objSchema35.title("hi!");
        java.lang.Object obj42 = null;
        objSchema35.addEnumItemObject(obj42);
        io.swagger.oas.models.media.Schema schema45 = objSchema35.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema47 = objSchema35.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.Schema schema57 = objSchema48.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = objSchema48.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        schema67.setTitle("*/*");
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema67.xml(xML72);
        io.swagger.oas.models.media.Schema schema75 = schema67.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema75.getProperties();
        io.swagger.oas.models.media.Schema schema77 = objSchema48.properties(strMap76);
        objSchema35.setProperties(strMap76);
        java.lang.Integer int79 = objSchema35.getMaxItems();
        boolean boolean80 = schema27.equals((java.lang.Object) objSchema35);
        java.lang.Boolean boolean81 = objSchema35.getNullable();
        io.swagger.oas.models.media.Schema schema82 = null;
        io.swagger.oas.models.media.Schema schema83 = objSchema35.not(schema82);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "no description" + "'", str34, "no description");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema40.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema40.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = objSchema51.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = objSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.title("*/*");
        java.lang.Boolean boolean67 = objSchema51.getExclusiveMinimum();
        objSchema51.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = objSchema51.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        objSchema51.setProperties(strMap72);
        objSchema51.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = objSchema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        objSchema78.setRequired((java.util.List<java.lang.String>) strList85);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = objSchema40.required((java.util.List<java.lang.String>) strList85);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList85);
        java.math.BigDecimal bigDecimal91 = null;
        objSchema27.setMinimum(bigDecimal91);
        io.swagger.oas.models.media.Discriminator discriminator93 = objSchema27.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(discriminator93);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        io.swagger.oas.models.media.Schema schema58 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        schema58.setReadOnly((java.lang.Boolean) true);
        java.lang.String str61 = schema58.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema58.discriminator(discriminator62);
        io.swagger.oas.models.media.Discriminator discriminator64 = schema63.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int20 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema21.addRequiredItem("#/components/schemas/");
        schema30.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = schema30.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = objSchema42.getMinLength();
        objSchema37.addEnumItemObject((java.lang.Object) objSchema42);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean51 = objSchema42.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema52.addRequiredItem("#/components/schemas/");
        java.lang.Object obj62 = schema61.getDefault();
        io.swagger.oas.models.media.XML xML63 = schema61.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema64.addProperties("*/*", schema70);
        io.swagger.oas.models.media.XML xML72 = null;
        schema71.setXml(xML72);
        schema71.setTitle("*/*");
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        schema71.setRequired((java.util.List<java.lang.String>) strList83);
        schema61.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema87 = objSchema42.required((java.util.List<java.lang.String>) strList83);
        schema35.setRequired((java.util.List<java.lang.String>) strList83);
        schema15.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema91 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Object> objList92 = schema15.getEnum();
        java.lang.Boolean boolean93 = schema15.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + true + "'", boolean51, true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(objList92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema15.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.title("hi!");
        java.lang.Object obj30 = schema29.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.util.List<java.lang.String> strList49 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema50 = schema29.addProperties("", schema47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int76 = objSchema67.getMaxLength();
        schema58.addExtension("no description", (java.lang.Object) objSchema67);
        io.swagger.oas.models.media.Schema schema79 = schema58.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema58.getExtensions();
        schema50.setExtensions(strMap80);
        schema13.setExtensions(strMap80);
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema86);
        io.swagger.oas.models.media.Schema schema89 = schema13.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        objSchema13.setRequired((java.util.List<java.lang.String>) strList20);
        io.swagger.oas.models.media.Schema schema24 = objSchema13.pattern("*/*");
        java.lang.Boolean boolean25 = schema24.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        objSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema26.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema46.getExtensions();
        io.swagger.oas.models.media.Schema schema49 = schema46.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal50 = null;
        schema46.setMinimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema46.maxLength((java.lang.Integer) 10);
        schema38.addEnumItemObject((java.lang.Object) schema53);
        java.math.BigDecimal bigDecimal55 = schema53.getMinimum();
        schema53.setType("#/components/schemas/no description");
        schema24.setExample((java.lang.Object) schema53);
        schema10.addExtension("", (java.lang.Object) schema24);
        java.math.BigDecimal bigDecimal60 = schema24.getMultipleOf();
        schema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal65 = null;
        schema24.setMaximum(bigDecimal65);
        java.lang.Object obj67 = schema24.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str15 = schema14.getName();
        java.math.BigDecimal bigDecimal16 = null;
        schema14.setMinimum(bigDecimal16);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = schema13.getTitle();
        java.math.BigDecimal bigDecimal15 = null;
        schema13.setMultipleOf(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = schema13.getMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = objSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = objSchema10.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = objSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema41 = schema38.addRequiredItem("#/components/schemas/");
        objSchema25.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = objSchema10.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema25);
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML46 = schema43.getXml();
        io.swagger.oas.models.media.Schema schema48 = schema43.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema9.example((java.lang.Object) schema43);
        java.lang.Object obj50 = schema43.getDefault();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = objSchema0.getReadOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("");
        io.swagger.oas.models.media.Schema schema40 = schema36.description("");
        io.swagger.oas.models.media.Schema schema41 = objSchema0.example((java.lang.Object) schema36);
        java.lang.Integer int42 = objSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema43 = objSchema0.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(schema43);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator26 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema37.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("");
        io.swagger.oas.models.media.Schema schema48 = objSchema27.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema50 = objSchema27.readOnly((java.lang.Boolean) false);
        objSchema0.setAdditionalProperties(schema50);
        java.lang.Integer int52 = objSchema0.getMaxLength();
        java.lang.Object obj53 = objSchema0.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema13.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema8.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema schema4 = objSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema4.readOnly((java.lang.Boolean) false);
        schema4.setTitle("no description");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = objSchema34.getMinLength();
        objSchema29.addEnumItemObject((java.lang.Object) objSchema34);
        objSchema34.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int43 = objSchema34.getMaxLength();
        schema25.addExtension("no description", (java.lang.Object) objSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema25.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema25.getExtensions();
        schema17.setExtensions(strMap47);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema17.xml(xML49);
        java.util.List<java.lang.String> strList51 = schema17.getRequired();
        java.lang.String str52 = schema17.toString();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str52, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema7.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.XML xML7 = objSchema0.getXml();
        java.math.BigDecimal bigDecimal8 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        java.lang.Integer int23 = objSchema17.getMinProperties();
        java.math.BigDecimal bigDecimal24 = objSchema17.getMultipleOf();
        objSchema17.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema10.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        java.lang.String str38 = objSchema29.getTitle();
        objSchema29.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema29.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema45.getNot();
        java.lang.Integer int51 = objSchema45.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema52.setMultipleOf(bigDecimal53);
        objSchema52.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int62 = objSchema57.getMinLength();
        objSchema52.addEnumItemObject((java.lang.Object) objSchema57);
        objSchema52.setMinProperties((java.lang.Integer) 100);
        objSchema52.setPattern("");
        java.math.BigDecimal bigDecimal68 = objSchema52.getMultipleOf();
        java.lang.String[] strArray86 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        io.swagger.oas.models.media.Schema schema89 = objSchema52.required((java.util.List<java.lang.String>) strList87);
        java.util.List<java.lang.Object> objList90 = schema89.getEnum();
        objSchema45.setEnum(objList90);
        schema44.setEnum(objList90);
        schema10.setEnum(objList90);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(objList90);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.nullable((java.lang.Boolean) true);
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.Object obj16 = objSchema0.getExample();
        objSchema0.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int29 = objSchema24.getMinLength();
        objSchema19.addEnumItemObject((java.lang.Object) objSchema24);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = objSchema24.maxProperties((java.lang.Integer) 0);
        objSchema24.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal48 = schema47.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        schema47.addExtension("#/components/schemas/", (java.lang.Object) objSchema50);
        io.swagger.jaxrs2.OperationParser operationParser56 = new io.swagger.jaxrs2.OperationParser();
        schema47.addEnumItemObject((java.lang.Object) operationParser56);
        io.swagger.oas.models.media.Schema schema58 = objSchema24.addProperties("no description", schema47);
        java.math.BigDecimal bigDecimal59 = null;
        schema58.setMultipleOf(bigDecimal59);
        java.lang.String str61 = schema58.getPattern();
        java.lang.Integer int62 = schema58.getMinLength();
        java.lang.String str63 = schema58.get$ref();
        java.lang.Integer int64 = schema58.getMinProperties();
        java.lang.String str65 = schema58.getType();
        io.swagger.oas.models.media.Schema schema67 = schema58.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema67.maxProperties((java.lang.Integer) 0);
        objSchema0.setExample((java.lang.Object) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "no description" + "'", str61, "no description");
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema schema56 = schema54.type("");
        schema54.setMinProperties((java.lang.Integer) 1);
        java.lang.Object obj59 = schema54.getExample();
        io.swagger.oas.models.media.Schema schema61 = schema54.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setMinProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = objSchema13.not(schema23);
        schema10.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema10.multipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema43.setExternalDocs(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        java.lang.Object obj16 = null;
        schema7.setDefault(obj16);
        io.swagger.oas.models.media.Schema schema19 = schema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.externalDocs(externalDocumentation22);
        schema21.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        java.lang.Integer int22 = schema21.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.externalDocs(externalDocumentation23);
        schema21.setMaxProperties((java.lang.Integer) 100);
        schema21.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema12.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.Schema schema52 = objSchema43.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        java.math.BigDecimal bigDecimal54 = null;
        schema52.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema52.getAdditionalProperties();
        java.math.BigDecimal bigDecimal57 = schema52.getMultipleOf();
        schema52.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema61 = schema12.properties(strMap60);
        io.swagger.oas.models.media.Schema schema63 = schema61.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        schema7.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setWriteOnly((java.lang.Boolean) true);
        schema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean32 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema24.minProperties((java.lang.Integer) 1);
        java.lang.String str37 = schema36.getName();
        schema36.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema35.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal59 = null;
        schema55.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema55.maxLength((java.lang.Integer) 10);
        schema47.addEnumItemObject((java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema schema65 = schema47.type("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema67 = schema27.addProperties("", schema47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema47.externalDocs(externalDocumentation68);
        io.swagger.oas.models.media.XML xML70 = null;
        schema69.setXml(xML70);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        java.lang.Integer int28 = schema24.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("*/*");
        io.swagger.oas.models.media.Schema schema34 = schema32.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML16 = schema10.getXml();
        java.lang.Integer int17 = schema10.getMinProperties();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema10.maximum(bigDecimal18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema10.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema25.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal49 = null;
        schema45.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema45.maxLength((java.lang.Integer) 10);
        schema37.addEnumItemObject((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.name("");
        io.swagger.oas.models.media.Schema schema56 = objSchema0.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.math.BigDecimal bigDecimal57 = schema52.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema52.discriminator(discriminator58);
        schema52.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMaximum();
        java.lang.String str15 = objSchema0.get$ref();
        java.lang.Boolean boolean16 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema17.set$ref("no description");
        objSchema17.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.String str32 = objSchema27.getName();
        objSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList35 = objSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema27.name(",");
        objSchema27.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema17.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = objSchema17.name("*/*");
        io.swagger.oas.models.media.Schema schema43 = objSchema17.getNot();
        io.swagger.oas.models.media.Schema schema45 = objSchema17.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema49.maximum(bigDecimal57);
        objSchema49.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal62 = null;
        objSchema61.setMultipleOf(bigDecimal62);
        objSchema61.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = objSchema61.title("hi!");
        java.lang.Object obj68 = null;
        objSchema61.addEnumItemObject(obj68);
        objSchema61.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = objSchema49.not((io.swagger.oas.models.media.Schema) objSchema61);
        io.swagger.oas.models.media.Schema schema73 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema61);
        io.swagger.oas.models.media.Schema schema75 = objSchema61.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal77 = null;
        objSchema76.setMultipleOf(bigDecimal77);
        objSchema76.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema76.set$ref("no description");
        java.util.List<java.lang.Object> objList83 = objSchema76.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema76.discriminator(discriminator84);
        schema85.setTitle("hi!");
        io.swagger.oas.models.media.Discriminator discriminator88 = schema85.getDiscriminator();
        schema85.setType(",");
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema85.maximum(bigDecimal91);
        io.swagger.oas.models.media.Schema schema93 = objSchema61.additionalProperties(schema85);
        java.util.List<java.lang.Object> objList94 = schema93.getEnum();
        objSchema0.setEnum(objList94);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(objList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(objList83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(discriminator88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(objList94);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema7.addExtension("#/components/schemas/", (java.lang.Object) schema21);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema7.xml(xML24);
        java.lang.String str26 = schema7.getName();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema7.xml(xML27);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.title("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.$ref("hi!");
        java.lang.String str30 = schema29.getName();
        java.math.BigDecimal bigDecimal31 = schema29.getMultipleOf();
        java.math.BigDecimal bigDecimal32 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = objSchema44.getMinLength();
        schema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.Boolean boolean51 = schema40.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.String str58 = objSchema53.getName();
        objSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList61 = objSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name(",");
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema53.properties(strMap82);
        java.lang.Object obj84 = schema83.getDefault();
        io.swagger.oas.models.media.Schema schema85 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema29.properties(strMap86);
        io.swagger.oas.models.media.Schema schema88 = objSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema87);
        io.swagger.oas.models.media.Schema schema90 = objSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String str91 = schema90.getTitle();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(objList61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "#/components/schemas/no description" + "'", str91, "#/components/schemas/no description");
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema34.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema44 = objSchema20.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.format(",");
        io.swagger.oas.models.media.Schema schema47 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema49 = objSchema20.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal50 = null;
        objSchema20.setMinimum(bigDecimal50);
        java.math.BigDecimal bigDecimal52 = objSchema20.getMaximum();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal52);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        objSchema8.addExtension("", (java.lang.Object) objSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema12.setExternalDocs(externalDocumentation18);
        java.lang.String str20 = objSchema12.getName();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.title(",");
        java.lang.Integer int27 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.additionalProperties(schema26);
        objSchema0.setTitle("");
        io.swagger.oas.models.media.Schema schema32 = objSchema0.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        objSchema35.addExtension("", (java.lang.Object) objSchema39);
        objSchema35.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema48 = objSchema35.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        schema50.setProperties(strMap51);
        schema32.setExample((java.lang.Object) strMap51);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema7.getNot();
        io.swagger.oas.models.media.Discriminator discriminator17 = schema7.getDiscriminator();
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema29.additionalProperties(schema38);
        java.lang.String str44 = schema38.getName();
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        java.math.BigDecimal bigDecimal52 = objSchema47.getMaximum();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema47.setMultipleOf(bigDecimal53);
        java.math.BigDecimal bigDecimal55 = objSchema47.getMaximum();
        objSchema47.setDescription("*/*");
        schema46.setNot((io.swagger.oas.models.media.Schema) objSchema47);
        java.util.List<java.lang.String> strList59 = schema46.getRequired();
        java.lang.Integer int60 = schema46.getMaxProperties();
        schema46.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList63 = null;
        schema46.setRequired(strList63);
        io.swagger.oas.models.media.Schema schema66 = schema46.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema7.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema71 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema11.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minItems((java.lang.Integer) 1);
        schema16.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = schema16.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema20.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = objSchema34.title("*/*");
        io.swagger.oas.models.media.Schema schema50 = objSchema20.not((io.swagger.oas.models.media.Schema) objSchema34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        objSchema51.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema51.set$ref("no description");
        objSchema51.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.String str66 = objSchema61.getName();
        objSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList69 = objSchema61.getEnum();
        io.swagger.oas.models.media.Schema schema71 = objSchema61.name(",");
        objSchema61.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema51.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema76 = objSchema51.name("*/*");
        objSchema20.setDefault((java.lang.Object) schema76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = objSchema20.getExternalDocs();
        objSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema20.xml(xML81);
        io.swagger.oas.models.media.Schema schema83 = schema16.not((io.swagger.oas.models.media.Schema) objSchema20);
        java.lang.String str84 = objSchema20.getFormat();
        java.lang.String str85 = objSchema20.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(objList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(externalDocumentation78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        java.lang.Integer int14 = schema10.getMinLength();
        io.swagger.oas.models.media.XML xML15 = schema10.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.name(",");
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.XML xML37 = null;
        schema36.setXml(xML37);
        schema36.setTitle("*/*");
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema36.xml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema36.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = schema44.getProperties();
        io.swagger.oas.models.media.Schema schema46 = objSchema16.properties(strMap45);
        schema46.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal49 = schema46.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema52.addExtension("", (java.lang.Object) objSchema56);
        objSchema52.set$ref("*/*");
        schema46.addEnumItemObject((java.lang.Object) objSchema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        objSchema65.addExtension("", (java.lang.Object) objSchema69);
        objSchema65.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema78 = objSchema65.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean79 = schema78.getUniqueItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema78.getExtensions();
        objSchema52.setExtensions(strMap80);
        schema10.setExtensions(strMap80);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema25.addRequiredItem("#/components/schemas/no description");
        java.lang.String str30 = schema25.getFormat();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema10.readOnly((java.lang.Boolean) false);
        java.lang.String str16 = schema10.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setMaxProperties((java.lang.Integer) 1);
        objSchema17.setName("#/components/schemas/");
        java.lang.Integer int24 = objSchema17.getMaxItems();
        objSchema17.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = objSchema17.getProperties();
        io.swagger.oas.models.media.Schema schema29 = objSchema17.maxLength((java.lang.Integer) (-1));
        schema10.setExample((java.lang.Object) (-1));
        java.lang.String str31 = schema10.getTitle();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema24.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.format("");
        java.math.BigDecimal bigDecimal16 = schema15.getMaximum();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>> strListSchema54 = new io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = schema7.not((io.swagger.oas.models.media.Schema) strListSchema54);
        java.lang.Integer int56 = schema55.getMaxItems();
        io.swagger.oas.models.media.Schema schema58 = schema55.format("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        objSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema59.properties(strMap66);
        schema67.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        schema67.setExtensions(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema73.addProperties("*/*", schema79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = schema80.getExtensions();
        io.swagger.oas.models.media.Schema schema83 = schema80.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema80.xml(xML84);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = schema85.getExtensions();
        schema67.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema85);
        io.swagger.oas.models.media.Schema schema88 = schema85.getNot();
        io.swagger.oas.models.media.Schema schema89 = schema55.additionalProperties(schema88);
        java.lang.Boolean boolean90 = schema89.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.util.List<java.lang.Object> objList9 = objSchema0.getEnum();
        objSchema0.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objSchema0.getExtensions();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema0.setMultipleOf(bigDecimal13);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(objList9);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal19 = objSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.XML xML22 = null;
        schema21.setXml(xML22);
        schema21.setTitle("*/*");
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.xml(xML26);
        java.lang.Boolean boolean28 = schema21.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema30 = schema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = objSchema31.getName();
        objSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.addRequiredItem("#/components/schemas/");
        java.lang.Object obj41 = objSchema31.getDefault();
        io.swagger.oas.models.media.Schema schema43 = objSchema31.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema44.getNot();
        java.lang.Integer int50 = objSchema44.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        objSchema51.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int61 = objSchema56.getMinLength();
        objSchema51.addEnumItemObject((java.lang.Object) objSchema56);
        objSchema51.setMinProperties((java.lang.Integer) 100);
        objSchema51.setPattern("");
        java.math.BigDecimal bigDecimal67 = objSchema51.getMultipleOf();
        java.lang.String[] strArray85 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        io.swagger.oas.models.media.Schema schema88 = objSchema51.required((java.util.List<java.lang.String>) strList86);
        java.util.List<java.lang.Object> objList89 = schema88.getEnum();
        objSchema44.setEnum(objList89);
        schema43.setEnum(objList89);
        schema30.setEnum(objList89);
        schema13.setEnum(objList89);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(objList89);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxLength((java.lang.Integer) 10);
        schema12.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        objSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minProperties((java.lang.Integer) 100);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = objSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema32.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema31.properties(strMap61);
        objSchema12.setProperties(strMap61);
        java.lang.Integer int65 = objSchema12.getMinProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int65);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        schema7.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        schema18.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema18);
        java.lang.Boolean boolean26 = schema18.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema28 = schema18.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int29 = schema18.getMaxLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema18.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.name(",");
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema24.properties(strMap53);
        io.swagger.oas.models.media.Schema schema55 = schema23.properties(strMap53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema58.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.title("*/*");
        io.swagger.oas.models.media.Schema schema71 = schema55.example((java.lang.Object) schema70);
        java.lang.String str72 = schema70.getType();
        io.swagger.oas.models.media.Schema schema74 = schema70.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = schema9.example((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema77 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema9.nullable((java.lang.Boolean) false);
        schema79.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.addRequiredItem("#/components/schemas/");
        java.lang.Object obj28 = schema27.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema27.getExtensions();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema39.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = objSchema43.getMinLength();
        schema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema43);
        java.lang.Boolean boolean50 = schema39.getNullable();
        io.swagger.oas.models.media.Schema schema52 = schema39.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema27.additionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema54 = objSchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        io.swagger.oas.models.media.Schema schema56 = schema54.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema56.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema56.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        schema18.setNot(schema33);
        schema18.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setExclusiveMinimum((java.lang.Boolean) false);
        schema40.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        schema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = schema15.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        objSchema30.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema30.properties(strMap53);
        schema14.setProperties(strMap53);
        schema14.setDeprecated((java.lang.Boolean) true);
        java.lang.String str58 = schema14.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "no description" + "'", str58, "no description");
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.Boolean boolean34 = schema33.getUniqueItems();
        java.lang.Boolean boolean35 = schema33.getReadOnly();
        schema33.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema29 = objSchema0.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema31.readOnly((java.lang.Boolean) false);
        schema33.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML24 = schema7.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema32.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        schema32.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema36);
        schema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        schema32.setDefault((java.lang.Object) xML57);
        io.swagger.oas.models.media.Schema schema61 = schema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema32.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        schema7.setAdditionalProperties(schema32);
        schema7.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        schema21.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.xml(xML24);
        java.lang.Integer int26 = schema25.getMaxProperties();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        java.lang.Integer int28 = schema24.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema32 = schema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal43 = schema42.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        schema51.setXml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("*/*");
        io.swagger.oas.models.media.Schema schema56 = schema42.additionalProperties(schema51);
        io.swagger.oas.models.media.Schema schema58 = schema42.readOnly((java.lang.Boolean) false);
        java.lang.String str59 = schema58.getDescription();
        java.lang.Boolean boolean60 = schema58.getReadOnly();
        io.swagger.oas.models.media.Schema schema62 = schema58.minLength((java.lang.Integer) 100);
        schema32.addEnumItemObject((java.lang.Object) schema62);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + false + "'", boolean60, false);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = objSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.externalDocs(externalDocumentation18);
        java.lang.String str20 = schema19.getName();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.multipleOf(bigDecimal21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        java.lang.Boolean boolean24 = schema22.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        objSchema30.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema30.properties(strMap53);
        schema14.setProperties(strMap53);
        schema14.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        schema65.setRequired((java.util.List<java.lang.String>) strList77);
        schema14.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema82 = schema14.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal83 = schema82.getMinimum();
        io.swagger.oas.models.media.Schema schema85 = schema82.title("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema82.title("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = objSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) false);
        schema17.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Boolean boolean25 = objSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = null;
        objSchema29.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema37 = objSchema29.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema37.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = schema37.addRequiredItem("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str42 = schema37.getDescription();
        objSchema0.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) str42);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList52 = objSchema44.getEnum();
        java.util.List<java.lang.Object> objList53 = objSchema44.getEnum();
        java.lang.String str54 = objSchema44.getName();
        io.swagger.oas.models.media.Schema schema55 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.String str56 = objSchema0.getPattern();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(objList52);
        org.junit.Assert.assertNull(objList53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "no description" + "'", str56, "no description");
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        schema52.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int55 = schema52.getMinProperties();
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.multipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema57.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.maximum(bigDecimal60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema schema65 = schema63.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema63.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str68 = schema67.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.String str27 = objSchema22.getName();
        objSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema22.getEnum();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) false);
        schema32.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str35 = schema32.get$ref();
        io.swagger.oas.models.media.Schema schema37 = schema32.maxProperties((java.lang.Integer) 1);
        java.lang.String str38 = schema37.toString();
        schema37.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean41 = schema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = schema37.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema21.not(schema37);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = schema52.getExtensions();
        io.swagger.oas.models.media.Schema schema55 = schema52.minProperties((java.lang.Integer) 10);
        schema52.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema52.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        objSchema60.addExtension("", (java.lang.Object) objSchema64);
        io.swagger.oas.models.media.Schema schema71 = objSchema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = schema52.additionalProperties(schema71);
        java.lang.Boolean boolean73 = schema71.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        objSchema74.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema74.properties(strMap81);
        io.swagger.oas.models.media.Schema schema84 = schema82.type("");
        io.swagger.oas.models.media.Schema schema86 = schema84.title("*/*");
        io.swagger.oas.models.media.Schema schema88 = schema86.description(",");
        java.lang.String[] strArray91 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        io.swagger.oas.models.media.Schema schema94 = schema86.required((java.util.List<java.lang.String>) strList92);
        schema71.setRequired((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema96 = schema44.required((java.util.List<java.lang.String>) strList92);
        java.math.BigDecimal bigDecimal97 = schema96.getMaximum();
        schema96.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str38, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(bigDecimal97);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setWriteOnly((java.lang.Boolean) true);
        schema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean32 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema24.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        java.lang.String str37 = schema36.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        java.lang.String str30 = schema25.getType();
        io.swagger.oas.models.media.Schema schema32 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema18.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema15.getNullable();
        java.lang.String str21 = schema15.getName();
        java.lang.Boolean boolean22 = schema15.getExclusiveMaximum();
        java.lang.Object obj23 = schema15.getDefault();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.xml(xML25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema11.addProperties(",", schema26);
        java.lang.Boolean boolean29 = schema11.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema11.getProperties();
        schema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.nullable((java.lang.Boolean) true);
        schema36.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: #/components/schemas/\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getAdditionalProperties();
        objSchema0.setTitle("no description");
        io.swagger.oas.models.media.Schema schema18 = objSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.readOnly((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        objSchema50.setExternalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.XML xML65 = null;
        schema64.setXml(xML65);
        schema64.setTitle("*/*");
        io.swagger.oas.models.media.XML xML69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema64.xml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema64.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema72.getProperties();
        io.swagger.oas.models.media.Schema schema74 = objSchema50.properties(strMap73);
        schema49.setProperties(strMap73);
        java.lang.String str76 = schema49.getType();
        io.swagger.oas.models.media.Discriminator discriminator77 = schema49.getDiscriminator();
        java.lang.Boolean boolean78 = schema49.getDeprecated();
        io.swagger.oas.models.media.Schema schema79 = schema24.additionalProperties(schema49);
        java.lang.Integer int80 = schema49.getMinItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(discriminator77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean11 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = schema10.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str12 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.maximum(bigDecimal15);
        schema14.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        java.lang.Integer int47 = schema46.getMaxItems();
        java.lang.Object obj48 = schema46.getDefault();
        io.swagger.oas.models.media.Schema schema50 = schema46.maxLength((java.lang.Integer) 1);
        schema46.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.xml(xML18);
        schema15.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = schema15.getMultipleOf();
        io.swagger.oas.models.media.Schema schema24 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        schema13.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema13.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema13.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema21.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.maximum(bigDecimal25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema21.discriminator(discriminator27);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.exclusiveMaximum((java.lang.Boolean) false);
        objSchema29.setMinProperties((java.lang.Integer) 100);
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema29.externalDocs(externalDocumentation44);
        objSchema29.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator26 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema37.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("");
        io.swagger.oas.models.media.Schema schema48 = objSchema27.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema50 = objSchema27.readOnly((java.lang.Boolean) false);
        objSchema0.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema53 = schema50.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = objSchema54.title("hi!");
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema62.$ref("no description");
        schema62.setName("");
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema62.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema62.minimum(bigDecimal70);
        schema62.setUniqueItems((java.lang.Boolean) false);
        schema50.addEnumItemObject((java.lang.Object) schema62);
        schema62.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema82.setPattern("no description");
        objSchema82.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int87 = objSchema82.getMinLength();
        objSchema77.addEnumItemObject((java.lang.Object) objSchema82);
        objSchema82.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema92 = objSchema82.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema94 = schema92.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema96 = schema92.pattern("no description");
        schema62.setDefault((java.lang.Object) schema92);
        java.math.BigDecimal bigDecimal98 = schema92.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(bigDecimal98);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema19.set$ref("no description");
        objSchema19.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema19.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str43 = objSchema19.getType();
        io.swagger.oas.models.media.Schema schema45 = objSchema19.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        io.swagger.oas.models.media.Schema schema56 = schema53.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema58 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        io.swagger.oas.models.media.Schema schema69 = objSchema59.name(",");
        objSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        io.swagger.oas.models.media.XML xML80 = null;
        schema79.setXml(xML80);
        schema79.setTitle("*/*");
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema79.xml(xML84);
        io.swagger.oas.models.media.Schema schema87 = schema79.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema87.getProperties();
        io.swagger.oas.models.media.Schema schema89 = objSchema59.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema58.properties(strMap88);
        objSchema19.setProperties(strMap88);
        io.swagger.oas.models.media.Schema schema92 = schema18.properties(strMap88);
        io.swagger.oas.models.media.Discriminator discriminator93 = schema92.getDiscriminator();
        schema92.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema92.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema99 = schema92.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(discriminator93);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        java.lang.String str33 = schema32.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.externalDocs(externalDocumentation34);
        schema32.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = schema32.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema39.getDescription();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema schema4 = objSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema4.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.xml(xML7);
        java.math.BigDecimal bigDecimal9 = schema8.getMultipleOf();
        java.lang.String str10 = schema8.toString();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema14.getMinLength();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxLength((java.lang.Integer) 0);
        java.lang.Integer int18 = schema17.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema32.maxProperties((java.lang.Integer) 0);
        objSchema32.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = objSchema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema32.type(",");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema32.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema56.getEnum();
        java.lang.Boolean boolean64 = objSchema56.getWriteOnly();
        java.lang.Boolean boolean65 = objSchema56.getWriteOnly();
        boolean boolean66 = schema50.equals((java.lang.Object) objSchema56);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema68.getExtensions();
        java.lang.String str70 = schema68.getType();
        io.swagger.oas.models.media.Schema schema72 = schema68.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str73 = schema72.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        objSchema0.setXml(xML16);
        java.math.BigDecimal bigDecimal18 = null;
        objSchema0.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = objSchema0.deprecated((java.lang.Boolean) false);
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = objSchema0.getProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        java.math.BigDecimal bigDecimal55 = objSchema50.getMaximum();
        objSchema50.setMinLength((java.lang.Integer) 0);
        objSchema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str61 = schema12.getName();
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema12.discriminator(discriminator62);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema15.setMinimum(bigDecimal18);
        schema15.setFormat("");
        schema15.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema40.pattern("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema31.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema49 = schema20.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = schema47.getProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.addRequiredItem("#/components/schemas/");
        java.lang.Object obj28 = schema27.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema27.getExtensions();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema39.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = objSchema43.getMinLength();
        schema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema43);
        java.lang.Boolean boolean50 = schema39.getNullable();
        io.swagger.oas.models.media.Schema schema52 = schema39.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema27.additionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema54 = objSchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        objSchema5.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str57 = objSchema5.getName();
        java.lang.Boolean boolean58 = objSchema5.getNullable();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        schema18.setNot(schema33);
        schema18.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema40.minProperties((java.lang.Integer) 10);
        java.lang.String str43 = schema40.get$ref();
        java.math.BigDecimal bigDecimal44 = schema40.getMaximum();
        schema40.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(bigDecimal44);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema15.maxLength((java.lang.Integer) 10);
        schema19.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema19.getExtensions();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        java.util.List<java.lang.String> strList20 = schema18.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        schema38.setTitle("*/*");
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.xml(xML43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema38.externalDocs(externalDocumentation45);
        schema30.addEnumItemObject((java.lang.Object) schema46);
        schema46.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setWriteOnly((java.lang.Boolean) true);
        schema46.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema18.addProperties("", schema46);
        java.math.BigDecimal bigDecimal55 = null;
        schema18.setMaximum(bigDecimal55);
        java.math.BigDecimal bigDecimal57 = null;
        schema18.setMaximum(bigDecimal57);
        schema18.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.String str66 = objSchema61.getName();
        objSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList69 = objSchema61.getEnum();
        io.swagger.oas.models.media.Schema schema71 = objSchema61.exclusiveMaximum((java.lang.Boolean) false);
        schema71.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = schema71.$ref("");
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.maximum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema79 = schema77.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema81 = schema77.minLength((java.lang.Integer) 100);
        java.lang.String str82 = schema81.getDescription();
        io.swagger.oas.models.media.Schema schema83 = schema18.example((java.lang.Object) schema81);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(objList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean26 = schema23.getExclusiveMinimum();
        schema23.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        objSchema0.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        objSchema0.setReadOnly((java.lang.Boolean) true);
        objSchema0.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.Schema schema35 = objSchema26.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal36 = schema35.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        schema35.addExtension("#/components/schemas/", (java.lang.Object) objSchema38);
        io.swagger.jaxrs2.OperationParser operationParser44 = new io.swagger.jaxrs2.OperationParser();
        schema35.addEnumItemObject((java.lang.Object) operationParser44);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        io.swagger.oas.models.media.Schema schema56 = schema53.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema58 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        schema35.setAdditionalProperties(schema53);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        objSchema61.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema61.properties(strMap68);
        io.swagger.oas.models.media.Schema schema71 = schema69.type("");
        io.swagger.oas.models.media.Schema schema73 = schema71.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema74.addProperties("*/*", schema80);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema81.getExtensions();
        io.swagger.oas.models.media.Schema schema84 = schema81.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal85 = null;
        schema81.setMinimum(bigDecimal85);
        io.swagger.oas.models.media.Schema schema88 = schema81.maxLength((java.lang.Integer) 10);
        schema73.addEnumItemObject((java.lang.Object) schema88);
        io.swagger.oas.models.media.Schema schema91 = schema73.type("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema73.getProperties();
        io.swagger.oas.models.media.Schema schema93 = schema53.addProperties("", schema73);
        io.swagger.oas.models.media.Schema schema94 = objSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema93);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = null;
        io.swagger.oas.models.media.Schema schema96 = objSchema0.externalDocs(externalDocumentation95);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str10 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = objSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        io.swagger.oas.models.media.Schema schema66 = schema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema57.deprecated((java.lang.Boolean) false);
        java.lang.String str69 = schema68.getFormat();
        java.math.BigDecimal bigDecimal70 = schema68.getMultipleOf();
        schema68.setMinItems((java.lang.Integer) 0);
        schema68.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(bigDecimal70);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.xml(xML18);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.maximum(bigDecimal15);
        java.lang.Boolean boolean17 = schema10.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema schema56 = schema54.type("");
        io.swagger.oas.models.media.Schema schema58 = schema54.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal59 = null;
        schema54.setMaximum(bigDecimal59);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 1);
        schema25.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Object> objList30 = schema25.getEnum();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(objList30);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        schema25.setTitle("");
        schema25.setMaxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema25.getExtensions();
        java.lang.Boolean boolean31 = schema25.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator32 = schema25.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(discriminator32);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.not(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema32.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean37 = schema36.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema9.additionalProperties(schema36);
        java.lang.Boolean boolean39 = schema38.getNullable();
        io.swagger.oas.models.media.Schema schema41 = schema38.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.math.BigDecimal bigDecimal21 = schema20.getMultipleOf();
        io.swagger.oas.models.media.Schema schema22 = schema20.getNot();
        boolean boolean23 = schema10.equals((java.lang.Object) schema22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema10.discriminator(discriminator24);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema16.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema16.setExternalDocs(externalDocumentation20);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        java.lang.Integer int40 = schema26.getMaxProperties();
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList43 = null;
        schema26.setRequired(strList43);
        io.swagger.oas.models.media.Schema schema46 = schema26.nullable((java.lang.Boolean) true);
        java.lang.String str47 = schema26.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str47, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema15 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML16 = null;
        schema10.setXml(xML16);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Boolean boolean24 = schema18.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema18.minProperties((java.lang.Integer) (-1));
        schema26.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema32.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema31.properties(strMap61);
        objSchema12.setProperties(strMap61);
        java.lang.Boolean boolean65 = objSchema12.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean68 = objSchema67.getDeprecated();
        java.lang.Boolean boolean69 = objSchema67.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema77.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema77.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema81 = objSchema67.example((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema82 = objSchema12.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        java.lang.Integer int83 = objSchema12.getMaxItems();
        java.lang.Boolean boolean84 = objSchema12.getReadOnly();
        objSchema12.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = objSchema16.title("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema32.externalDocs(externalDocumentation39);
        schema24.addEnumItemObject((java.lang.Object) schema40);
        schema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.addProperties("", schema40);
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        java.lang.String str51 = schema48.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        java.lang.Boolean boolean22 = schema7.getExclusiveMinimum();
        java.lang.Object obj23 = schema7.getDefault();
        java.lang.String str24 = schema7.getFormat();
        io.swagger.oas.models.media.Schema schema26 = schema7.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema11.setDiscriminator(discriminator13);
        java.lang.Boolean boolean15 = schema11.getWriteOnly();
        java.lang.Boolean boolean16 = schema11.getUniqueItems();
        java.lang.Boolean boolean17 = schema11.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal18 = null;
        schema11.setMultipleOf(bigDecimal18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        objSchema0.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema0.maximum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = schema7.getMinimum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal15 = null;
        objSchema14.setMultipleOf(bigDecimal15);
        objSchema14.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = objSchema14.title("hi!");
        java.lang.Object obj21 = null;
        objSchema14.addEnumItemObject(obj21);
        io.swagger.oas.models.media.Schema schema24 = objSchema14.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema14.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        schema36.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema40);
        java.lang.Boolean boolean47 = schema36.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList57 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema59 = objSchema49.name(",");
        objSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        io.swagger.oas.models.media.XML xML70 = null;
        schema69.setXml(xML70);
        schema69.setTitle("*/*");
        io.swagger.oas.models.media.XML xML74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema69.xml(xML74);
        io.swagger.oas.models.media.Schema schema77 = schema69.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = schema77.getProperties();
        io.swagger.oas.models.media.Schema schema79 = objSchema49.properties(strMap78);
        java.lang.Object obj80 = schema79.getDefault();
        io.swagger.oas.models.media.Schema schema81 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema36.getProperties();
        io.swagger.oas.models.media.Schema schema83 = schema26.properties(strMap82);
        schema13.setExample((java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema86 = schema83.readOnly((java.lang.Boolean) true);
        schema83.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(objList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema34.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema44 = objSchema20.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.format(",");
        io.swagger.oas.models.media.Schema schema47 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema20);
        java.lang.Integer int48 = schema47.getMaxItems();
        java.lang.Integer int49 = schema47.getMaxItems();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        schema7.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema28);
        schema24.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        schema44.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator50 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = schema7.$ref("");
        java.lang.Boolean boolean53 = schema52.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema14 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema11.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean17 = schema11.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList52 = objSchema45.getEnum();
        java.lang.Boolean boolean53 = objSchema45.getNullable();
        io.swagger.oas.models.media.Schema schema55 = objSchema45.writeOnly((java.lang.Boolean) true);
        java.lang.String str56 = schema55.get$ref();
        schema44.setExample((java.lang.Object) str56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = schema44.getExternalDocs();
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema44.maximum(bigDecimal59);
        java.util.List<java.lang.Object> objList61 = schema44.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(objList52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(objList61);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = schema12.getMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 0);
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator28 = schema23.getDiscriminator();
        java.lang.Boolean boolean29 = schema23.getWriteOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.String str13 = schema12.get$ref();
        schema12.setWriteOnly((java.lang.Boolean) false);
        schema12.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Integer int24 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = schema23.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema23.setMaximum(bigDecimal30);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        java.lang.Boolean boolean16 = schema13.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        schema14.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema14.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema23.setType("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList26 = schema23.getRequired();
        io.swagger.oas.models.media.Schema schema28 = schema23.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema23.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        objSchema0.setDiscriminator(discriminator38);
        java.lang.Integer int40 = objSchema0.getMaxLength();
        java.lang.String str41 = objSchema0.getTitle();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str41, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.multipleOf(bigDecimal36);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMinimum();
        schema27.setType("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.title("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema44.description(",");
        java.math.BigDecimal bigDecimal47 = schema44.getMultipleOf();
        java.lang.Boolean boolean48 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema44.title("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema50.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema27.additionalProperties(schema52);
        schema53.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema40.getExtensions();
        schema23.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema44 = schema15.additionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema46 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.Schema schema56 = objSchema47.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema47.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = objSchema47.deprecated((java.lang.Boolean) false);
        schema60.set$ref("*/*");
        io.swagger.oas.models.media.XML xML63 = null;
        schema60.setXml(xML63);
        io.swagger.oas.models.media.Schema schema66 = schema60.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema46.not(schema66);
        schema46.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = schema46.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Boolean boolean25 = objSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = objSchema0.addRequiredItem("#/components/schemas/no description");
        java.lang.String str30 = schema29.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = objSchema31.getReadOnly();
        io.swagger.oas.models.media.Schema schema38 = objSchema31.uniqueItems((java.lang.Boolean) false);
        schema29.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema29.maximum(bigDecimal40);
        schema41.setReadOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Object> objList44 = schema41.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = schema52.getExtensions();
        io.swagger.oas.models.media.Schema schema55 = schema52.minProperties((java.lang.Integer) 10);
        schema52.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema65.xml(xML70);
        io.swagger.oas.models.media.Schema schema73 = schema65.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema73.getProperties();
        schema52.setProperties(strMap74);
        io.swagger.oas.models.media.Schema schema76 = schema41.properties(strMap74);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        objSchema78.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = objSchema78.title("hi!");
        io.swagger.oas.models.media.Schema schema86 = schema84.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema88 = schema86.$ref("no description");
        io.swagger.oas.models.media.Schema schema90 = schema86.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema86.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj93 = schema86.getDefault();
        io.swagger.oas.models.media.Schema schema94 = schema41.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema86);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "no description" + "'", str30, "no description");
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema9.getExtensions();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.maximum(bigDecimal12);
        java.lang.Integer int14 = schema9.getMaxLength();
        java.lang.String str15 = schema9.getFormat();
        java.lang.Class<?> wildcardClass16 = schema9.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMaximum();
        objSchema0.setDescription("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList19 = objSchema11.getEnum();
        java.lang.Boolean boolean20 = objSchema11.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        objSchema11.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema11.addProperties("no description", schema24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = objSchema11.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema34.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal38 = null;
        schema34.setMinimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema34.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        objSchema43.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema43.properties(strMap50);
        schema51.setExclusiveMinimum((java.lang.Boolean) true);
        schema41.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str55 = schema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        schema63.setTitle("*/*");
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema63.setRequired((java.util.List<java.lang.String>) strList75);
        schema41.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = objSchema11.required((java.util.List<java.lang.String>) strList75);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList75);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema0.multipleOf(bigDecimal81);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema82.getExtensions();
        java.lang.Integer int84 = schema82.getMaxItems();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(objList19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(int84);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema35 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal40 = null;
        objSchema39.setMultipleOf(bigDecimal40);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        objSchema39.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = schema37.example((java.lang.Object) objSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema49.setExternalDocs(externalDocumentation50);
        java.math.BigDecimal bigDecimal52 = null;
        schema49.setMinimum(bigDecimal52);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = objSchema34.title("*/*");
        java.lang.Boolean boolean50 = objSchema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema52 = objSchema34.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema52.addRequiredItem("*/*");
        schema9.setNot(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema9.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        java.lang.Integer int40 = schema26.getMaxProperties();
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList43 = null;
        schema26.setRequired(strList43);
        io.swagger.oas.models.media.Schema schema46 = schema26.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema57 = schema54.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean58 = schema57.getDeprecated();
        io.swagger.oas.models.media.Schema schema59 = schema57.getNot();
        java.lang.String str60 = schema57.getName();
        io.swagger.oas.models.media.Schema schema62 = schema57.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList63 = schema62.getRequired();
        io.swagger.oas.models.media.Schema schema64 = schema26.required(strList63);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        objSchema15.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.XML xML30 = null;
        schema29.setXml(xML30);
        schema29.setTitle("*/*");
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.xml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema29.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        io.swagger.oas.models.media.Schema schema39 = objSchema15.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = objSchema15.format(",");
        io.swagger.oas.models.media.XML xML42 = null;
        objSchema15.setXml(xML42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = objSchema15.getExternalDocs();
        boolean boolean45 = objSchema0.equals((java.lang.Object) externalDocumentation44);
        java.lang.Boolean boolean46 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        objSchema0.setDiscriminator(discriminator47);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.media.Schema schema46 = schema44.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema44.discriminator(discriminator48);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>> strListSchema54 = new io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = schema7.not((io.swagger.oas.models.media.Schema) strListSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = schema7.getExternalDocs();
        java.lang.String str57 = schema7.getName();
        io.swagger.oas.models.media.Schema schema59 = schema7.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        schema59.setExternalDocs(externalDocumentation60);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema23.getDiscriminator();
        java.lang.Integer int37 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema38 = schema13.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema40.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str45 = schema44.getPattern();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "no description" + "'", str45, "no description");
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema31.set$ref("no description");
        objSchema31.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema31.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = objSchema31.name("*/*");
        objSchema0.setDefault((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema schema59 = objSchema0.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = objSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str62 = objSchema0.getName();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        schema8.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        schema8.setExternalDocs(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = objSchema0.getNot();
        java.lang.Integer int6 = objSchema0.getMaxItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = schema17.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str23 = schema22.getType();
        io.swagger.oas.models.media.Schema schema24 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema26 = schema24.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        objSchema0.setDiscriminator(discriminator16);
        java.lang.Boolean boolean18 = objSchema0.getWriteOnly();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        java.lang.Integer int14 = schema10.getMinLength();
        io.swagger.oas.models.media.Schema schema16 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        schema20.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal25 = null;
        objSchema24.setMultipleOf(bigDecimal25);
        objSchema24.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        objSchema24.setExternalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        schema38.setTitle("*/*");
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.xml(xML43);
        io.swagger.oas.models.media.Schema schema46 = schema38.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = schema46.getProperties();
        io.swagger.oas.models.media.Schema schema48 = objSchema24.properties(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema49.setMultipleOf(bigDecimal50);
        objSchema49.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        objSchema49.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        schema63.setTitle("*/*");
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema63.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = schema63.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = schema71.getProperties();
        io.swagger.oas.models.media.Schema schema73 = objSchema49.properties(strMap72);
        schema48.setProperties(strMap72);
        io.swagger.oas.models.media.Schema schema76 = schema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema78 = schema76.title("");
        schema76.setType("no description");
        schema76.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean83 = schema76.getUniqueItems();
        schema76.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal86 = null;
        schema76.setMaximum(bigDecimal86);
        schema20.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema76);
        io.swagger.oas.models.media.Schema schema90 = schema76.maxItems((java.lang.Integer) 10);
        schema76.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema22.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal26 = null;
        schema22.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema22.maxLength((java.lang.Integer) 10);
        objSchema0.setExample((java.lang.Object) 10);
        objSchema0.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = schema74.getMultipleOf();
        java.lang.Boolean boolean78 = schema74.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema80 = schema74.maxItems((java.lang.Integer) 10);
        java.lang.String str81 = schema80.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "no description" + "'", str81, "no description");
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = schema7.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(externalDocumentation17);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        schema18.setNot(schema33);
        schema18.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema40.minProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean43 = schema40.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.name("hi!");
        io.swagger.oas.models.media.Schema schema47 = schema43.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal48 = schema43.getMinimum();
        io.swagger.oas.models.media.Schema schema49 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        java.lang.Integer int50 = schema29.getMinProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.nullable((java.lang.Boolean) false);
        schema11.setTitle("");
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        schema21.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema21.$ref("*/*");
        schema21.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema30 = schema21.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setDefault((java.lang.Object) schema21);
        schema21.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal34 = schema21.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        schema14.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema14.maximum(bigDecimal36);
        schema37.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.xml(xML18);
        java.lang.String str20 = schema15.getDescription();
        schema15.setDescription(",");
        io.swagger.oas.models.media.Schema schema24 = schema15.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema7.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = objSchema24.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = objSchema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema39 = objSchema24.title("*/*");
        java.lang.Boolean boolean40 = objSchema24.getExclusiveMinimum();
        objSchema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema24.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        objSchema24.setProperties(strMap45);
        objSchema24.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = objSchema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList58);
        objSchema24.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = objSchema13.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema63 = schema7.required((java.util.List<java.lang.String>) strList58);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema7.maximum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = schema7.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema7.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        objSchema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema5.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = objSchema5.getType();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        objSchema0.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = objSchema0.name("#/components/schemas/");
        boolean boolean23 = objSchema0.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str24 = objSchema0.toString();
        objSchema0.setReadOnly((java.lang.Boolean) true);
        objSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str24, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int31 = schema30.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.multipleOf(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        objSchema34.addExtension("", (java.lang.Object) objSchema38);
        io.swagger.oas.models.media.Schema schema45 = objSchema34.minItems((java.lang.Integer) 100);
        schema45.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        java.lang.Boolean boolean59 = objSchema50.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        objSchema50.setExtensions(strMap60);
        objSchema50.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema49.setDefault((java.lang.Object) objSchema50);
        io.swagger.oas.models.media.Schema schema66 = objSchema50.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.addEnumItemObject((java.lang.Object) objSchema50);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema35.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal59 = null;
        schema55.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema55.maxLength((java.lang.Integer) 10);
        schema47.addEnumItemObject((java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema schema65 = schema47.type("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema67 = schema27.addProperties("", schema47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema47.externalDocs(externalDocumentation68);
        schema69.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal72 = null;
        schema69.setMultipleOf(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = schema69.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("");
        io.swagger.oas.models.media.Schema schema24 = schema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean25 = schema22.getReadOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema68.setPattern("no description");
        objSchema68.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = null;
        io.swagger.oas.models.media.Schema schema75 = objSchema68.addProperties("*/*", schema74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = schema75.getExtensions();
        io.swagger.oas.models.media.Schema schema78 = schema75.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal79 = null;
        schema75.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema75.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema84 = schema75.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema86 = schema75.deprecated((java.lang.Boolean) true);
        boolean boolean87 = schema65.equals((java.lang.Object) schema75);
        io.swagger.oas.models.media.Schema schema88 = schema65.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(schema88);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema14 = schema11.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal15 = schema14.getMinimum();
        java.lang.Object obj16 = schema14.getDefault();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.xml(xML24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        schema35.setTitle("*/*");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema35.xml(xML40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema35.externalDocs(externalDocumentation42);
        schema23.setNot(schema43);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.type("");
        io.swagger.oas.models.media.Schema schema57 = schema55.title("*/*");
        io.swagger.oas.models.media.Schema schema59 = schema57.description(",");
        java.lang.String[] strArray62 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        io.swagger.oas.models.media.Schema schema65 = schema57.required((java.util.List<java.lang.String>) strList63);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema65.getMinProperties();
        schema43.setAdditionalProperties(schema65);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        io.swagger.oas.models.media.Schema schema79 = objSchema70.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema70.xml(xML80);
        java.lang.Boolean boolean82 = schema81.getNullable();
        io.swagger.oas.models.media.Schema schema84 = schema81.minProperties((java.lang.Integer) 0);
        java.lang.Object obj85 = schema81.getDefault();
        schema65.setExample((java.lang.Object) schema81);
        schema12.setAdditionalProperties(schema65);
        io.swagger.oas.models.media.Schema schema89 = schema12.minLength((java.lang.Integer) 0);
        schema12.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.util.List<java.lang.Object> objList16 = schema14.getEnum();
        schema14.setMaxProperties((java.lang.Integer) (-1));
        schema14.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(objList16);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        objSchema24.addExtension("", (java.lang.Object) objSchema28);
        objSchema24.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema37 = objSchema24.exclusiveMinimum((java.lang.Boolean) false);
        schema37.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema23.not(schema37);
        io.swagger.oas.models.media.Schema schema42 = schema37.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema9.setExternalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema9.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        objSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema30.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.type("");
        io.swagger.oas.models.media.Schema schema42 = schema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("");
        io.swagger.oas.models.media.Schema schema48 = schema44.description("");
        schema9.setExample((java.lang.Object) schema44);
        java.util.List<java.lang.String> strList50 = schema44.getRequired();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        java.lang.Boolean boolean18 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema20 = schema12.minProperties((java.lang.Integer) 0);
        java.lang.Object obj21 = schema12.getDefault();
        io.swagger.oas.models.media.Schema schema23 = schema12.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        java.lang.Boolean boolean75 = schema74.getExclusiveMinimum();
        java.lang.Integer int76 = schema74.getMaxProperties();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Integer int10 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = schema9.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema9.getExclusiveMaximum();
        schema9.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal25 = null;
        objSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema34.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = objSchema38.getMinLength();
        schema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        schema34.setMinProperties((java.lang.Integer) 10);
        schema34.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = objSchema24.not(schema34);
        java.lang.Boolean boolean50 = schema49.getDeprecated();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.maximum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.String str58 = objSchema53.getName();
        objSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList61 = objSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name(",");
        objSchema53.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = objSchema53.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList68 = schema67.getEnum();
        io.swagger.oas.models.media.Schema schema70 = schema67.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        objSchema71.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        objSchema71.setExternalDocs(externalDocumentation76);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        objSchema78.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema78.addProperties("*/*", schema84);
        io.swagger.oas.models.media.XML xML86 = null;
        schema85.setXml(xML86);
        schema85.setTitle("*/*");
        io.swagger.oas.models.media.XML xML90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema85.xml(xML90);
        io.swagger.oas.models.media.Schema schema93 = schema85.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema93.getProperties();
        io.swagger.oas.models.media.Schema schema95 = objSchema71.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema67.properties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema49.properties(strMap94);
        io.swagger.oas.models.media.Schema schema98 = schema23.properties(strMap94);
        java.lang.Boolean boolean99 = schema98.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(objList61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(objList68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(boolean99);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML24 = schema7.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema32.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        schema32.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema36);
        schema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        schema32.setDefault((java.lang.Object) xML57);
        io.swagger.oas.models.media.Schema schema61 = schema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema32.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        schema7.setAdditionalProperties(schema32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        schema32.setExternalDocs(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema9.minItems((java.lang.Integer) (-1));
        java.lang.String str30 = schema9.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema31.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = objSchema31.getAdditionalProperties();
        objSchema31.setTitle("no description");
        schema9.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema schema50 = objSchema31.name("");
        schema50.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int54 = schema53.getMaxLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal40 = null;
        schema36.setMinimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema36.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        schema43.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str57 = schema43.get$ref();
        java.lang.Object obj58 = schema43.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal60 = null;
        objSchema59.setMultipleOf(bigDecimal60);
        objSchema59.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        objSchema59.setExternalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema59.properties(strMap82);
        schema43.setProperties(strMap82);
        io.swagger.oas.models.media.Schema schema85 = schema26.properties(strMap82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema85.getProperties();
        io.swagger.oas.models.media.Schema schema88 = schema85.writeOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList89 = schema85.getRequired();
        schema85.setMinItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal92 = schema85.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(bigDecimal92);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        schema10.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema10.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema schema14 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        java.lang.Integer int16 = schema14.getMinLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema10.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = schema16.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        java.lang.Boolean boolean36 = schema10.getNullable();
        io.swagger.oas.models.media.Schema schema38 = schema10.minLength((java.lang.Integer) 10);
        java.lang.Integer int39 = schema38.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        schema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema7.setMaximum(bigDecimal22);
        java.lang.Boolean boolean24 = schema7.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.String str13 = schema12.get$ref();
        java.lang.Boolean boolean14 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema15.set$ref("no description");
        objSchema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.name(",");
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema15.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str39 = objSchema15.getType();
        io.swagger.oas.models.media.Schema schema41 = objSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema12.additionalProperties(schema41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal44 = null;
        objSchema43.setMultipleOf(bigDecimal44);
        objSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = objSchema48.getMinLength();
        objSchema43.addEnumItemObject((java.lang.Object) objSchema48);
        objSchema48.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = objSchema48.maxProperties((java.lang.Integer) 0);
        objSchema48.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema62 = objSchema48.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = objSchema48.type(",");
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema48.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = objSchema48.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema41.additionalProperties(schema68);
        io.swagger.oas.models.media.Schema schema71 = schema69.exclusiveMaximum((java.lang.Boolean) true);
        schema69.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = schema69.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema9.addProperties("", schema27);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = objSchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema33.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = objSchema33.maxProperties((java.lang.Integer) 1);
        schema32.setExample((java.lang.Object) 1);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema32.discriminator(discriminator50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = objSchema52.addProperties("*/*", schema58);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema59.getExtensions();
        io.swagger.oas.models.media.Schema schema62 = schema59.minProperties((java.lang.Integer) 10);
        schema59.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema66 = schema59.readOnly((java.lang.Boolean) false);
        schema59.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema59.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.discriminator(discriminator71);
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator75 = schema74.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema74.getProperties();
        io.swagger.oas.models.media.Schema schema77 = schema32.properties(strMap76);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(discriminator75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.minimum(bigDecimal31);
        java.lang.String str33 = schema30.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        java.lang.Integer int15 = schema9.getMinLength();
        java.util.List<java.lang.String> strList16 = schema9.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        java.lang.Integer int29 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.title("hi!");
        java.lang.Object obj40 = schema39.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        java.util.List<java.lang.String> strList59 = schema57.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema39.addProperties("", schema57);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal73 = null;
        objSchema72.setMultipleOf(bigDecimal73);
        objSchema72.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int82 = objSchema77.getMinLength();
        objSchema72.addEnumItemObject((java.lang.Object) objSchema77);
        objSchema77.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int86 = objSchema77.getMaxLength();
        schema68.addExtension("no description", (java.lang.Object) objSchema77);
        io.swagger.oas.models.media.Schema schema89 = schema68.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema68.getExtensions();
        schema60.setExtensions(strMap90);
        schema27.setExtensions(strMap90);
        schema9.setExtensions(strMap90);
        schema9.setDeprecated((java.lang.Boolean) false);
        java.lang.Integer int96 = schema9.getMaxProperties();
        schema9.setMinProperties((java.lang.Integer) 0);
        java.lang.String str99 = schema9.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(int96);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "no description" + "'", str99, "no description");
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.name(",");
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        schema38.setTitle("*/*");
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.xml(xML43);
        io.swagger.oas.models.media.Schema schema46 = schema38.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = schema46.getProperties();
        io.swagger.oas.models.media.Schema schema48 = objSchema18.properties(strMap47);
        java.lang.Object obj49 = schema48.getDefault();
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.xml(xML50);
        java.lang.Integer int52 = schema48.getMaxProperties();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema48.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema55 = schema17.not(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema55.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.multipleOf(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = objSchema67.maxProperties((java.lang.Integer) 0);
        java.lang.String str78 = objSchema67.getType();
        java.lang.Object obj79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema67.example(obj79);
        io.swagger.oas.models.media.Schema schema82 = objSchema67.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = schema82.minItems((java.lang.Integer) 100);
        java.lang.Object obj85 = schema82.getDefault();
        schema59.addEnumItemObject(obj85);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema33.addExtension("", (java.lang.Object) objSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        objSchema37.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.addRequiredItem(",");
        java.lang.String str47 = schema46.getName();
        java.lang.Boolean boolean48 = schema46.getDeprecated();
        io.swagger.oas.models.media.Schema schema50 = schema46.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal51 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema52.setMultipleOf(bigDecimal53);
        objSchema52.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int62 = objSchema57.getMinLength();
        objSchema52.addEnumItemObject((java.lang.Object) objSchema57);
        objSchema57.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = objSchema57.maxProperties((java.lang.Integer) 0);
        objSchema57.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        io.swagger.oas.models.media.Schema schema79 = objSchema70.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal80 = schema79.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema81.setPattern("no description");
        objSchema81.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = null;
        io.swagger.oas.models.media.Schema schema88 = objSchema81.addProperties("*/*", schema87);
        io.swagger.oas.models.media.XML xML89 = null;
        schema88.setXml(xML89);
        io.swagger.oas.models.media.Schema schema92 = schema88.pattern("*/*");
        io.swagger.oas.models.media.Schema schema93 = schema79.additionalProperties(schema88);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema79.getProperties();
        objSchema57.setProperties(strMap94);
        schema46.setProperties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema30.properties(strMap94);
        java.math.BigDecimal bigDecimal98 = schema30.getMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(bigDecimal98);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        schema21.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema25);
        java.lang.Boolean boolean32 = schema21.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema34.properties(strMap63);
        java.lang.Object obj65 = schema64.getDefault();
        io.swagger.oas.models.media.Schema schema66 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema21.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema10.properties(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema69.addExtension("", (java.lang.Object) objSchema73);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        objSchema73.setExternalDocs(externalDocumentation79);
        java.lang.String str81 = objSchema73.getName();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.exclusiveMaximum((java.lang.Boolean) true);
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema73);
        io.swagger.oas.models.media.Schema schema86 = objSchema73.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema86.multipleOf(bigDecimal87);
        java.util.List<java.lang.String> strList89 = schema86.getRequired();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strList89);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 10);
        java.lang.Object obj17 = schema16.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setType("");
        java.math.BigDecimal bigDecimal23 = objSchema18.getMaximum();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema18.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.minItems((java.lang.Integer) 1);
        schema16.addEnumItemObject((java.lang.Object) 1);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        io.swagger.oas.models.media.Schema schema25 = objSchema16.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = schema25.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema25.additionalProperties(schema34);
        java.lang.Boolean boolean40 = schema34.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal41 = null;
        schema34.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema34.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema13.not(schema34);
        io.swagger.oas.models.media.Schema schema47 = schema45.name("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getType();
        io.swagger.oas.models.media.Schema schema41 = objSchema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = objSchema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("hi!");
        java.lang.Boolean boolean17 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.lang.Object obj5 = objSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        objSchema0.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema8.addProperties("*/*", schema14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("hi!");
        java.lang.Object obj18 = schema17.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        java.util.List<java.lang.String> strList37 = schema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = schema17.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        objSchema50.addEnumItemObject((java.lang.Object) objSchema55);
        objSchema55.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema55.getMaxLength();
        schema46.addExtension("no description", (java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema schema67 = schema46.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = schema46.getExtensions();
        schema38.setExtensions(strMap68);
        objSchema0.setExtensions(strMap68);
        io.swagger.oas.models.media.Schema schema72 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = objSchema0.multipleOf(bigDecimal73);
        schema74.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema78 = schema74.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema78.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML81 = schema78.getXml();
        java.lang.Object obj82 = schema78.getDefault();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(xML81);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema29.properties(strMap36);
        io.swagger.oas.models.media.Schema schema39 = schema37.type("");
        java.lang.String str40 = schema37.getPattern();
        schema37.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema37.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.maximum(bigDecimal45);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.xml(xML47);
        io.swagger.oas.models.media.Schema schema49 = schema25.additionalProperties(schema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema25.setExternalDocs(externalDocumentation50);
        schema25.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "no description" + "'", str40, "no description");
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        schema18.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        java.lang.String str12 = objSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema13.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema13.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal29 = null;
        objSchema28.setMultipleOf(bigDecimal29);
        objSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("#/components/schemas/");
        objSchema28.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = objSchema13.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        objSchema47.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = schema46.required((java.util.List<java.lang.String>) strList54);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Boolean boolean59 = objSchema0.getWriteOnly();
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema19.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.addRequiredItem(",");
        schema28.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj31 = schema28.getExample();
        java.util.List<java.lang.String> strList32 = schema28.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema14.required(strList32);
        io.swagger.oas.models.media.Schema schema35 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str36 = schema33.getName();
        io.swagger.oas.models.media.XML xML37 = schema33.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(xML37);
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        io.swagger.oas.models.media.XML xML13 = schema9.getXml();
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str16 = schema9.getName();
        io.swagger.oas.models.media.Schema schema18 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema9.discriminator(discriminator19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) (-1));
        schema28.setMaxLength((java.lang.Integer) 100);
        boolean boolean31 = schema12.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMultipleOf(bigDecimal34);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator48 = objSchema15.getDiscriminator();
        schema13.addExtension("*/*", (java.lang.Object) objSchema15);
        java.lang.Boolean boolean50 = schema13.getExclusiveMaximum();
        java.lang.Class<?> wildcardClass51 = schema13.getClass();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = null;
        schema55.setXml(xML58);
        java.lang.String str60 = schema55.getTitle();
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema55.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = schema64.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Class<?> wildcardClass67 = schema66.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.xml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        objSchema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.addRequiredItem(",");
        schema40.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj43 = schema40.getExample();
        java.util.List<java.lang.String> strList44 = schema40.getRequired();
        io.swagger.oas.models.media.Schema schema45 = schema26.required(strList44);
        schema11.setRequired(strList44);
        java.lang.String str47 = schema11.get$ref();
        io.swagger.oas.models.media.Schema schema49 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        objSchema50.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema50.properties(strMap57);
        io.swagger.oas.models.media.Schema schema60 = schema58.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        schema68.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema68.discriminator(discriminator73);
        io.swagger.oas.models.media.Schema schema75 = schema60.not(schema68);
        java.lang.Boolean boolean76 = schema60.getReadOnly();
        io.swagger.oas.models.media.Schema schema77 = schema49.not(schema60);
        io.swagger.oas.models.media.Schema schema79 = schema49.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        schema79.setExternalDocs(externalDocumentation80);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean39 = schema36.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.addProperties("no description", schema13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = objSchema0.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema23.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        schema40.setExclusiveMinimum((java.lang.Boolean) true);
        schema30.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str44 = schema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        schema52.setRequired((java.util.List<java.lang.String>) strList64);
        schema30.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = objSchema0.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema70 = schema68.maxLength((java.lang.Integer) 100);
        schema70.setMinProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema70.getProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema3.setPattern("no description");
        objSchema3.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = null;
        io.swagger.oas.models.media.Schema schema10 = objSchema3.addProperties("*/*", schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema14.getMinLength();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema14);
        schema10.setMinProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema10);
        java.lang.Boolean boolean26 = schema25.getDeprecated();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.maximum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema43 = objSchema29.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = schema43.getEnum();
        io.swagger.oas.models.media.Schema schema46 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema47.setExternalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema47.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema43.properties(strMap70);
        io.swagger.oas.models.media.Schema schema73 = schema25.properties(strMap70);
        java.lang.Boolean boolean74 = schema25.getExclusiveMaximum();
        java.lang.Integer int75 = schema25.getMinProperties();
        schema25.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNull(int75);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 0\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        schema13.setMaxItems((java.lang.Integer) 10);
        java.lang.Integer int16 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = schema13.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema13.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema29.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = objSchema33.getMinLength();
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema33);
        schema29.setExclusiveMinimum((java.lang.Boolean) true);
        schema29.setType(",");
        schema29.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema29.xml(xML46);
        io.swagger.oas.models.media.Schema schema48 = schema21.not(schema29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema49.maximum(bigDecimal57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        objSchema49.setExternalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = objSchema49.uniqueItems((java.lang.Boolean) true);
        java.lang.String str63 = objSchema49.getDescription();
        objSchema49.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setDefault((java.lang.Object) objSchema49);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.title("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema44.description(",");
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema44.required((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.multipleOf(bigDecimal53);
        java.lang.Integer int55 = schema52.getMinProperties();
        schema30.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.Schema schema66 = objSchema57.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema57.xml(xML67);
        java.lang.Boolean boolean69 = schema68.getNullable();
        io.swagger.oas.models.media.Schema schema71 = schema68.minProperties((java.lang.Integer) 0);
        java.lang.Object obj72 = schema68.getDefault();
        schema52.setExample((java.lang.Object) schema68);
        java.util.List<java.lang.Object> objList74 = schema68.getEnum();
        schema68.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = schema68.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema68.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema82 = schema68.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(objList74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objSchema0.getExtensions();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML15 = objSchema0.getXml();
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(xML15);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str42 = schema39.get$ref();
        io.swagger.oas.models.media.Schema schema44 = schema39.maxProperties((java.lang.Integer) 10);
        schema39.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema9.getExternalDocs();
        schema9.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        objSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema14.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("");
        java.lang.String str25 = schema22.getPattern();
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema22.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.Schema schema52 = objSchema43.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema52.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = schema54.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema54.getExtensions();
        schema37.setDefault((java.lang.Object) schema54);
        io.swagger.oas.models.media.Schema schema58 = schema29.additionalProperties(schema37);
        io.swagger.oas.models.media.Schema schema60 = schema37.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema9.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema9.maximum(bigDecimal62);
        io.swagger.oas.models.media.Discriminator discriminator64 = schema9.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "no description" + "'", str25, "no description");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        java.math.BigDecimal bigDecimal57 = null;
        schema41.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema41.type("no description");
        java.lang.String str61 = schema41.getFormat();
        java.lang.String str62 = schema41.getFormat();
        java.util.List<java.lang.String> strList63 = schema41.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(strList63);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.lang.String str16 = schema14.getPattern();
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMaximum(bigDecimal17);
        io.swagger.oas.annotations.Parameter parameter19 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray20 = new io.swagger.oas.annotations.Parameter[] { parameter19 };
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components35);
        boolean boolean37 = schema14.equals((java.lang.Object) parameterListOptional36);
        java.lang.Class<?> wildcardClass38 = schema14.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "no description" + "'", str16, "no description");
        org.junit.Assert.assertNotNull(parameterArray20);
        org.junit.Assert.assertNotNull(parameterListOptional22);
        org.junit.Assert.assertNotNull(parameterListOptional24);
        org.junit.Assert.assertNotNull(parameterListOptional26);
        org.junit.Assert.assertNotNull(parameterListOptional28);
        org.junit.Assert.assertNotNull(parameterListOptional30);
        org.junit.Assert.assertNotNull(parameterListOptional32);
        org.junit.Assert.assertNotNull(parameterListOptional34);
        org.junit.Assert.assertNotNull(parameterListOptional36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema13.getExternalDocs();
        java.lang.String str17 = schema13.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = objSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = objSchema0.multipleOf(bigDecimal5);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema30.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        schema44.setName("#/components/schemas/");
        java.lang.Object obj53 = schema44.getDefault();
        io.swagger.oas.models.media.Schema schema55 = schema44.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.Schema schema65 = objSchema56.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal66 = schema65.getMinimum();
        java.math.BigDecimal bigDecimal67 = null;
        schema65.setMultipleOf(bigDecimal67);
        io.swagger.oas.models.media.Schema schema70 = schema65.$ref("*/*");
        io.swagger.oas.models.media.Schema schema72 = schema70.uniqueItems((java.lang.Boolean) false);
        schema55.setNot(schema70);
        schema55.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = schema55.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema77.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = schema30.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        io.swagger.oas.models.media.Schema schema82 = schema80.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema83.setPattern("no description");
        objSchema83.setReadOnly((java.lang.Boolean) false);
        objSchema83.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = null;
        io.swagger.oas.models.media.Schema schema91 = objSchema83.properties(strMap90);
        schema91.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema95 = schema91.uniqueItems((java.lang.Boolean) false);
        schema95.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema98 = schema80.example((java.lang.Object) schema95);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = objSchema5.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str30 = schema27.getPattern();
        java.lang.Integer int31 = schema27.getMinLength();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "no description" + "'", str30, "no description");
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) 0);
        schema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        objSchema20.setProperties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema29.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema44.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = objSchema48.getMinLength();
        schema44.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema48);
        java.lang.Boolean boolean55 = schema44.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.String str61 = objSchema56.getName();
        objSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList64 = objSchema56.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.title("no description");
        schema44.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema schema70 = schema29.not(schema44);
        schema17.setNot(schema29);
        java.lang.Boolean boolean72 = schema17.getNullable();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = objSchema0.getExclusiveMinimum();
        java.lang.String str12 = objSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.addRequiredItem("#/components/schemas/");
        schema22.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema22.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema22.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = objSchema34.getMinLength();
        objSchema29.addEnumItemObject((java.lang.Object) objSchema34);
        objSchema34.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean43 = objSchema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = objSchema44.addRequiredItem("#/components/schemas/");
        java.lang.Object obj54 = schema53.getDefault();
        io.swagger.oas.models.media.XML xML55 = schema53.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        schema63.setTitle("*/*");
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema63.setRequired((java.util.List<java.lang.String>) strList75);
        schema53.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = objSchema34.required((java.util.List<java.lang.String>) strList75);
        schema27.setRequired((java.util.List<java.lang.String>) strList75);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList75);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(xML55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        java.lang.Boolean boolean23 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema24 = schema8.example((java.lang.Object) boolean23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema8.multipleOf(bigDecimal25);
        schema26.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema26.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        io.swagger.oas.models.media.Schema schema15 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema9.getExternalDocs();
        schema9.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        java.lang.Object obj19 = schema17.getDefault();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        objSchema17.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema31.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema41 = objSchema17.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        schema41.setProperties(strMap65);
        io.swagger.oas.models.media.Schema schema69 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.title("");
        io.swagger.oas.models.media.Schema schema73 = schema71.type("");
        schema16.setExample((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema76 = schema16.writeOnly((java.lang.Boolean) false);
        schema16.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema16.minItems((java.lang.Integer) 100);
        java.lang.Integer int81 = schema80.getMaxProperties();
        java.lang.Boolean boolean82 = schema80.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNull(boolean82);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("");
        io.swagger.oas.models.media.Schema schema40 = schema36.description("");
        io.swagger.oas.models.media.Schema schema41 = objSchema0.example((java.lang.Object) schema36);
        schema36.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList52 = objSchema44.getEnum();
        io.swagger.oas.models.media.Schema schema54 = objSchema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = objSchema44.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = objSchema44.getExternalDocs();
        io.swagger.oas.models.media.Schema schema59 = objSchema44.title("*/*");
        java.lang.Boolean boolean60 = objSchema44.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        objSchema44.setExternalDocs(externalDocumentation61);
        io.swagger.oas.models.media.Schema schema64 = objSchema44.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList65 = schema64.getRequired();
        io.swagger.oas.models.media.Schema schema66 = schema64.getAdditionalProperties();
        java.lang.Boolean boolean67 = schema64.getNullable();
        io.swagger.oas.models.media.Schema schema69 = schema64.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = schema64.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema72 = schema36.not(schema64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        java.lang.String str78 = objSchema73.getName();
        objSchema73.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList81 = objSchema73.getEnum();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.name(",");
        io.swagger.oas.models.media.XML xML84 = objSchema73.getXml();
        java.util.List<java.lang.String> strList85 = objSchema73.getRequired();
        objSchema73.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator88 = objSchema73.getDiscriminator();
        io.swagger.oas.models.media.Schema schema89 = schema72.additionalProperties((io.swagger.oas.models.media.Schema) objSchema73);
        schema72.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(objList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(objList81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(xML84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(discriminator88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) true);
        schema16.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema4.maximum(bigDecimal15);
        java.lang.Integer int17 = objSchema4.getMaxLength();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema4.maximum(bigDecimal18);
        java.lang.Boolean boolean20 = objSchema4.getExclusiveMinimum();
        java.lang.Integer int21 = objSchema4.getMaxLength();
        java.lang.Boolean boolean22 = objSchema4.getWriteOnly();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = schema24.getDefault();
        io.swagger.oas.models.media.XML xML26 = schema24.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema34.setRequired((java.util.List<java.lang.String>) strList46);
        schema24.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema14.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema52 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema14.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        objSchema5.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema5.discriminator(discriminator18);
        io.swagger.oas.models.media.Schema schema21 = objSchema5.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = objSchema0.getNot();
        java.util.List<java.lang.String> strList13 = objSchema0.getRequired();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.format("");
        io.swagger.oas.models.media.Discriminator discriminator29 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = schema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objSchema0.getExtensions();
        objSchema0.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        java.lang.String str19 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema21.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.name(",");
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema24.properties(strMap53);
        schema54.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal57 = schema54.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema54.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        objSchema60.addExtension("", (java.lang.Object) objSchema64);
        objSchema60.set$ref("*/*");
        schema54.addEnumItemObject((java.lang.Object) objSchema60);
        schema54.setMaxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.Object> objList75 = schema54.getEnum();
        schema21.setEnum(objList75);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(objList75);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        schema30.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = objSchema33.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = objSchema33.getProperties();
        schema30.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema33);
        io.swagger.oas.models.media.Discriminator discriminator39 = objSchema33.getDiscriminator();
        objSchema33.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema43 = objSchema33.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = schema43.getEnum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(objList44);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.minimum(bigDecimal14);
        schema9.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        schema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema9.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = schema39.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.lang.Boolean boolean18 = schema17.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema17.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.maximum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        java.lang.Integer int25 = schema22.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema0.setExternalDocs(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        java.lang.String str10 = objSchema0.toString();
        java.lang.String str11 = objSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.Schema schema37 = objSchema28.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal38 = schema37.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        schema37.addExtension("#/components/schemas/", (java.lang.Object) objSchema40);
        io.swagger.jaxrs2.OperationParser operationParser46 = new io.swagger.jaxrs2.OperationParser();
        schema37.addEnumItemObject((java.lang.Object) operationParser46);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema60 = schema55.exclusiveMaximum((java.lang.Boolean) false);
        schema37.setAdditionalProperties(schema55);
        schema37.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema37.getExtensions();
        schema27.setExtensions(strMap64);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getPattern();
        objSchema12.setMinProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema12.maximum(bigDecimal21);
        java.lang.Boolean boolean23 = objSchema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = objSchema12.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema25.getWriteOnly();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.maximum(bigDecimal27);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "no description" + "'", str18, "no description");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        java.util.List<java.lang.String> strList11 = null;
        schema7.setRequired(strList11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxItems((java.lang.Integer) 100);
        java.lang.Integer int15 = schema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("");
        schema17.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        java.lang.Boolean boolean49 = schema41.getWriteOnly();
        java.lang.Integer int50 = schema41.getMinLength();
        schema41.setMaxProperties((java.lang.Integer) 100);
        schema41.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        schema41.setDiscriminator(discriminator55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema41.multipleOf(bigDecimal57);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        java.lang.Integer int28 = schema24.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.discriminator(discriminator29);
        java.lang.Class<?> wildcardClass31 = schema24.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        schema21.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema21.$ref("*/*");
        io.swagger.oas.models.media.Schema schema28 = schema21.$ref("");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.maximum(bigDecimal29);
        java.lang.String str31 = schema28.getTitle();
        java.lang.Integer int32 = schema28.getMaxLength();
        schema28.setMinItems((java.lang.Integer) 0);
        objSchema0.setExample((java.lang.Object) schema28);
        objSchema0.setMaxItems((java.lang.Integer) 1);
        java.util.List<java.lang.Object> objList38 = objSchema0.getEnum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(objList38);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema schema4 = objSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema4.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema4.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator48 = objSchema15.getDiscriminator();
        schema13.addExtension("*/*", (java.lang.Object) objSchema15);
        objSchema15.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = objSchema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema53.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean56 = schema55.getWriteOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.Object obj3 = objSchema0.getDefault();
        java.lang.Boolean boolean4 = objSchema0.getDeprecated();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(boolean4);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.xml(xML18);
        schema15.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = schema15.getMultipleOf();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema15.set$ref("no description");
        objSchema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.name(",");
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema15.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = objSchema15.name("*/*");
        io.swagger.oas.models.media.Schema schema41 = objSchema15.getNot();
        io.swagger.oas.models.media.Schema schema43 = objSchema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.String str52 = objSchema47.getName();
        objSchema47.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema47.maximum(bigDecimal55);
        objSchema47.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal60 = null;
        objSchema59.setMultipleOf(bigDecimal60);
        objSchema59.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = objSchema59.title("hi!");
        java.lang.Object obj66 = null;
        objSchema59.addEnumItemObject(obj66);
        objSchema59.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema70 = objSchema47.not((io.swagger.oas.models.media.Schema) objSchema59);
        io.swagger.oas.models.media.Schema schema71 = schema45.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema59);
        io.swagger.oas.models.media.Schema schema72 = schema10.not(schema45);
        io.swagger.oas.models.media.Schema schema74 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str75 = schema74.getPattern();
        java.math.BigDecimal bigDecimal76 = schema74.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "no description" + "'", str75, "no description");
        org.junit.Assert.assertNull(bigDecimal76);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) true);
        schema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        objSchema13.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = objSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema34.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = objSchema38.getMinLength();
        schema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        java.lang.Boolean boolean45 = schema34.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.String str52 = objSchema47.getName();
        objSchema47.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList55 = objSchema47.getEnum();
        io.swagger.oas.models.media.Schema schema57 = objSchema47.name(",");
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        schema67.setTitle("*/*");
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema67.xml(xML72);
        io.swagger.oas.models.media.Schema schema75 = schema67.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema75.getProperties();
        io.swagger.oas.models.media.Schema schema77 = objSchema47.properties(strMap76);
        java.lang.Object obj78 = schema77.getDefault();
        io.swagger.oas.models.media.Schema schema79 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        schema79.setMaxItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList82 = schema79.getRequired();
        schema26.setRequired(strList82);
        schema6.setRequired(strList82);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(objList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema27.setMaximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema49.setMultipleOf(bigDecimal50);
        objSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = schema62.getExtensions();
        io.swagger.oas.models.media.Schema schema65 = schema62.addRequiredItem("#/components/schemas/");
        objSchema49.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = objSchema34.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema49);
        java.lang.Boolean boolean68 = schema67.getUniqueItems();
        java.lang.String str69 = schema67.getDescription();
        java.util.List<java.lang.Object> objList70 = schema67.getEnum();
        java.lang.String str71 = schema67.getTitle();
        io.swagger.oas.models.media.Schema schema72 = schema33.example((java.lang.Object) str71);
        io.swagger.oas.models.media.Schema schema74 = schema72.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema75.addProperties("*/*", schema81);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema82.getExtensions();
        io.swagger.oas.models.media.Schema schema85 = schema82.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.xml(xML86);
        java.lang.Object obj88 = schema85.getDefault();
        io.swagger.oas.models.media.Schema schema89 = schema85.getAdditionalProperties();
        schema74.setNot(schema85);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "no description" + "'", str71, "no description");
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(schema89);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.title("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("no description");
        io.swagger.oas.models.media.Schema schema38 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.maximum(bigDecimal39);
        objSchema0.addEnumItemObject((java.lang.Object) bigDecimal39);
        io.swagger.oas.models.media.Schema schema43 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema0.minLength((java.lang.Integer) 1);
        objSchema0.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema32.maxProperties((java.lang.Integer) 0);
        objSchema32.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = objSchema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema32.type(",");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema32.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema56.getEnum();
        java.lang.Boolean boolean64 = objSchema56.getWriteOnly();
        java.lang.Boolean boolean65 = objSchema56.getWriteOnly();
        boolean boolean66 = schema50.equals((java.lang.Object) objSchema56);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema56.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        schema21.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass30 = schema25.getClass();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.minimum(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMinimum(bigDecimal17);
        java.lang.Object obj19 = schema16.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = objSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema15.multipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = objSchema15.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        objSchema49.addExtension("", (java.lang.Object) objSchema53);
        objSchema49.set$ref("*/*");
        java.lang.Object obj61 = objSchema49.getExample();
        java.util.List<java.lang.Object> objList62 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.type(",");
        io.swagger.oas.models.media.Schema schema66 = schema64.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.String str72 = objSchema67.getName();
        objSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = objSchema67.addRequiredItem("#/components/schemas/");
        schema76.setMaxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal79 = null;
        schema76.setMultipleOf(bigDecimal79);
        boolean boolean81 = schema66.equals((java.lang.Object) schema76);
        schema7.setDefault((java.lang.Object) boolean81);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema7.minimum(bigDecimal83);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(objList62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema14.getAdditionalProperties();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema14.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema20.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref(",");
        io.swagger.oas.models.media.Schema schema12 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema8.getTitle();
        schema8.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = schema26.getMinimum();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = objSchema30.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema30.xml(xML40);
        java.math.BigDecimal bigDecimal42 = schema41.getMultipleOf();
        io.swagger.oas.models.media.Schema schema43 = schema26.additionalProperties(schema41);
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        schema41.setDiscriminator(discriminator46);
        java.lang.String str48 = schema41.getFormat();
        schema8.addExtension("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) str48);
        java.lang.String str50 = schema8.getFormat();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str50, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList13 = schema10.getRequired();
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setType("");
        java.math.BigDecimal bigDecimal21 = objSchema16.getMaximum();
        java.lang.Boolean boolean22 = objSchema16.getExclusiveMinimum();
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema16);
        io.swagger.oas.models.media.Schema schema29 = objSchema16.uniqueItems((java.lang.Boolean) true);
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal17 = objSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = objSchema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setWriteOnly((java.lang.Boolean) false);
        objSchema20.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray30 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray30, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray30, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray30, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray30, components37);
        boolean boolean39 = objSchema20.equals((java.lang.Object) components37);
        objSchema20.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = objSchema20.getUniqueItems();
        io.swagger.oas.models.media.Schema schema44 = objSchema20.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.setExample((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema47 = objSchema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setNullable((java.lang.Boolean) true);
        schema47.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(parameterArray30);
        org.junit.Assert.assertNotNull(parameterListOptional32);
        org.junit.Assert.assertNotNull(parameterListOptional34);
        org.junit.Assert.assertNotNull(parameterListOptional36);
        org.junit.Assert.assertNotNull(parameterListOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.String str14 = objSchema9.getName();
        objSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = objSchema9.addRequiredItem("#/components/schemas/");
        schema18.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = schema18.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = schema23.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema23);
        java.util.List<java.lang.String> strList26 = objSchema0.getRequired();
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = objSchema5.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.minLength((java.lang.Integer) 1);
        objSchema5.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema75.addProperties("*/*", schema81);
        io.swagger.oas.models.media.Schema schema84 = schema82.title("hi!");
        io.swagger.oas.models.media.Schema schema86 = schema84.maxLength((java.lang.Integer) 1);
        schema84.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema84.uniqueItems((java.lang.Boolean) true);
        schema74.setNot(schema84);
        schema84.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList94 = schema84.getEnum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(objList94);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        java.lang.Boolean boolean22 = schema7.getExclusiveMinimum();
        java.lang.Object obj23 = schema7.getDefault();
        java.lang.String str24 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema7.minLength((java.lang.Integer) 100);
        java.lang.String str27 = schema26.getFormat();
        java.lang.Class<?> wildcardClass28 = schema26.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema13.properties(strMap20);
        schema21.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 100);
        java.lang.Integer int26 = schema25.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.Schema schema36 = objSchema27.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        schema36.addExtension("#/components/schemas/", (java.lang.Object) objSchema39);
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        schema36.addEnumItemObject((java.lang.Object) operationParser45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema57 = schema54.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema59 = schema54.exclusiveMaximum((java.lang.Boolean) false);
        schema36.setAdditionalProperties(schema54);
        schema25.setNot(schema54);
        java.lang.Boolean boolean62 = schema54.getWriteOnly();
        java.lang.Integer int63 = schema54.getMinLength();
        schema54.setMaxProperties((java.lang.Integer) 100);
        schema12.setExample((java.lang.Object) schema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema54.externalDocs(externalDocumentation67);
        java.lang.Object obj69 = null;
        schema68.setDefault(obj69);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.Schema schema57 = schema41.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = schema41.getDeprecated();
        schema41.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        schema11.setDeprecated((java.lang.Boolean) false);
        java.lang.Object obj14 = schema11.getDefault();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema16.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        objSchema27.setExternalDocs(externalDocumentation40);
        java.lang.String str42 = objSchema27.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = objSchema27.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str42, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema20.setMinProperties((java.lang.Integer) 100);
        objSchema20.setPattern("");
        java.math.BigDecimal bigDecimal36 = objSchema20.getMultipleOf();
        java.lang.String[] strArray54 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        io.swagger.oas.models.media.Schema schema57 = objSchema20.required((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema59 = objSchema20.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema20.xml(xML60);
        io.swagger.oas.models.media.Schema schema62 = schema15.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.lang.String str5 = objSchema0.toString();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = objSchema0.getExternalDocs();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str5, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation6);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        schema25.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: [#/components/schemas/, ,, ,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal61 = schema60.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        objSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema11.addExtension("", (java.lang.Object) objSchema15);
        objSchema11.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema24 = objSchema11.minItems((java.lang.Integer) 0);
        schema24.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema24.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean45 = objSchema36.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.String str51 = objSchema46.getName();
        objSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = objSchema46.addRequiredItem("#/components/schemas/");
        java.lang.Object obj56 = schema55.getDefault();
        io.swagger.oas.models.media.XML xML57 = schema55.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        schema65.setRequired((java.util.List<java.lang.String>) strList77);
        schema55.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema81 = objSchema36.required((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema82 = schema24.required((java.util.List<java.lang.String>) strList77);
        schema10.setNot(schema24);
        io.swagger.oas.models.media.Schema schema85 = schema24.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal86 = null;
        schema24.setMinimum(bigDecimal86);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + true + "'", boolean45, true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(xML57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.maxLength((java.lang.Integer) (-1));
        objSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = objSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj14 = schema13.getExample();
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.example(obj15);
        io.swagger.oas.models.media.Schema schema18 = schema13.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema13.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema13.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML31 = null;
        schema12.setXml(xML31);
        schema12.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        objSchema29.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema29.properties(strMap52);
        objSchema0.setProperties(strMap52);
        io.swagger.oas.models.media.Schema schema56 = objSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator57 = objSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal58 = null;
        objSchema0.setMinimum(bigDecimal58);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        java.math.BigDecimal bigDecimal10 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.addRequiredItem("#/components/schemas/");
        schema20.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator23 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        schema31.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema20.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal43 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = objSchema0.additionalProperties(schema40);
        schema44.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.String str53 = objSchema48.getName();
        objSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList56 = objSchema48.getEnum();
        io.swagger.oas.models.media.Schema schema58 = objSchema48.exclusiveMaximum((java.lang.Boolean) false);
        schema58.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema58.getExtensions();
        java.lang.Integer int62 = schema58.getMinLength();
        io.swagger.oas.models.media.Schema schema64 = schema58.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = schema64.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.addExtension("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema68.setPattern("no description");
        objSchema68.setReadOnly((java.lang.Boolean) false);
        objSchema68.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList75 = objSchema68.getEnum();
        java.lang.Boolean boolean76 = objSchema68.getNullable();
        io.swagger.oas.models.media.Schema schema78 = objSchema68.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal79 = schema78.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema78.externalDocs(externalDocumentation80);
        schema64.setNot(schema78);
        io.swagger.oas.models.media.XML xML83 = null;
        schema64.setXml(xML83);
        java.util.List<java.lang.String> strList85 = schema64.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(objList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(objList75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        objSchema13.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema21 = schema12.example((java.lang.Object) strMap19);
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = objSchema37.getEnum();
        java.lang.Boolean boolean45 = objSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema37);
        io.swagger.oas.models.media.Schema schema50 = objSchema37.deprecated((java.lang.Boolean) true);
        java.lang.String str51 = objSchema37.getType();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        java.lang.String str23 = schema21.toString();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.maximum(bigDecimal24);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str23, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema7.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maximum(bigDecimal40);
        objSchema32.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal45 = null;
        objSchema44.setMultipleOf(bigDecimal45);
        objSchema44.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = objSchema44.title("hi!");
        java.lang.Object obj51 = null;
        objSchema44.addEnumItemObject(obj51);
        objSchema44.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = objSchema32.not((io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.Schema schema56 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.Schema schema58 = objSchema44.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal60 = null;
        objSchema59.setMultipleOf(bigDecimal60);
        objSchema59.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema59.set$ref("no description");
        java.util.List<java.lang.Object> objList66 = objSchema59.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema59.discriminator(discriminator67);
        schema68.setTitle("hi!");
        io.swagger.oas.models.media.Discriminator discriminator71 = schema68.getDiscriminator();
        schema68.setType(",");
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema68.maximum(bigDecimal74);
        io.swagger.oas.models.media.Schema schema76 = objSchema44.additionalProperties(schema68);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        schema68.setExternalDocs(externalDocumentation77);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema68.maximum(bigDecimal79);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(objList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        java.lang.Boolean boolean31 = schema30.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        schema40.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema40.minItems((java.lang.Integer) 100);
        java.lang.String str45 = schema44.get$ref();
        schema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema44.deprecated((java.lang.Boolean) false);
        schema30.addEnumItemObject((java.lang.Object) schema49);
        java.lang.Integer int51 = schema30.getMaxProperties();
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.lang.Boolean boolean8 = objSchema0.getDeprecated();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int15 = objSchema4.getMinProperties();
        io.swagger.oas.models.media.XML xML16 = objSchema4.getXml();
        objSchema4.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = objSchema4.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema14 = schema11.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema14.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema12.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema18.properties(strMap25);
        schema26.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema26.minItems((java.lang.Integer) 100);
        java.lang.String str31 = schema30.get$ref();
        java.lang.Boolean boolean32 = schema30.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema34);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.properties(strMap12);
        java.lang.String str14 = objSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.nullable((java.lang.Boolean) false);
        schema16.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int18 = schema17.getMaxItems();
        java.lang.String str19 = schema17.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        schema27.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj30 = schema27.getDefault();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.addProperties("no description", schema13);
        java.lang.Integer int15 = objSchema0.getMaxLength();
        objSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setMinProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = objSchema13.not(schema23);
        schema10.setAdditionalProperties(schema38);
        schema38.setPattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema38.setExternalDocs(externalDocumentation42);
        schema38.set$ref("#/components/schemas/");
        java.lang.Boolean boolean46 = schema38.getUniqueItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        schema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.writeOnly((java.lang.Boolean) false);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema7.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.lang.Boolean boolean24 = schema23.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema26.getName();
        objSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList34 = objSchema26.getEnum();
        io.swagger.oas.models.media.Schema schema36 = objSchema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = objSchema26.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = objSchema26.getExternalDocs();
        io.swagger.oas.models.media.Schema schema41 = objSchema26.title("*/*");
        java.lang.Boolean boolean42 = objSchema26.getExclusiveMinimum();
        objSchema26.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema26.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        objSchema26.setProperties(strMap47);
        objSchema26.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema schema60 = objSchema51.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema51.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = objSchema51.deprecated((java.lang.Boolean) false);
        schema64.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema68 = schema64.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema26.setNot(schema68);
        io.swagger.oas.models.media.Schema schema71 = objSchema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) objSchema26);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema23.multipleOf(bigDecimal73);
        // The following exception was thrown during execution in test generation
        try {
            schema12.setDefault((java.lang.Object) schema74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(objList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        java.lang.Integer int61 = objSchema55.getMinLength();
        schema54.addEnumItemObject((java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        objSchema63.addExtension("", (java.lang.Object) objSchema67);
        objSchema63.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema76 = objSchema63.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = objSchema63.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema79 = schema54.example((java.lang.Object) schema78);
        io.swagger.oas.models.media.Schema schema81 = schema54.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.title("hi!");
        java.lang.Object obj30 = schema29.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.util.List<java.lang.String> strList49 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema50 = schema29.addProperties("", schema47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int76 = objSchema67.getMaxLength();
        schema58.addExtension("no description", (java.lang.Object) objSchema67);
        io.swagger.oas.models.media.Schema schema79 = schema58.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema58.getExtensions();
        schema50.setExtensions(strMap80);
        schema13.setExtensions(strMap80);
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = objSchema42.getMinLength();
        objSchema37.addEnumItemObject((java.lang.Object) objSchema42);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int51 = objSchema42.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = objSchema42.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = objSchema42.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.addRequiredItem(",");
        schema10.setDefault((java.lang.Object) schema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema57.maximum(bigDecimal59);
        java.lang.String str61 = schema60.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema25.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = schema25.getMaximum();
        io.swagger.oas.models.media.XML xML31 = schema25.getXml();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(xML31);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema11.writeOnly((java.lang.Boolean) false);
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str12 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = objSchema15.getDefault();
        io.swagger.oas.models.media.Schema schema27 = objSchema15.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema28.getNot();
        java.lang.Integer int34 = objSchema28.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        objSchema35.addEnumItemObject((java.lang.Object) objSchema40);
        objSchema35.setMinProperties((java.lang.Integer) 100);
        objSchema35.setPattern("");
        java.math.BigDecimal bigDecimal51 = objSchema35.getMultipleOf();
        java.lang.String[] strArray69 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        io.swagger.oas.models.media.Schema schema72 = objSchema35.required((java.util.List<java.lang.String>) strList70);
        java.util.List<java.lang.Object> objList73 = schema72.getEnum();
        objSchema28.setEnum(objList73);
        schema27.setEnum(objList73);
        schema14.setEnum(objList73);
        java.lang.Object obj77 = schema14.getDefault();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(objList73);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema4.maximum(bigDecimal15);
        java.util.List<java.lang.String> strList17 = objSchema4.getRequired();
        io.swagger.oas.models.media.Schema schema19 = objSchema4.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator33 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator34 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean35 = objSchema0.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal36 = objSchema0.getMinimum();
        java.lang.Object obj37 = objSchema0.getExample();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema61 = schema59.description(",");
        java.lang.String[] strArray64 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema59.required((java.util.List<java.lang.String>) strList65);
        schema59.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema70 = schema59.getNot();
        java.lang.Integer int71 = schema59.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = schema59.getExternalDocs();
        io.swagger.oas.models.media.Schema schema74 = schema59.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = schema59.getExternalDocs();
        schema44.setNot(schema59);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema44.externalDocs(externalDocumentation77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.externalDocs(externalDocumentation79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.externalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema schema84 = schema82.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema86 = schema82.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator87 = null;
        schema82.setDiscriminator(discriminator87);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(externalDocumentation75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = objSchema5.getMaximum();
        java.lang.Integer int15 = objSchema5.getMaxItems();
        io.swagger.oas.models.media.Schema schema17 = objSchema5.title("");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal26 = objSchema0.getMinimum();
        java.lang.Integer int27 = objSchema0.getMinItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema0.setExternalDocs(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema40.getExtensions();
        schema23.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema44 = schema15.additionalProperties(schema23);
        java.lang.String str45 = schema44.getName();
        java.lang.String str46 = schema44.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        java.lang.String str35 = schema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema36.addExtension("", (java.lang.Object) objSchema40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        objSchema40.setExternalDocs(externalDocumentation46);
        java.lang.String str48 = objSchema40.getName();
        java.lang.Object obj49 = objSchema40.getDefault();
        io.swagger.oas.models.media.Schema schema51 = objSchema40.uniqueItems((java.lang.Boolean) false);
        schema51.setType(",");
        java.lang.Integer int54 = schema51.getMinItems();
        io.swagger.oas.models.media.Schema schema56 = schema51.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal57 = schema56.getMinimum();
        io.swagger.oas.models.media.Schema schema58 = schema7.not(schema56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        io.swagger.oas.models.media.Schema schema69 = objSchema59.name(",");
        io.swagger.oas.models.media.Discriminator discriminator70 = null;
        schema69.setDiscriminator(discriminator70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        objSchema72.addExtension("", (java.lang.Object) objSchema76);
        java.lang.Integer int82 = objSchema76.getMinProperties();
        java.math.BigDecimal bigDecimal83 = objSchema76.getMultipleOf();
        objSchema76.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema86 = schema69.not((io.swagger.oas.models.media.Schema) objSchema76);
        boolean boolean87 = schema7.equals((java.lang.Object) objSchema76);
        java.lang.Boolean boolean88 = objSchema76.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal89 = null;
        objSchema76.setMaximum(bigDecimal89);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(boolean88);
    }
}

