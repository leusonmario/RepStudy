import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest27 {

    public static boolean debug = false;

    @Test
    public void test13501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13501");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = objSchema5.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.discriminator(discriminator17);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test13502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13502");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema5 = null;
        objSchema0.setAdditionalProperties(schema5);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMinimum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema22.getExtensions();
        java.lang.Integer int26 = schema22.getMinLength();
        io.swagger.oas.models.media.Schema schema28 = schema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        schema36.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema40);
        schema36.setMinProperties((java.lang.Integer) 10);
        schema36.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema36.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema28.example((java.lang.Object) true);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema schema58 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test13503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13503");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        schema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = objSchema39.getMinLength();
        objSchema34.addEnumItemObject((java.lang.Object) objSchema39);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int48 = objSchema39.getMaxLength();
        io.swagger.oas.models.media.Schema schema50 = objSchema39.maxLength((java.lang.Integer) 100);
        schema31.setNot((io.swagger.oas.models.media.Schema) objSchema39);
        java.lang.Object obj52 = schema31.getExample();
        io.swagger.oas.models.media.Schema schema54 = schema31.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal55 = null;
        schema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema54.minItems((java.lang.Integer) 1);
        schema58.setMaxItems((java.lang.Integer) 0);
        schema58.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "#/components/schemas/" + "'", obj52, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test13504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13504");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema17.title("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.$ref("no description");
        schema25.setName("");
        io.swagger.oas.models.media.Schema schema31 = schema25.pattern("*/*");
        schema25.setMaxLength((java.lang.Integer) 0);
        schema13.setDefault((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        objSchema35.addExtension("", (java.lang.Object) objSchema39);
        objSchema35.set$ref("*/*");
        java.lang.Object obj47 = objSchema35.getExample();
        io.swagger.oas.models.media.Schema schema49 = objSchema35.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema49.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = schema51.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean54 = schema13.equals((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema56 = schema13.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema56.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test13505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13505");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        schema14.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal37 = null;
        objSchema36.setMultipleOf(bigDecimal37);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        objSchema36.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = objSchema36.pattern("*/*");
        java.lang.Boolean boolean48 = schema47.getExclusiveMaximum();
        java.lang.Boolean boolean49 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema47.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        objSchema51.addExtension("", (java.lang.Object) objSchema55);
        objSchema51.set$ref("*/*");
        java.lang.Object obj63 = objSchema51.getExample();
        java.util.List<java.lang.Object> objList64 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.type(",");
        io.swagger.oas.models.media.Schema schema68 = objSchema51.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema47.not(schema70);
        java.lang.String str72 = schema70.getDescription();
        io.swagger.oas.models.media.Schema schema74 = schema70.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setNot(schema74);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test13506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13506");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Boolean boolean24 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal25 = null;
        schema18.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema18.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema18.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int31 = schema30.getMaxLength();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.maximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test13507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13507");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = objSchema29.getMinLength();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema29);
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.XML xML46 = null;
        schema45.setXml(xML46);
        schema45.setTitle("*/*");
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.xml(xML50);
        schema25.setDefault((java.lang.Object) xML50);
        io.swagger.oas.models.media.Schema schema54 = schema25.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema25.discriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema57 = schema10.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.lang.Boolean boolean58 = schema25.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal59 = null;
        schema25.setMinimum(bigDecimal59);
        java.lang.Object obj62 = null;
        schema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: [#/components/schemas/, ,, ,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj62);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + true + "'", boolean58, true);
    }

    @Test
    public void test13508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13508");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.xml(xML32);
        java.lang.Integer int34 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema35.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("");
        io.swagger.oas.models.media.Discriminator discriminator46 = schema43.getDiscriminator();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema43.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.Schema schema59 = objSchema50.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal60 = schema59.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema68.pattern("*/*");
        io.swagger.oas.models.media.Schema schema73 = schema59.additionalProperties(schema68);
        java.lang.String str74 = schema68.getName();
        io.swagger.oas.models.media.Schema schema76 = schema68.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setType("");
        java.math.BigDecimal bigDecimal82 = objSchema77.getMaximum();
        java.math.BigDecimal bigDecimal83 = null;
        objSchema77.setMultipleOf(bigDecimal83);
        java.math.BigDecimal bigDecimal85 = objSchema77.getMaximum();
        objSchema77.setDescription("*/*");
        schema76.setNot((io.swagger.oas.models.media.Schema) objSchema77);
        java.util.List<java.lang.String> strList89 = schema76.getRequired();
        io.swagger.oas.models.media.Schema schema90 = schema48.addProperties("hi!", schema76);
        java.lang.Integer int91 = schema90.getMinLength();
        schema30.setDefault((java.lang.Object) schema90);
        java.lang.Boolean boolean93 = schema90.getReadOnly();
        schema90.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema90.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test13509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13509");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMinimum();
        schema27.setType("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema27.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.multipleOf(bigDecimal36);
        java.lang.Integer int38 = schema37.getMinLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test13510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13510");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema16.getType();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema16.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        io.swagger.oas.models.media.Schema schema46 = schema43.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal47 = null;
        schema43.setMinimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema43.maxLength((java.lang.Integer) 10);
        schema35.addEnumItemObject((java.lang.Object) schema50);
        io.swagger.oas.annotations.servers.Server server52 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray53 = new io.swagger.oas.annotations.servers.Server[] { server52 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional54 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        schema35.setDefault((java.lang.Object) serverListOptional54);
        java.lang.Boolean boolean56 = schema35.getDeprecated();
        io.swagger.oas.models.media.Schema schema58 = schema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema35.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema35.multipleOf(bigDecimal61);
        schema16.addEnumItemObject((java.lang.Object) bigDecimal61);
        io.swagger.oas.models.media.Schema schema65 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema65.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.externalDocs(externalDocumentation68);
        java.lang.Integer int70 = schema69.getMinProperties();
        schema69.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(serverArray53);
        org.junit.Assert.assertNotNull(serverListOptional54);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test13511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13511");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        schema7.setRequired((java.util.List<java.lang.String>) strList19);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema7.format("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema7.setExternalDocs(externalDocumentation26);
        java.lang.String str28 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema30 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test13512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13512");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        schema14.setMaximum(bigDecimal15);
        java.lang.Boolean boolean17 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = objSchema29.getMinLength();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema29);
        schema25.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema25.getDiscriminator();
        java.lang.Integer int39 = schema25.getMinLength();
        java.lang.Integer int40 = schema25.getMaxLength();
        schema14.addEnumItemObject((java.lang.Object) int40);
        io.swagger.oas.models.media.Schema schema43 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal44 = null;
        schema14.setMultipleOf(bigDecimal44);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test13513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13513");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema31.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test13514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13514");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.String str14 = objSchema9.getName();
        objSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList17 = objSchema9.getEnum();
        io.swagger.oas.models.media.Schema schema19 = objSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema20.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = objSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = objSchema20.title("*/*");
        java.lang.Boolean boolean36 = objSchema20.getExclusiveMinimum();
        objSchema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = objSchema20.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        objSchema20.setProperties(strMap41);
        objSchema20.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        objSchema47.setRequired((java.util.List<java.lang.String>) strList54);
        objSchema20.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = objSchema9.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema59 = objSchema0.example((java.lang.Object) strList54);
        java.lang.Boolean boolean60 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema62 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema64 = schema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema64.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(objList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test13515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13515");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.not(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema32.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean37 = schema36.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema9.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.String str44 = objSchema39.getName();
        objSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList47 = objSchema39.getEnum();
        java.lang.Boolean boolean48 = objSchema39.getWriteOnly();
        java.lang.Boolean boolean49 = objSchema39.getReadOnly();
        io.swagger.oas.models.media.Schema schema51 = objSchema39.maxLength((java.lang.Integer) (-1));
        schema51.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = schema51.getExternalDocs();
        java.math.BigDecimal bigDecimal55 = null;
        schema51.setMultipleOf(bigDecimal55);
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean59 = schema51.getWriteOnly();
        schema36.setAdditionalProperties(schema51);
        io.swagger.oas.models.media.Schema schema62 = schema51.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean63 = schema51.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(objList47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation54);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test13516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13516");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema17.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = schema17.minLength((java.lang.Integer) 10);
        schema25.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test13517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13517");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema57.maximum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema68.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.maximum(bigDecimal71);
        java.math.BigDecimal bigDecimal73 = schema70.getMinimum();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal73);
    }

    @Test
    public void test13518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13518");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        java.math.BigDecimal bigDecimal10 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.addRequiredItem("#/components/schemas/");
        schema20.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator23 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        schema31.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema20.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal43 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = objSchema0.additionalProperties(schema40);
        java.lang.String str45 = schema44.get$ref();
        io.swagger.oas.models.media.Schema schema47 = schema44.minProperties((java.lang.Integer) 100);
        java.lang.String str48 = schema44.getName();
        io.swagger.oas.models.media.Schema schema50 = schema44.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test13519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13519");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList13 = schema10.getRequired();
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setType("");
        java.math.BigDecimal bigDecimal21 = objSchema16.getMaximum();
        java.lang.Boolean boolean22 = objSchema16.getExclusiveMinimum();
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema16);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        objSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema28.properties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = schema36.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.title("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema40.description(",");
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema40.required((java.util.List<java.lang.String>) strList46);
        schema40.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema51 = schema40.getNot();
        io.swagger.oas.models.media.Schema schema53 = schema40.name("");
        java.lang.Integer int54 = schema40.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema58 = schema40.additionalProperties((io.swagger.oas.models.media.Schema) objSchema55);
        boolean boolean59 = schema27.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema61 = schema27.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.minimum(bigDecimal62);
        schema63.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test13520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13520");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) false);
        java.lang.String str28 = schema23.getTitle();
        io.swagger.oas.models.media.Schema schema30 = schema23.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = schema30.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        schema30.setExtensions(strMap32);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "*/*" + "'", str28, "*/*");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test13521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13521");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        java.lang.String str32 = schema30.getName();
        java.lang.String str33 = schema30.getType();
        io.swagger.oas.models.media.Schema schema35 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema37.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = objSchema37.getExternalDocs();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema37.xml(xML51);
        java.lang.Boolean boolean53 = schema52.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = objSchema54.title("hi!");
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema60.minProperties((java.lang.Integer) (-1));
        schema52.setDefault((java.lang.Object) schema60);
        schema52.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.lang.String str69 = schema30.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "," + "'", str32, ",");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test13522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13522");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema5.maximum(bigDecimal26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema5.discriminator(discriminator28);
        java.util.List<java.lang.String> strList30 = schema29.getRequired();
        schema29.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test13523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13523");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema schema12 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        schema12.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test13524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13524");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        java.lang.Boolean boolean9 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        java.lang.Object obj20 = schema19.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.XML xML30 = null;
        schema29.setXml(xML30);
        schema29.setTitle("*/*");
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.xml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema29.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        java.util.List<java.lang.String> strList39 = schema37.getRequired();
        io.swagger.oas.models.media.Schema schema40 = schema19.addProperties("", schema37);
        objSchema0.setNot(schema19);
        io.swagger.oas.models.media.Schema schema43 = objSchema0.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test13525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13525");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema22.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = objSchema22.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = objSchema22.getMultipleOf();
        objSchema22.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema22);
        objSchema22.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test13526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13526");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema17.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test13527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13527");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.title("hi!");
        java.lang.Object obj30 = schema29.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.util.List<java.lang.String> strList49 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema50 = schema29.addProperties("", schema47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int76 = objSchema67.getMaxLength();
        schema58.addExtension("no description", (java.lang.Object) objSchema67);
        io.swagger.oas.models.media.Schema schema79 = schema58.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema58.getExtensions();
        schema50.setExtensions(strMap80);
        schema13.setExtensions(strMap80);
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema13.xml(xML83);
        schema13.setMaxLength((java.lang.Integer) 10);
        schema13.setMaxLength((java.lang.Integer) 0);
        schema13.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test13528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13528");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMinProperties((java.lang.Integer) 1);
        java.lang.String str13 = schema8.toString();
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema8.minLength((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema17.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        schema20.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test13529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13529");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setMinProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = objSchema13.not(schema23);
        schema10.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema10.multipleOf(bigDecimal40);
        java.lang.String str42 = schema10.getType();
        io.swagger.oas.models.media.Schema schema44 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.minLength((java.lang.Integer) (-1));
        java.lang.Object obj47 = schema46.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test13530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13530");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        java.math.BigDecimal bigDecimal16 = objSchema0.getMultipleOf();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.required((java.util.List<java.lang.String>) strList35);
        java.util.List<java.lang.Object> objList38 = schema37.getEnum();
        schema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass41 = schema37.getClass();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(objList38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test13531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13531");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.$ref("*/*");
        io.swagger.oas.models.media.Schema schema10 = schema8.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test13532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13532");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema3.setPattern("no description");
        objSchema3.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = null;
        io.swagger.oas.models.media.Schema schema10 = objSchema3.addProperties("*/*", schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema14.getMinLength();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema14);
        schema10.setMinProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema10);
        io.swagger.oas.models.media.Schema schema27 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        io.swagger.oas.models.media.Schema schema30 = schema27.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13533");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj11 = schema10.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        objSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema12.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.title("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.description(",");
        java.math.BigDecimal bigDecimal27 = schema24.getMultipleOf();
        java.lang.String str28 = schema24.toString();
        java.lang.String str29 = schema24.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int40 = objSchema35.getMinLength();
        objSchema30.addEnumItemObject((java.lang.Object) objSchema35);
        io.swagger.oas.models.media.Schema schema43 = objSchema35.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = objSchema35.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal46 = null;
        objSchema45.setMultipleOf(bigDecimal46);
        objSchema45.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = objSchema50.getMinLength();
        objSchema45.addEnumItemObject((java.lang.Object) objSchema50);
        objSchema50.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int59 = objSchema50.getMaxLength();
        io.swagger.oas.models.media.Schema schema61 = objSchema50.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        io.swagger.oas.models.media.XML xML70 = null;
        schema69.setXml(xML70);
        schema69.setTitle("*/*");
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema69.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = schema61.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = objSchema35.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema24.required((java.util.List<java.lang.String>) strList81);
        schema10.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema89 = schema10.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema91 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "*/*" + "'", str29, "*/*");
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test13534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13534");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema10.setExternalDocs(externalDocumentation12);
        schema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema10.getExternalDocs();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(externalDocumentation16);
    }

    @Test
    public void test13535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13535");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema28.getNot();
        java.lang.Boolean boolean34 = objSchema28.getNullable();
        io.swagger.oas.models.media.Schema schema35 = schema27.example((java.lang.Object) objSchema28);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema37.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int40 = schema37.getMinLength();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test13536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13536");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema12.$ref("no description");
        schema12.setMaxItems((java.lang.Integer) 100);
        java.lang.Integer int25 = schema12.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test13537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13537");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema67.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str70 = schema67.getType();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test13538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13538");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema0.discriminator(discriminator39);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test13539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13539");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        java.lang.Object obj55 = schema52.getExample();
        java.lang.Boolean boolean56 = schema52.getDeprecated();
        io.swagger.oas.models.media.Schema schema58 = schema52.maxItems((java.lang.Integer) 100);
        java.lang.Integer int59 = schema58.getMinLength();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test13540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13540");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML16 = null;
        schema9.setXml(xML16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema9.externalDocs(externalDocumentation18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test13541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13541");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = schema18.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        io.swagger.oas.models.media.Schema schema46 = schema43.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal47 = null;
        schema43.setMinimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema43.maxLength((java.lang.Integer) 10);
        schema35.addEnumItemObject((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = schema35.type("no description");
        java.math.BigDecimal bigDecimal54 = schema53.getMinimum();
        schema53.setType("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str57 = schema53.getDescription();
        io.swagger.oas.models.media.Schema schema58 = schema18.addProperties("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test13542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13542");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema23.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema34.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema44.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.xml(xML48);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.xml(xML50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema52.addExtension("", (java.lang.Object) objSchema56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        objSchema56.setExternalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema schema65 = objSchema56.addRequiredItem(",");
        schema65.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj68 = schema65.getExample();
        java.util.List<java.lang.String> strList69 = schema65.getRequired();
        io.swagger.oas.models.media.Schema schema70 = schema51.required(strList69);
        schema36.setRequired(strList69);
        schema23.setRequired(strList69);
        io.swagger.oas.models.media.Schema schema74 = schema23.name("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setNullable((java.lang.Boolean) false);
        schema23.setMinItems((java.lang.Integer) 100);
        java.lang.String str79 = schema23.toString();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: [,]\n    type: ,\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str79, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: [,]\n    type: ,\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13543");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.xml(xML18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = objSchema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal39 = null;
        objSchema38.setMultipleOf(bigDecimal39);
        objSchema38.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = objSchema43.getMinLength();
        objSchema38.addEnumItemObject((java.lang.Object) objSchema43);
        objSchema43.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = objSchema43.maxProperties((java.lang.Integer) 0);
        objSchema43.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.Schema schema66 = objSchema57.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal67 = schema66.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        schema66.addExtension("#/components/schemas/", (java.lang.Object) objSchema69);
        io.swagger.jaxrs2.OperationParser operationParser75 = new io.swagger.jaxrs2.OperationParser();
        schema66.addEnumItemObject((java.lang.Object) operationParser75);
        io.swagger.oas.models.media.Schema schema77 = objSchema43.addProperties("no description", schema66);
        schema77.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema77.externalDocs(externalDocumentation80);
        io.swagger.oas.models.media.Schema schema82 = objSchema25.example((java.lang.Object) schema81);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal84 = null;
        objSchema83.setMultipleOf(bigDecimal84);
        objSchema83.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema83.set$ref("no description");
        java.util.List<java.lang.Object> objList90 = objSchema83.getEnum();
        objSchema83.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema93 = schema82.additionalProperties((io.swagger.oas.models.media.Schema) objSchema83);
        io.swagger.oas.models.media.Schema schema95 = schema82.exclusiveMinimum((java.lang.Boolean) false);
        schema17.setNot(schema95);
        io.swagger.oas.models.media.Discriminator discriminator97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema17.discriminator(discriminator97);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(objList90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test13544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13544");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getPattern();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema12.multipleOf(bigDecimal19);
        java.lang.Boolean boolean21 = schema20.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "no description" + "'", str18, "no description");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test13545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13545");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema7.maxItems((java.lang.Integer) 100);
        java.lang.String str17 = schema16.getPattern();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean22 = objSchema21.getDeprecated();
        java.lang.Boolean boolean23 = objSchema21.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema25 = objSchema21.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema26.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        objSchema26.setProperties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = objSchema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = objSchema26.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        objSchema38.setProperties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = objSchema38.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int50 = objSchema38.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = objSchema26.additionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        java.lang.Integer int52 = objSchema38.getMinItems();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        io.swagger.oas.models.media.Schema schema54 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema56.properties(strMap63);
        io.swagger.oas.models.media.Schema schema66 = schema64.type("");
        io.swagger.oas.models.media.Schema schema68 = schema66.title("*/*");
        io.swagger.oas.models.media.Schema schema70 = schema68.description(",");
        java.lang.String[] strArray73 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        io.swagger.oas.models.media.Schema schema76 = schema68.required((java.util.List<java.lang.String>) strList74);
        schema68.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema79 = schema68.getNot();
        io.swagger.oas.models.media.Schema schema81 = schema68.name("");
        java.lang.Integer int82 = schema68.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal84 = null;
        objSchema83.setMultipleOf(bigDecimal84);
        io.swagger.oas.models.media.Schema schema86 = schema68.additionalProperties((io.swagger.oas.models.media.Schema) objSchema83);
        io.swagger.oas.models.media.XML xML87 = null;
        schema68.setXml(xML87);
        io.swagger.oas.models.media.Schema schema90 = schema68.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema68.setExclusiveMaximum((java.lang.Boolean) true);
        schema16.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema68);
        schema68.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "no description" + "'", str17, "no description");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test13546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13546");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.Integer int15 = schema10.getMinProperties();
        java.lang.String str16 = schema10.toString();
        java.lang.String str17 = schema10.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        schema25.setTitle("*/*");
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.xml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema31.deprecated((java.lang.Boolean) true);
        schema10.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema10.maxProperties((java.lang.Integer) 10);
        schema36.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int39 = schema36.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test13547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13547");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        schema52.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema52.minProperties((java.lang.Integer) 0);
        java.lang.Object obj61 = schema60.getDefault();
        io.swagger.oas.models.media.Schema schema63 = schema60.format("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema63.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema63.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test13548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13548");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("hi!");
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj17 = schema16.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test13549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13549");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.name(",");
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        schema38.setTitle("*/*");
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.xml(xML43);
        io.swagger.oas.models.media.Schema schema46 = schema38.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = schema46.getProperties();
        io.swagger.oas.models.media.Schema schema48 = objSchema18.properties(strMap47);
        java.lang.Object obj49 = schema48.getDefault();
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.xml(xML50);
        java.lang.Integer int52 = schema48.getMaxProperties();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema48.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema55 = schema17.not(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema55.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.multipleOf(bigDecimal60);
        schema59.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test13550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13550");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        schema13.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema13.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema25.properties(strMap32);
        schema33.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema33.minItems((java.lang.Integer) 100);
        java.lang.String str38 = schema37.get$ref();
        schema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema41.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema49.type("");
        io.swagger.oas.models.media.Discriminator discriminator52 = schema49.getDiscriminator();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema49.maximum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        objSchema55.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema54.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema37.required((java.util.List<java.lang.String>) strList62);
        java.lang.Object obj67 = schema37.getDefault();
        io.swagger.oas.models.media.Schema schema68 = schema13.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test13551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13551");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.maxLength((java.lang.Integer) 100);
        java.lang.String str14 = objSchema0.getTitle();
        objSchema0.setTitle("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test13552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13552");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        schema24.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList27 = schema24.getRequired();
        java.math.BigDecimal bigDecimal28 = null;
        schema24.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        java.math.BigDecimal bigDecimal35 = objSchema30.getMaximum();
        java.lang.Boolean boolean36 = objSchema30.getExclusiveMinimum();
        objSchema30.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema24.not((io.swagger.oas.models.media.Schema) objSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema50.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("*/*");
        io.swagger.oas.models.media.Schema schema56 = schema54.description(",");
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        io.swagger.oas.models.media.Schema schema62 = schema54.required((java.util.List<java.lang.String>) strList60);
        schema54.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema65 = schema54.getNot();
        io.swagger.oas.models.media.Schema schema67 = schema54.name("");
        java.lang.Integer int68 = schema54.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal70 = null;
        objSchema69.setMultipleOf(bigDecimal70);
        io.swagger.oas.models.media.Schema schema72 = schema54.additionalProperties((io.swagger.oas.models.media.Schema) objSchema69);
        boolean boolean73 = schema41.equals((java.lang.Object) schema72);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = schema72.getExtensions();
        io.swagger.oas.models.media.Schema schema75 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema72);
        io.swagger.oas.models.media.Schema schema77 = schema72.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test13553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13553");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.title("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("no description");
        io.swagger.oas.models.media.Schema schema38 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.maximum(bigDecimal39);
        objSchema0.addEnumItemObject((java.lang.Object) bigDecimal39);
        io.swagger.oas.models.media.Schema schema43 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        objSchema48.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = objSchema53.getMinLength();
        objSchema48.addEnumItemObject((java.lang.Object) objSchema53);
        objSchema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = objSchema53.maxProperties((java.lang.Integer) 0);
        objSchema53.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema67 = objSchema53.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = objSchema53.type(",");
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema53.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        objSchema72.addExtension("", (java.lang.Object) objSchema76);
        objSchema72.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema85 = objSchema72.exclusiveMinimum((java.lang.Boolean) false);
        schema85.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema88 = schema71.not(schema85);
        io.swagger.oas.models.media.Schema schema89 = schema47.example((java.lang.Object) schema88);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema47.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test13554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13554");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema9.nullable((java.lang.Boolean) true);
        java.lang.Object obj24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.example(obj24);
        io.swagger.oas.models.media.Schema schema27 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test13555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13555");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = objSchema29.getMinLength();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema29);
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.XML xML46 = null;
        schema45.setXml(xML46);
        schema45.setTitle("*/*");
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.xml(xML50);
        schema25.setDefault((java.lang.Object) xML50);
        io.swagger.oas.models.media.Schema schema54 = schema25.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema25.discriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema57 = schema10.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.math.BigDecimal bigDecimal58 = schema57.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        schema57.setDiscriminator(discriminator59);
        io.swagger.oas.models.media.Schema schema62 = schema57.maxProperties((java.lang.Integer) 100);
        schema57.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test13556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13556");
        io.swagger.oas.annotations.links.Link link0 = null;
        java.util.Optional<io.swagger.oas.models.links.Link> linkOptional1 = io.swagger.jaxrs2.OperationParser.getLink(link0);
        java.lang.Class<?> wildcardClass2 = linkOptional1.getClass();
        org.junit.Assert.assertNotNull(linkOptional1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test13557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13557");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("hi!");
        schema24.setMaxLength((java.lang.Integer) 10);
        objSchema0.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.title("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema44.description(",");
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema44.required((java.util.List<java.lang.String>) strList50);
        schema44.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema55 = schema44.getNot();
        java.lang.Integer int56 = schema44.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = schema44.getExternalDocs();
        io.swagger.oas.models.media.Schema schema59 = schema44.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema59.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str62 = schema59.getPattern();
        java.lang.String str63 = schema59.getType();
        io.swagger.oas.models.media.Schema schema64 = objSchema0.not(schema59);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "no description" + "'", str62, "no description");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test13558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13558");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str22 = schema21.getTitle();
        java.lang.String str23 = schema21.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema31.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema36 = schema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.name(",");
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        schema57.setTitle("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema57.xml(xML62);
        io.swagger.oas.models.media.Schema schema65 = schema57.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema67 = objSchema37.properties(strMap66);
        io.swagger.oas.models.media.Schema schema68 = schema36.properties(strMap66);
        schema21.setProperties(strMap66);
        schema21.setDeprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList72 = schema21.getRequired();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str23, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList72);
    }

    @Test
    public void test13559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13559");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        java.lang.Boolean boolean40 = schema26.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test13560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13560");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.XML xML39 = schema38.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        schema38.setExternalDocs(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML39);
    }

    @Test
    public void test13561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13561");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = null;
        schema55.setXml(xML58);
        java.lang.String str60 = schema55.getTitle();
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema55.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean65 = schema64.getWriteOnly();
        io.swagger.oas.models.media.Schema schema67 = schema64.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
    }

    @Test
    public void test13562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13562");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        java.lang.String str28 = schema8.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test13563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13563");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.maximum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema56.nullable((java.lang.Boolean) false);
        java.lang.String str59 = schema58.getName();
        io.swagger.oas.models.media.Discriminator discriminator60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema58.discriminator(discriminator60);
        schema61.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test13564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13564");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        java.math.BigDecimal bigDecimal39 = null;
        schema7.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema7.xml(xML43);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test13565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13565");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj14 = schema13.getExample();
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.example(obj15);
        io.swagger.oas.models.media.Schema schema18 = schema13.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList27 = objSchema19.getEnum();
        io.swagger.oas.models.media.Schema schema29 = objSchema19.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = objSchema19.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = objSchema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = objSchema19.title("*/*");
        java.lang.Boolean boolean35 = objSchema19.getExclusiveMinimum();
        objSchema19.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = objSchema19.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        objSchema19.setProperties(strMap40);
        objSchema19.setMaxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean44 = objSchema19.getDeprecated();
        schema13.addEnumItemObject((java.lang.Object) objSchema19);
        objSchema19.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema19.writeOnly((java.lang.Boolean) true);
        objSchema19.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test13566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13566");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.minProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean16 = schema15.getExclusiveMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test13567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13567");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean15 = schema12.getExclusiveMinimum();
        java.lang.String str16 = schema12.getFormat();
        schema12.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13568");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema15.setDiscriminator(discriminator20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema32.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema42.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal46 = null;
        schema42.setMinimum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema42.maxLength((java.lang.Integer) 10);
        schema34.addEnumItemObject((java.lang.Object) schema49);
        io.swagger.oas.annotations.servers.Server server51 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray52 = new io.swagger.oas.annotations.servers.Server[] { server51 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional53 = io.swagger.jaxrs2.OperationParser.getServers(serverArray52);
        schema34.setDefault((java.lang.Object) serverListOptional53);
        java.lang.Boolean boolean55 = schema34.getDeprecated();
        io.swagger.oas.models.media.Schema schema57 = schema34.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema59.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        objSchema62.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema62.properties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = schema70.type("");
        io.swagger.oas.models.media.Schema schema74 = schema72.title("*/*");
        io.swagger.oas.models.media.Schema schema76 = schema74.description(",");
        io.swagger.oas.models.media.Schema schema78 = schema74.uniqueItems((java.lang.Boolean) true);
        schema78.setDeprecated((java.lang.Boolean) true);
        schema59.setNot(schema78);
        io.swagger.oas.models.media.Schema schema82 = schema15.additionalProperties(schema78);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema78.maximum(bigDecimal83);
        io.swagger.oas.models.media.Schema schema86 = schema84.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(serverArray52);
        org.junit.Assert.assertNotNull(serverListOptional53);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test13569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13569");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema11.getTitle();
        schema11.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test13570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13570");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.xml(xML28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.XML xML38 = null;
        schema37.setXml(xML38);
        schema37.setTitle("*/*");
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema37.xml(xML42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema37.externalDocs(externalDocumentation44);
        schema25.setNot(schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema25.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema schema60 = objSchema51.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal61 = schema60.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        io.swagger.oas.models.media.XML xML70 = null;
        schema69.setXml(xML70);
        io.swagger.oas.models.media.Schema schema73 = schema69.pattern("*/*");
        io.swagger.oas.models.media.Schema schema74 = schema60.additionalProperties(schema69);
        io.swagger.oas.models.media.Schema schema76 = schema60.readOnly((java.lang.Boolean) false);
        java.lang.String str77 = schema76.getDescription();
        java.lang.Boolean boolean78 = schema76.getReadOnly();
        io.swagger.oas.models.media.Schema schema79 = schema25.additionalProperties(schema76);
        objSchema4.setDefault((java.lang.Object) schema76);
        schema76.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test13571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13571");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        java.util.List<java.lang.String> strList17 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema19 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal25 = null;
        objSchema24.setMultipleOf(bigDecimal25);
        objSchema24.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = objSchema24.getNot();
        io.swagger.oas.models.media.Schema schema31 = objSchema24.title(",");
        schema31.setType(",");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema36 = schema21.example((java.lang.Object) schema31);
        schema21.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test13572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13572");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.XML xML56 = null;
        schema41.setXml(xML56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema41.discriminator(discriminator58);
        schema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema41.maxItems((java.lang.Integer) 100);
        schema63.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema63.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        schema67.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
    }

    @Test
    public void test13573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13573");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.$ref("*/*");
        io.swagger.oas.models.media.Schema schema31 = schema24.$ref("");
        io.swagger.oas.models.media.Schema schema33 = schema31.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str41 = schema34.get$ref();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "*/*" + "'", str41, "*/*");
    }

    @Test
    public void test13574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13574");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        schema11.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.minProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema31.addExtension("", (java.lang.Object) objSchema35);
        io.swagger.oas.models.media.Schema schema42 = objSchema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema23.additionalProperties(schema42);
        java.lang.Boolean boolean44 = schema42.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.type("");
        io.swagger.oas.models.media.Schema schema57 = schema55.title("*/*");
        io.swagger.oas.models.media.Schema schema59 = schema57.description(",");
        java.lang.String[] strArray62 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        io.swagger.oas.models.media.Schema schema65 = schema57.required((java.util.List<java.lang.String>) strList63);
        schema42.setRequired((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema67 = schema11.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        schema67.setExternalDocs(externalDocumentation68);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test13575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13575");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.type(",");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = objSchema0.getWriteOnly();
        java.lang.Integer int19 = objSchema0.getMinProperties();
        java.lang.String str20 = objSchema0.get$ref();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "*/*" + "'", str20, "*/*");
    }

    @Test
    public void test13576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13576");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        io.swagger.oas.models.media.Schema schema34 = schema12.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema12.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMinimum(bigDecimal39);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test13577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13577");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test13578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13578");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("no description");
        io.swagger.oas.models.media.Schema schema19 = schema15.minProperties((java.lang.Integer) 10);
        schema19.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test13579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13579");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        schema11.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema11.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.xml(xML18);
        java.util.List<java.lang.Object> objList20 = schema19.getEnum();
        java.lang.Integer int21 = schema19.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMaximum(bigDecimal22);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test13580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13580");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean25 = objSchema0.getWriteOnly();
        java.lang.Integer int26 = objSchema0.getMaxProperties();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema0.xml(xML27);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test13581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13581");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        objSchema0.setDiscriminator(discriminator16);
        objSchema0.setMinItems((java.lang.Integer) 10);
        java.lang.Boolean boolean20 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema22 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        java.lang.String str26 = schema24.getPattern();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "no description" + "'", str26, "no description");
    }

    @Test
    public void test13582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13582");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        schema8.setFormat("");
        schema8.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema26.additionalProperties(schema35);
        java.lang.String str41 = schema35.getName();
        io.swagger.oas.models.media.Schema schema43 = schema35.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal45 = null;
        objSchema44.setMultipleOf(bigDecimal45);
        objSchema44.setType("");
        java.math.BigDecimal bigDecimal49 = objSchema44.getMaximum();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema44.setMultipleOf(bigDecimal50);
        java.math.BigDecimal bigDecimal52 = objSchema44.getMaximum();
        objSchema44.setDescription("*/*");
        schema43.setNot((io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.XML xML56 = null;
        schema43.setXml(xML56);
        java.lang.Integer int58 = schema43.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = schema8.addProperties("no description", schema43);
        java.lang.String str60 = schema43.getDescription();
        io.swagger.oas.models.media.Schema schema62 = schema43.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test13583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13583");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.String str27 = objSchema22.getName();
        objSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema22.getEnum();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.name(",");
        objSchema22.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = objSchema22.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema39 = schema36.uniqueItems((java.lang.Boolean) true);
        schema21.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal41 = null;
        schema36.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema36.maxLength((java.lang.Integer) 0);
        java.lang.String str45 = schema44.getName();
        io.swagger.oas.models.media.Schema schema47 = schema44.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "," + "'", str45, ",");
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test13584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13584");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema15.getPattern();
        java.math.BigDecimal bigDecimal19 = schema15.getMinimum();
        java.lang.Integer int20 = schema15.getMaxLength();
        io.swagger.oas.models.media.Schema schema22 = schema15.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test13585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13585");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.lang.Boolean boolean10 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        objSchema0.setDiscriminator(discriminator13);
        java.lang.String str15 = objSchema0.getName();
        io.swagger.oas.models.media.Schema schema17 = objSchema0.addRequiredItem("#/components/schemas/hi!");
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        schema17.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test13586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13586");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        schema11.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema11.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema11.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema22 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test13587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13587");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        java.lang.String str14 = schema13.getName();
        java.lang.Boolean boolean15 = schema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema13.getUniqueItems();
        java.math.BigDecimal bigDecimal19 = schema13.getMultipleOf();
        java.lang.String str20 = schema13.getName();
        io.swagger.oas.models.media.Schema schema22 = schema13.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test13588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13588");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMultipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema18.set$ref("no description");
        objSchema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema38 = objSchema28.name(",");
        objSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema18.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str42 = objSchema18.getType();
        io.swagger.oas.models.media.Schema schema44 = objSchema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = schema52.getExtensions();
        io.swagger.oas.models.media.Schema schema55 = schema52.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema57 = schema52.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        java.lang.String str63 = objSchema58.getName();
        objSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList66 = objSchema58.getEnum();
        io.swagger.oas.models.media.Schema schema68 = objSchema58.name(",");
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = null;
        io.swagger.oas.models.media.Schema schema78 = objSchema71.addProperties("*/*", schema77);
        io.swagger.oas.models.media.XML xML79 = null;
        schema78.setXml(xML79);
        schema78.setTitle("*/*");
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema78.xml(xML83);
        io.swagger.oas.models.media.Schema schema86 = schema78.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema88 = objSchema58.properties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema57.properties(strMap87);
        objSchema18.setProperties(strMap87);
        schema15.setProperties(strMap87);
        java.math.BigDecimal bigDecimal92 = null;
        schema15.setMaximum(bigDecimal92);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(objList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test13589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13589");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        objSchema0.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList21 = schema20.getRequired();
        io.swagger.oas.models.media.Schema schema22 = schema20.getAdditionalProperties();
        schema20.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test13590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13590");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setType(",");
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean26 = schema25.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test13591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13591");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        objSchema5.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = objSchema5.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema43.description("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test13592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13592");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        schema24.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList27 = schema24.getRequired();
        java.math.BigDecimal bigDecimal28 = null;
        schema24.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        java.math.BigDecimal bigDecimal35 = objSchema30.getMaximum();
        java.lang.Boolean boolean36 = objSchema30.getExclusiveMinimum();
        objSchema30.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema24.not((io.swagger.oas.models.media.Schema) objSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema50.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("*/*");
        io.swagger.oas.models.media.Schema schema56 = schema54.description(",");
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        io.swagger.oas.models.media.Schema schema62 = schema54.required((java.util.List<java.lang.String>) strList60);
        schema54.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema65 = schema54.getNot();
        io.swagger.oas.models.media.Schema schema67 = schema54.name("");
        java.lang.Integer int68 = schema54.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal70 = null;
        objSchema69.setMultipleOf(bigDecimal70);
        io.swagger.oas.models.media.Schema schema72 = schema54.additionalProperties((io.swagger.oas.models.media.Schema) objSchema69);
        boolean boolean73 = schema41.equals((java.lang.Object) schema72);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = schema72.getExtensions();
        io.swagger.oas.models.media.Schema schema75 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema72);
        io.swagger.oas.models.media.Schema schema77 = schema75.format("hi!");
        java.math.BigDecimal bigDecimal78 = null;
        schema77.setMinimum(bigDecimal78);
        schema77.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test13593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13593");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        java.lang.Object obj25 = null;
        objSchema18.addEnumItemObject(obj25);
        io.swagger.oas.models.media.Schema schema28 = objSchema18.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema18.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = objSchema44.getMinLength();
        schema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.Boolean boolean51 = schema40.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.String str58 = objSchema53.getName();
        objSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList61 = objSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name(",");
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema53.properties(strMap82);
        java.lang.Object obj84 = schema83.getDefault();
        io.swagger.oas.models.media.Schema schema85 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema30.properties(strMap86);
        io.swagger.oas.models.media.Schema schema88 = schema7.properties(strMap86);
        io.swagger.oas.models.media.Schema schema90 = schema7.title("no description");
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema7.maximum(bigDecimal91);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(objList61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test13594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13594");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = schema25.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test13595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13595");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        objSchema5.setMinimum(bigDecimal22);
        java.lang.Integer int24 = objSchema5.getMaxItems();
        io.swagger.oas.models.media.Schema schema26 = objSchema5.maxProperties((java.lang.Integer) 0);
        schema26.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema42.addRequiredItem("#/components/schemas/");
        objSchema29.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList47 = objSchema29.getRequired();
        io.swagger.oas.models.media.Schema schema49 = objSchema29.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList50 = null;
        schema49.setRequired(strList50);
        java.lang.String str52 = schema49.getTitle();
        schema26.setNot(schema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        schema26.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema26.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema26.getFormat();
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test13596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13596");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema17.addExtension("", (java.lang.Object) objSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        objSchema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema27.properties(strMap34);
        io.swagger.oas.models.media.Schema schema37 = schema35.type("");
        io.swagger.oas.models.media.Schema schema38 = objSchema17.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema40 = objSchema17.readOnly((java.lang.Boolean) false);
        schema16.setExample((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = schema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema43.setDiscriminator(discriminator44);
        schema43.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test13597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13597");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = schema17.addRequiredItem("no description");
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema29.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = objSchema33.getMinLength();
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema33);
        java.lang.Boolean boolean40 = schema29.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.String str47 = objSchema42.getName();
        objSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList50 = objSchema42.getEnum();
        io.swagger.oas.models.media.Schema schema52 = objSchema42.name(",");
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        io.swagger.oas.models.media.Schema schema72 = objSchema42.properties(strMap71);
        java.lang.Object obj73 = schema72.getDefault();
        io.swagger.oas.models.media.Schema schema74 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = schema29.getProperties();
        io.swagger.oas.models.media.Schema schema77 = schema29.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = schema77.getProperties();
        io.swagger.oas.models.media.Schema schema79 = schema20.properties(strMap78);
        schema9.setNot(schema20);
        io.swagger.oas.models.media.Schema schema82 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean83 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(objList50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test13598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13598");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = objSchema16.title("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema32.externalDocs(externalDocumentation39);
        schema24.addEnumItemObject((java.lang.Object) schema40);
        schema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.addProperties("", schema40);
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
    }

    @Test
    public void test13599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13599");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = schema7.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int29 = objSchema24.getMinLength();
        objSchema19.addEnumItemObject((java.lang.Object) objSchema24);
        io.swagger.oas.models.media.Schema schema32 = objSchema24.readOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMaxItems();
        io.swagger.oas.models.media.Schema schema35 = schema32.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema32.minProperties((java.lang.Integer) 10);
        schema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema7.additionalProperties(schema43);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test13600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13600");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        schema26.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        objSchema41.addEnumItemObject((java.lang.Object) objSchema46);
        io.swagger.oas.models.media.Schema schema54 = objSchema46.readOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = schema54.getMaxItems();
        io.swagger.oas.models.media.Schema schema57 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        schema54.setExternalDocs(externalDocumentation58);
        java.lang.Integer int60 = schema54.getMaxProperties();
        io.swagger.oas.models.media.Schema schema62 = schema54.writeOnly((java.lang.Boolean) true);
        schema26.setNot(schema54);
        io.swagger.oas.models.media.Schema schema65 = schema54.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema54.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema54.externalDocs(externalDocumentation67);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test13601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13601");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.type("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str23 = schema22.getTitle();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test13602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13602");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema19.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = objSchema19.deprecated((java.lang.Boolean) false);
        objSchema19.setMaxItems((java.lang.Integer) 10);
        java.lang.Object obj35 = objSchema19.getExample();
        io.swagger.oas.models.media.Schema schema36 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema19);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.Schema schema48 = objSchema39.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = objSchema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema39.minLength((java.lang.Integer) 1);
        java.lang.String str53 = schema52.getPattern();
        schema38.setNot(schema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = schema38.getExternalDocs();
        io.swagger.oas.models.media.Schema schema57 = schema38.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "no description" + "'", str53, "no description");
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test13603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13603");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Integer int24 = schema7.getMaxProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema7.xml(xML25);
        schema26.setMaxProperties((java.lang.Integer) (-1));
        schema26.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema26.pattern("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test13604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13604");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.xml(xML18);
        java.lang.String str20 = schema15.getDescription();
        io.swagger.oas.models.media.Schema schema22 = schema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test13605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13605");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        schema11.setDeprecated((java.lang.Boolean) false);
        java.lang.Object obj14 = schema11.getDefault();
        schema11.setExclusiveMinimum((java.lang.Boolean) false);
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test13606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13606");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal28 = null;
        schema24.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema24.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        objSchema33.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema33.properties(strMap40);
        schema41.setExclusiveMinimum((java.lang.Boolean) true);
        schema31.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str45 = schema31.get$ref();
        java.lang.Object obj46 = schema31.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema47.setExternalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema47.properties(strMap70);
        schema31.setProperties(strMap70);
        schema15.setNot(schema31);
        io.swagger.oas.models.media.Schema schema74 = schema15.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(schema74);
    }

    @Test
    public void test13607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13607");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = objSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = objSchema12.title("*/*");
        java.lang.Boolean boolean28 = objSchema12.getExclusiveMinimum();
        objSchema12.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = objSchema12.getUniqueItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema12.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema34.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = schema48.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema48.uniqueItems((java.lang.Boolean) true);
        schema33.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema53 = schema11.additionalProperties(schema48);
        java.lang.Boolean boolean54 = schema11.getWriteOnly();
        java.math.BigDecimal bigDecimal55 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(bigDecimal55);
    }

    @Test
    public void test13608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13608");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.example(obj15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema26.additionalProperties(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema26.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema16.properties(strMap41);
        schema16.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.Schema schema54 = objSchema45.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema54.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema56.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal61 = null;
        schema60.setMaximum(bigDecimal61);
        schema16.setDefault((java.lang.Object) bigDecimal61);
        java.lang.String str64 = schema16.getDescription();
        io.swagger.oas.models.media.Schema schema66 = schema16.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test13609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13609");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.externalDocs(externalDocumentation30);
        schema29.setMaxItems((java.lang.Integer) (-1));
        java.lang.Object obj34 = schema29.getDefault();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test13610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13610");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) (-1));
        schema31.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = schema31.getMinProperties();
        java.lang.Integer int35 = schema31.getMinItems();
        io.swagger.oas.models.media.Schema schema37 = schema31.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema37.getPattern();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "no description" + "'", str40, "no description");
    }

    @Test
    public void test13611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13611");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema12.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema12.discriminator(discriminator41);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test13612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13612");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.addRequiredItem("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema20.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
    }

    @Test
    public void test13613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13613");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.String str13 = schema12.get$ref();
        java.lang.Boolean boolean14 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema15.set$ref("no description");
        objSchema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.name(",");
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema15.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str39 = objSchema15.getType();
        io.swagger.oas.models.media.Schema schema41 = objSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema12.additionalProperties(schema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema41.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test13614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13614");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        schema12.setWriteOnly((java.lang.Boolean) false);
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test13615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13615");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema23);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        schema19.setType(",");
        io.swagger.oas.models.media.Schema schema35 = schema19.deprecated((java.lang.Boolean) false);
        java.lang.Integer int36 = schema19.getMaxProperties();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema19.xml(xML37);
        io.swagger.oas.models.media.Schema schema39 = objSchema4.additionalProperties(schema38);
        java.math.BigDecimal bigDecimal40 = null;
        schema38.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema38.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema38.getExtensions();
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test13616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13616");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema23.addProperties("*/*", schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        io.swagger.oas.models.media.Schema schema33 = schema30.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal34 = null;
        schema30.setMinimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema30.maxLength((java.lang.Integer) 10);
        java.lang.String str38 = schema30.getTitle();
        io.swagger.oas.models.media.Schema schema40 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList41 = schema30.getRequired();
        boolean boolean42 = schema20.equals((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema44 = schema20.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test13617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13617");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema7.type(",");
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test13618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13618");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = objSchema0.maximum(bigDecimal5);
        schema6.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test13619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13619");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        objSchema20.setDiscriminator(discriminator33);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13620");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        objSchema0.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList21 = schema20.getRequired();
        io.swagger.oas.models.media.Schema schema22 = schema20.getAdditionalProperties();
        java.lang.Boolean boolean23 = schema20.getNullable();
        io.swagger.oas.models.media.Schema schema25 = schema20.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.externalDocs(externalDocumentation26);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test13621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13621");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.XML xML56 = null;
        schema41.setXml(xML56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema41.discriminator(discriminator58);
        schema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema41.maxItems((java.lang.Integer) 100);
        schema63.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean66 = schema63.getUniqueItems();
        java.math.BigDecimal bigDecimal67 = null;
        schema63.setMaximum(bigDecimal67);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        schema63.setExternalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema72 = schema63.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML73 = schema63.getXml();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(xML73);
    }

    @Test
    public void test13622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13622");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        schema50.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema50.uniqueItems((java.lang.Boolean) false);
        java.lang.String str57 = schema50.getName();
        io.swagger.oas.models.media.Schema schema59 = schema50.maxLength((java.lang.Integer) 1);
        java.lang.String str60 = schema59.getPattern();
        io.swagger.oas.models.media.Schema schema62 = schema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str63 = schema59.get$ref();
        java.lang.String str64 = schema59.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "," + "'", str57, ",");
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "no description" + "'", str60, "no description");
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test13623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13623");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        java.math.BigDecimal bigDecimal39 = null;
        schema7.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.type("");
        io.swagger.oas.models.media.Schema schema57 = schema55.title("*/*");
        io.swagger.oas.models.media.Schema schema59 = schema57.description(",");
        java.math.BigDecimal bigDecimal60 = schema57.getMultipleOf();
        java.lang.String str61 = schema57.toString();
        schema44.setNot(schema57);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str61, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13624");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema20.minItems((java.lang.Integer) 100);
        java.lang.Integer int25 = schema24.getMaxLength();
        io.swagger.oas.models.media.Schema schema27 = schema24.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        java.util.List<java.lang.Object> objList37 = objSchema28.getEnum();
        objSchema28.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = objSchema28.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.Schema schema51 = objSchema42.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal52 = schema51.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        schema51.addExtension("#/components/schemas/", (java.lang.Object) objSchema54);
        io.swagger.jaxrs2.OperationParser operationParser60 = new io.swagger.jaxrs2.OperationParser();
        schema51.addEnumItemObject((java.lang.Object) operationParser60);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = schema69.getExtensions();
        io.swagger.oas.models.media.Schema schema72 = schema69.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema74 = schema69.exclusiveMaximum((java.lang.Boolean) false);
        schema51.setAdditionalProperties(schema69);
        schema51.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema51.getExtensions();
        schema41.setExtensions(strMap78);
        schema24.setExtensions(strMap78);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test13625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13625");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMinimum(bigDecimal14);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test13626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13626");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        schema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema30 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = schema25.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema32.addExtension("", (java.lang.Object) objSchema36);
        objSchema32.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema45 = objSchema32.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema45.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal62 = null;
        objSchema61.setMultipleOf(bigDecimal62);
        objSchema61.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int71 = objSchema66.getMinLength();
        objSchema61.addEnumItemObject((java.lang.Object) objSchema66);
        objSchema66.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int75 = objSchema66.getMaxLength();
        schema57.addExtension("no description", (java.lang.Object) objSchema66);
        io.swagger.oas.models.media.Schema schema78 = schema57.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = schema57.getExtensions();
        schema49.setExtensions(strMap79);
        schema25.setExtensions(strMap79);
        schema7.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema schema83 = schema7.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(schema83);
    }

    @Test
    public void test13627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13627");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.minimum(bigDecimal15);
        schema11.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test13628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13628");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema69 = schema67.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal70 = schema69.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema69.externalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Schema schema74 = schema72.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str75 = schema74.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str75, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13629");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.xml(xML12);
        java.lang.Object obj14 = objSchema0.getDefault();
        java.util.List<java.lang.String> strList15 = objSchema0.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test13630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13630");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = objSchema16.title("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema32.externalDocs(externalDocumentation39);
        schema24.addEnumItemObject((java.lang.Object) schema40);
        schema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.addProperties("", schema40);
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema46.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap51);
    }

    @Test
    public void test13631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13631");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.minLength((java.lang.Integer) 10);
        java.util.List<java.lang.Object> objList17 = schema16.getEnum();
        schema16.setNullable((java.lang.Boolean) true);
        java.lang.Integer int20 = schema16.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(objList17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test13632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13632");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        objSchema17.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema31.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema41 = objSchema17.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        schema41.setProperties(strMap65);
        io.swagger.oas.models.media.Schema schema69 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.title("");
        io.swagger.oas.models.media.Schema schema73 = schema71.type("");
        schema16.setExample((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema76 = schema16.writeOnly((java.lang.Boolean) false);
        schema16.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema82 = schema16.minProperties((java.lang.Integer) 10);
        java.lang.Integer int83 = schema82.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
    }

    @Test
    public void test13633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13633");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        schema23.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema23.getExternalDocs();
        java.lang.Integer int39 = schema23.getMaxLength();
        io.swagger.oas.models.media.Schema schema40 = objSchema4.example((java.lang.Object) schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema23.getExtensions();
        schema23.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema23.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema23.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema23.uniqueItems((java.lang.Boolean) true);
        java.lang.String str50 = schema49.get$ref();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test13634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13634");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        schema13.setMaxItems((java.lang.Integer) 10);
        java.lang.Integer int16 = schema13.getMaxProperties();
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        schema13.setMinimum(bigDecimal19);
        java.lang.Boolean boolean21 = schema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema13.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13635");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        schema30.setDeprecated((java.lang.Boolean) true);
        java.lang.String str33 = schema30.toString();
        io.swagger.oas.models.media.Schema schema35 = schema30.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        io.swagger.oas.models.media.Schema schema46 = schema43.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = objSchema47.getMinLength();
        schema43.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema47);
        schema43.setExclusiveMinimum((java.lang.Boolean) true);
        schema43.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal59 = null;
        objSchema58.setMultipleOf(bigDecimal59);
        objSchema58.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = objSchema58.title("hi!");
        io.swagger.oas.models.media.Schema schema66 = schema64.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = schema66.$ref("no description");
        schema66.setName("");
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema66.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema66.minimum(bigDecimal74);
        io.swagger.oas.models.media.Schema schema76 = schema43.example((java.lang.Object) schema75);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        objSchema77.setRequired((java.util.List<java.lang.String>) strList84);
        schema76.setRequired((java.util.List<java.lang.String>) strList84);
        schema35.setRequired((java.util.List<java.lang.String>) strList84);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str33, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test13636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13636");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.minimum(bigDecimal22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test13637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13637");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal17 = null;
        objSchema0.setMaximum(bigDecimal17);
        java.lang.Integer int19 = objSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test13638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13638");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema8.additionalProperties(schema28);
        java.lang.Object obj30 = schema8.getDefault();
        io.swagger.oas.models.media.XML xML31 = null;
        schema8.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = objSchema35.getName();
        objSchema35.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList43 = objSchema35.getEnum();
        io.swagger.oas.models.media.Schema schema45 = objSchema35.name(",");
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.XML xML56 = null;
        schema55.setXml(xML56);
        schema55.setTitle("*/*");
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema55.xml(xML60);
        io.swagger.oas.models.media.Schema schema63 = schema55.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = schema63.getProperties();
        io.swagger.oas.models.media.Schema schema65 = objSchema35.properties(strMap64);
        schema65.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal68 = schema65.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema65.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        objSchema71.addExtension("", (java.lang.Object) objSchema75);
        objSchema71.set$ref("*/*");
        schema65.addEnumItemObject((java.lang.Object) objSchema71);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema65.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = schema85.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setAdditionalProperties(schema87);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(objList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test13639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13639");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = objSchema20.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.xml(xML33);
        io.swagger.oas.models.media.Schema schema35 = schema19.additionalProperties(schema30);
        java.lang.Boolean boolean36 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = schema38.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator42 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.String str48 = objSchema43.getName();
        objSchema43.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList51 = objSchema43.getEnum();
        io.swagger.oas.models.media.Schema schema53 = objSchema43.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = objSchema43.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = objSchema43.getExternalDocs();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema43.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema58.maxLength((java.lang.Integer) 10);
        java.lang.String str61 = schema58.getFormat();
        java.lang.Boolean boolean62 = schema58.getUniqueItems();
        io.swagger.oas.models.media.Schema schema64 = schema58.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema58.getReadOnly();
        schema58.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj68 = schema58.getExample();
        io.swagger.oas.models.media.Schema schema69 = schema38.additionalProperties(schema58);
        schema69.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(objList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + true + "'", boolean65, true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test13640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13640");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.Integer int15 = schema10.getMinProperties();
        java.lang.String str16 = schema10.toString();
        java.lang.String str17 = schema10.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        schema25.setTitle("*/*");
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.xml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema31.deprecated((java.lang.Boolean) true);
        schema10.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema10.maxProperties((java.lang.Integer) 10);
        schema10.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema10.getReadOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test13641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13641");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = objSchema21.getMinLength();
        objSchema16.addEnumItemObject((java.lang.Object) objSchema21);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.minimum(bigDecimal28);
        schema29.setMaxItems((java.lang.Integer) 10);
        java.lang.Integer int32 = schema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str35 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema37 = schema29.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.String str44 = objSchema39.getName();
        objSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList47 = objSchema39.getEnum();
        io.swagger.oas.models.media.Schema schema49 = objSchema39.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = objSchema39.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = objSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = objSchema39.title("*/*");
        java.lang.Boolean boolean55 = objSchema39.getExclusiveMinimum();
        objSchema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = objSchema39.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        objSchema39.setProperties(strMap60);
        objSchema39.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema65 = objSchema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        java.lang.String[] strArray72 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        objSchema66.setRequired((java.util.List<java.lang.String>) strList73);
        objSchema39.setRequired((java.util.List<java.lang.String>) strList73);
        schema37.addExtension("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) objSchema39);
        schema15.addEnumItemObject((java.lang.Object) "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema15.externalDocs(externalDocumentation79);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema81.setPattern("no description");
        objSchema81.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = null;
        io.swagger.oas.models.media.Schema schema88 = objSchema81.addProperties("*/*", schema87);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema88.getExtensions();
        io.swagger.oas.models.media.Schema schema91 = schema88.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        schema91.setDiscriminator(discriminator92);
        java.math.BigDecimal bigDecimal94 = null;
        schema91.setMultipleOf(bigDecimal94);
        java.math.BigDecimal bigDecimal96 = schema91.getMultipleOf();
        schema80.setDefault((java.lang.Object) schema91);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(objList47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(bigDecimal96);
    }

    @Test
    public void test13642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13642");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.util.List<java.lang.String> strList25 = objSchema13.getRequired();
        objSchema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        objSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema28.properties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = schema36.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema48.getExtensions();
        io.swagger.oas.models.media.Schema schema51 = schema48.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal52 = null;
        schema48.setMinimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema48.maxLength((java.lang.Integer) 10);
        schema40.addEnumItemObject((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.name("");
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema58.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 0);
        objSchema13.setAdditionalProperties(schema64);
        java.util.List<java.lang.String> strList66 = objSchema13.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test13643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13643");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMinItems((java.lang.Integer) 1);
        java.lang.String str16 = schema11.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = objSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema24 = objSchema17.exclusiveMinimum((java.lang.Boolean) false);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        schema11.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        schema35.setTitle("*/*");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        schema35.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema11.required((java.util.List<java.lang.String>) strList47);
        java.util.List<java.lang.Object> objList51 = schema50.getEnum();
        io.swagger.oas.models.media.Schema schema53 = schema50.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj54 = null;
        boolean boolean55 = schema53.equals(obj54);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(objList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test13644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13644");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        objSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = objSchema0.getExternalDocs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objSchema0.getExtensions();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test13645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13645");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        java.lang.Integer int15 = schema12.getMaxProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test13646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13646");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        java.lang.Boolean boolean10 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML11 = null;
        objSchema0.setXml(xML11);
        io.swagger.oas.models.media.Schema schema14 = objSchema0.minItems((java.lang.Integer) 100);
        java.lang.Object obj15 = schema14.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test13647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13647");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        io.swagger.oas.annotations.Parameter parameter19 = null;
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.parameters.Parameter> parameterOptional21 = io.swagger.jaxrs2.OperationParser.getParameter(parameter19, components20);
        io.swagger.oas.models.media.Schema schema22 = schema18.example((java.lang.Object) parameterOptional21);
        schema22.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.deprecated((java.lang.Boolean) true);
        java.lang.String str27 = schema26.getDescription();
        schema26.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str30 = schema26.getType();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(parameterOptional21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test13648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13648");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.xml(xML11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema12.getExtensions();
        io.swagger.oas.models.media.Schema schema14 = schema12.getAdditionalProperties();
        schema12.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test13649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13649");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean27 = schema24.getDeprecated();
        java.lang.Boolean boolean28 = schema24.getExclusiveMinimum();
        java.lang.String str29 = schema24.getType();
        io.swagger.oas.models.media.Schema schema30 = schema24.getNot();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(schema30);
    }

    @Test
    public void test13650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13650");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        java.math.BigDecimal bigDecimal55 = objSchema50.getMaximum();
        objSchema50.setMinLength((java.lang.Integer) 0);
        objSchema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str61 = schema12.getName();
        io.swagger.oas.models.media.Schema schema63 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema65 = schema12.uniqueItems((java.lang.Boolean) true);
        schema65.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList68 = schema65.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        java.lang.String str74 = objSchema69.getName();
        objSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = objSchema69.addRequiredItem("#/components/schemas/");
        java.lang.Object obj79 = schema78.getDefault();
        schema78.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema83 = schema78.maxLength((java.lang.Integer) 100);
        schema83.setFormat("");
        schema83.setWriteOnly((java.lang.Boolean) false);
        boolean boolean88 = schema65.equals((java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema90 = schema83.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test13651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13651");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema12.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean43 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema45 = schema12.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test13652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13652");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test13653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13653");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        objSchema23.addEnumItemObject((java.lang.Object) objSchema28);
        objSchema28.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        objSchema37.setExternalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        schema51.setXml(xML52);
        schema51.setTitle("*/*");
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema51.xml(xML56);
        io.swagger.oas.models.media.Schema schema59 = schema51.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = schema59.getProperties();
        io.swagger.oas.models.media.Schema schema61 = objSchema37.properties(strMap60);
        io.swagger.oas.models.media.Schema schema63 = objSchema37.format(",");
        io.swagger.oas.models.media.Schema schema65 = objSchema37.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        objSchema66.setExternalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema73.addProperties("*/*", schema79);
        io.swagger.oas.models.media.XML xML81 = null;
        schema80.setXml(xML81);
        schema80.setTitle("*/*");
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema80.xml(xML85);
        io.swagger.oas.models.media.Schema schema88 = schema80.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = schema88.getProperties();
        io.swagger.oas.models.media.Schema schema90 = objSchema66.properties(strMap89);
        objSchema37.setProperties(strMap89);
        objSchema28.setProperties(strMap89);
        schema13.setProperties(strMap89);
        java.math.BigDecimal bigDecimal94 = null;
        schema13.setMinimum(bigDecimal94);
        java.lang.Integer int96 = schema13.getMaxProperties();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int96);
    }

    @Test
    public void test13654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13654");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        objSchema0.setType("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        schema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema31);
        java.lang.Boolean boolean38 = schema27.getNullable();
        io.swagger.oas.models.media.Schema schema40 = schema27.type(",");
        objSchema0.addExtension("*/*", (java.lang.Object) schema40);
        java.math.BigDecimal bigDecimal42 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setMinItems((java.lang.Integer) 10);
        java.lang.String str47 = schema40.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str47, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13655");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema10.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test13656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13656");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        java.lang.Integer int12 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.lang.Boolean boolean24 = schema23.getReadOnly();
        java.lang.Integer int25 = schema23.getMaxItems();
        schema10.setNot(schema23);
        io.swagger.oas.models.media.Schema schema27 = schema23.getAdditionalProperties();
        java.math.BigDecimal bigDecimal28 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema27.setMultipleOf(bigDecimal28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(schema27);
    }

    @Test
    public void test13657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13657");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.maximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = schema23.getMultipleOf();
        java.lang.String str28 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str31 = schema30.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str31, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13658");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema25.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal49 = null;
        schema45.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema45.maxLength((java.lang.Integer) 10);
        schema37.addEnumItemObject((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.name("");
        io.swagger.oas.models.media.Schema schema56 = objSchema0.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema58 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean59 = schema58.getExclusiveMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
    }

    @Test
    public void test13659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13659");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema5.maximum(bigDecimal16);
        schema17.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test13660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13660");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean10 = schema9.getExclusiveMaximum();
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.uniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList15 = schema14.getRequired();
        java.util.List<java.lang.String> strList16 = schema14.getRequired();
        java.lang.Integer int17 = schema14.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test13661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13661");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema12.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList29 = schema24.getRequired();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.minimum(bigDecimal30);
        schema31.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema31.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema31.setTitle("#/components/schemas/no description");
        java.lang.Boolean boolean38 = schema31.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
    }

    @Test
    public void test13662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13662");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        schema41.setMaxLength((java.lang.Integer) 1);
        java.lang.Integer int51 = schema41.getMinProperties();
        java.lang.Integer int52 = schema41.getMinLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test13663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13663");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        objSchema19.setExternalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        schema35.setTitle("*/*");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema35.xml(xML40);
        java.lang.Boolean boolean42 = schema35.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema43 = schema27.example((java.lang.Object) boolean42);
        java.math.BigDecimal bigDecimal44 = schema27.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema18.example((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema18.additionalProperties(schema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema18.externalDocs(externalDocumentation48);
        java.lang.String str50 = schema49.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test13664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13664");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema9.getExternalDocs();
        java.lang.Boolean boolean12 = schema9.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.externalDocs(externalDocumentation13);
        schema9.setTitle("");
        io.swagger.oas.models.media.Schema schema18 = schema9.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test13665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13665");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        schema14.setMinItems((java.lang.Integer) 1);
        schema14.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "no description" + "'", str21, "no description");
    }

    @Test
    public void test13666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13666");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.externalDocs(externalDocumentation53);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.String str60 = objSchema55.getName();
        objSchema55.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema55.getEnum();
        io.swagger.oas.models.media.Schema schema65 = objSchema55.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = objSchema55.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = objSchema55.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal71 = null;
        objSchema70.setMultipleOf(bigDecimal71);
        objSchema70.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = null;
        io.swagger.oas.models.media.Schema schema83 = objSchema76.addProperties("*/*", schema82);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = schema83.getExtensions();
        io.swagger.oas.models.media.Schema schema86 = schema83.addRequiredItem("#/components/schemas/");
        objSchema70.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema88 = objSchema55.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema70);
        objSchema55.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int91 = objSchema55.getMinLength();
        java.lang.Object obj92 = objSchema55.getExample();
        schema52.setDefault((java.lang.Object) objSchema55);
        java.math.BigDecimal bigDecimal94 = schema52.getMinimum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(externalDocumentation68);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test13667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13667");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema7.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test13668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13668");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        java.lang.Boolean boolean49 = schema41.getWriteOnly();
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema41.xml(xML50);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        schema41.setDiscriminator(discriminator52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.Schema schema64 = objSchema55.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal65 = schema64.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema64.getExternalDocs();
        java.lang.Boolean boolean67 = schema64.getWriteOnly();
        schema41.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema64);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test13669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13669");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = objSchema0.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test13670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13670");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        schema7.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema28);
        schema24.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        schema44.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test13671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13671");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema9.getExternalDocs();
        java.lang.Boolean boolean12 = schema9.getWriteOnly();
        schema9.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML15 = null;
        schema9.setXml(xML15);
        schema9.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test13672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13672");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.lang.Boolean boolean11 = schema9.getWriteOnly();
        java.math.BigDecimal bigDecimal12 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema9.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxLength((java.lang.Integer) (-1));
        schema16.setDescription("");
        io.swagger.oas.models.media.Schema schema20 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema16.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal23 = schema16.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test13673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13673");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.type(",");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMaximum(bigDecimal24);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13674");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema12.minimum(bigDecimal26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        schema12.setExternalDocs(externalDocumentation28);
        schema12.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema32.addExtension("", (java.lang.Object) objSchema36);
        objSchema32.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema45 = objSchema32.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str46 = objSchema32.getPattern();
        java.lang.Boolean boolean47 = objSchema32.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.minProperties((java.lang.Integer) 10);
        schema55.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema55.readOnly((java.lang.Boolean) false);
        schema55.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema55.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal68 = null;
        objSchema67.setMultipleOf(bigDecimal68);
        objSchema67.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        objSchema67.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema74.addProperties("*/*", schema80);
        io.swagger.oas.models.media.XML xML82 = null;
        schema81.setXml(xML82);
        schema81.setTitle("*/*");
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema81.xml(xML86);
        io.swagger.oas.models.media.Schema schema89 = schema81.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema91 = objSchema67.properties(strMap90);
        schema55.setProperties(strMap90);
        io.swagger.oas.models.media.Schema schema93 = objSchema32.properties(strMap90);
        schema12.setDefault((java.lang.Object) objSchema32);
        io.swagger.oas.models.media.Discriminator discriminator95 = null;
        objSchema32.setDiscriminator(discriminator95);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "no description" + "'", str46, "no description");
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test13675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13675");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        schema36.setDiscriminator(discriminator37);
        java.lang.Integer int39 = schema36.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test13676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13676");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = objSchema0.getUniqueItems();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        objSchema0.setMinimum(bigDecimal27);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test13677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13677");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema8.getExternalDocs();
        java.lang.Boolean boolean15 = schema8.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema8.description("");
        io.swagger.oas.models.media.Schema schema19 = schema8.name("#/components/schemas/,");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test13678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13678");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = objSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test13679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13679");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema23);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        schema19.setType(",");
        io.swagger.oas.models.media.Schema schema35 = schema19.deprecated((java.lang.Boolean) false);
        java.lang.Integer int36 = schema19.getMaxProperties();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema19.xml(xML37);
        io.swagger.oas.models.media.Schema schema39 = objSchema4.additionalProperties(schema38);
        java.math.BigDecimal bigDecimal40 = null;
        schema38.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema38.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema43.getExternalDocs();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.multipleOf(bigDecimal45);
        java.math.BigDecimal bigDecimal47 = schema46.getMinimum();
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
    }

    @Test
    public void test13680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13680");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema18.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = objSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = objSchema18.title("*/*");
        java.lang.Boolean boolean34 = objSchema18.getExclusiveMinimum();
        objSchema18.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = objSchema18.getUniqueItems();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema18.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema40.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema40.name(",");
        objSchema40.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = objSchema40.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList55 = schema54.getEnum();
        io.swagger.oas.models.media.Schema schema57 = schema54.uniqueItems((java.lang.Boolean) true);
        schema39.setAdditionalProperties(schema54);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema60.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.xml(xML63);
        schema17.setDefault((java.lang.Object) xML63);
        io.swagger.oas.models.media.XML xML66 = schema17.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(objList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(xML66);
    }

    @Test
    public void test13681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13681");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema0.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str14 = objSchema0.getDescription();
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema19.addExtension("", (java.lang.Object) objSchema23);
        objSchema19.set$ref("*/*");
        java.lang.Object obj31 = objSchema19.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema33.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = objSchema33.getExternalDocs();
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema33.xml(xML47);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = objSchema19.addProperties("*/*", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList60 = objSchema52.getEnum();
        io.swagger.oas.models.media.Schema schema62 = objSchema52.exclusiveMaximum((java.lang.Boolean) false);
        schema62.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        objSchema65.addExtension("", (java.lang.Object) objSchema69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        objSchema75.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = null;
        io.swagger.oas.models.media.Schema schema83 = objSchema75.properties(strMap82);
        io.swagger.oas.models.media.Schema schema85 = schema83.type("");
        io.swagger.oas.models.media.Schema schema86 = objSchema65.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema62.additionalProperties(schema86);
        schema51.setExample((java.lang.Object) schema87);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema87.externalDocs(externalDocumentation89);
        schema18.addEnumItemObject((java.lang.Object) schema87);
        schema87.set$ref("no description");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(objList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test13682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13682");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = schema7.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMaximum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test13683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13683");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        java.lang.Object obj11 = null;
        objSchema0.addEnumItemObject(obj11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = schema24.getDefault();
        io.swagger.oas.models.media.XML xML26 = schema24.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema34.setRequired((java.util.List<java.lang.String>) strList46);
        schema24.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema14.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema14.xml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema14.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test13684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13684");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.writeOnly((java.lang.Boolean) false);
        schema65.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal70 = schema65.getMinimum();
        io.swagger.oas.models.media.XML xML71 = null;
        schema65.setXml(xML71);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal70);
    }

    @Test
    public void test13685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13685");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        schema9.setPattern("*/*");
        schema9.setDescription("*/*");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema9.maximum(bigDecimal19);
        java.lang.Integer int21 = schema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13686");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMinItems((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = schema11.getExclusiveMinimum();
        schema11.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = schema11.getMaximum();
        schema11.setMinLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema11.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test13687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13687");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.xml(xML32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = objSchema0.example((java.lang.Object) schema35);
        java.lang.Boolean boolean37 = schema36.getNullable();
        io.swagger.oas.models.media.Schema schema39 = schema36.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test13688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13688");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.math.BigDecimal bigDecimal14 = schema12.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.multipleOf(bigDecimal15);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test13689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13689");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema8.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minLength((java.lang.Integer) 1);
        schema22.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test13690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13690");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        java.lang.String str19 = schema17.get$ref();
        schema17.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test13691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13691");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("hi!");
        java.lang.Boolean boolean17 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema20.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = schema28.$ref("hi!");
        java.lang.Boolean boolean31 = schema30.getDeprecated();
        schema30.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema9.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema9.description("*/*");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test13692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13692");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        objSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal11 = null;
        objSchema10.setMultipleOf(bigDecimal11);
        objSchema10.setType("");
        java.math.BigDecimal bigDecimal15 = objSchema10.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = objSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = objSchema29.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = objSchema29.getExternalDocs();
        io.swagger.oas.models.media.Schema schema44 = objSchema29.title("*/*");
        java.lang.Boolean boolean45 = objSchema29.getExclusiveMinimum();
        objSchema29.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema29.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        objSchema29.setProperties(strMap50);
        objSchema29.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = objSchema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        objSchema56.setRequired((java.util.List<java.lang.String>) strList63);
        objSchema29.setRequired((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema67 = objSchema18.required((java.util.List<java.lang.String>) strList63);
        objSchema10.setRequired((java.util.List<java.lang.String>) strList63);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList63);
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean72 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal75 = null;
        objSchema74.setMultipleOf(bigDecimal75);
        objSchema74.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema79.setPattern("no description");
        objSchema79.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int84 = objSchema79.getMinLength();
        objSchema74.addEnumItemObject((java.lang.Object) objSchema79);
        io.swagger.oas.models.media.Schema schema87 = objSchema79.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = objSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema87);
        java.lang.String str89 = schema87.getType();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test13693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13693");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 10);
        schema21.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema21.readOnly((java.lang.Boolean) false);
        schema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema21.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.discriminator(discriminator33);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.discriminator(discriminator35);
        schema13.setExample((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test13694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13694");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.lang.Boolean boolean10 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test13695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13695");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema10.getMaxLength();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema10.xml(xML16);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema18.xml(xML28);
        java.lang.Boolean boolean30 = schema29.getNullable();
        java.lang.Boolean boolean31 = schema29.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        schema29.setNot((io.swagger.oas.models.media.Schema) objSchema32);
        io.swagger.oas.models.media.Schema schema63 = objSchema32.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal64 = schema63.getMinimum();
        schema63.setReadOnly((java.lang.Boolean) true);
        schema17.setNot(schema63);
        schema17.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
    }

    @Test
    public void test13696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13696");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        objSchema0.setTitle("");
        java.lang.String str11 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList25 = schema22.getRequired();
        java.math.BigDecimal bigDecimal26 = null;
        schema22.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal29 = null;
        objSchema28.setMultipleOf(bigDecimal29);
        objSchema28.setType("");
        java.math.BigDecimal bigDecimal33 = objSchema28.getMaximum();
        java.lang.Boolean boolean34 = objSchema28.getExclusiveMinimum();
        objSchema28.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema22.not((io.swagger.oas.models.media.Schema) objSchema28);
        io.swagger.oas.models.media.Schema schema41 = objSchema28.uniqueItems((java.lang.Boolean) true);
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str44 = objSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema45 = objSchema0.example((java.lang.Object) str44);
        io.swagger.oas.models.media.Schema schema47 = schema45.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test13697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13697");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.maximum(bigDecimal29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema27.setExternalDocs(externalDocumentation31);
        boolean boolean33 = objSchema0.equals((java.lang.Object) externalDocumentation31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema34.setNullable((java.lang.Boolean) false);
        java.lang.String str44 = objSchema34.get$ref();
        io.swagger.oas.models.media.Schema schema46 = objSchema34.maxItems((java.lang.Integer) (-1));
        objSchema0.addEnumItemObject((java.lang.Object) objSchema34);
        io.swagger.oas.models.media.Schema schema49 = objSchema0.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test13698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13698");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML36 = schema33.getXml();
        io.swagger.oas.models.media.Schema schema38 = schema33.maxProperties((java.lang.Integer) 100);
        schema38.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test13699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13699");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        java.math.BigDecimal bigDecimal10 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.addRequiredItem("#/components/schemas/");
        schema20.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator23 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        schema31.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema20.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal43 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = objSchema0.additionalProperties(schema40);
        java.lang.Object obj45 = schema40.getExample();
        io.swagger.oas.models.media.Schema schema47 = schema40.deprecated((java.lang.Boolean) true);
        java.lang.String str48 = schema47.getTitle();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "#/components/schemas/" + "'", obj45, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test13700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13700");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        schema13.setMaximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Integer int23 = schema13.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema13.getProperties();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema13.maximum(bigDecimal25);
        schema13.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema13.maximum(bigDecimal29);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13701");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.nullable((java.lang.Boolean) false);
        java.lang.Integer int12 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList19 = null;
        schema14.setRequired(strList19);
        io.swagger.oas.models.media.Schema schema22 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema14.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test13702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13702");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema13.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema13.setProperties(strMap18);
        java.lang.String[] strArray24 = new java.lang.String[] { "*/*", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        schema13.addEnumItemObject((java.lang.Object) tagSetOptional26);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagSetOptional26);
    }

    @Test
    public void test13703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13703");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema30.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema36.addExtension("", (java.lang.Object) objSchema40);
        objSchema36.set$ref("*/*");
        schema30.addEnumItemObject((java.lang.Object) objSchema36);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema30.minimum(bigDecimal49);
        java.lang.Boolean boolean51 = schema50.getExclusiveMaximum();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema50.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test13704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13704");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema12.getReadOnly();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.maximum(bigDecimal14);
        java.lang.Integer int16 = schema12.getMinLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test13705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13705");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        java.lang.String str19 = objSchema5.getTitle();
        io.swagger.oas.models.media.Schema schema21 = objSchema5.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test13706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13706");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        java.lang.Boolean boolean16 = schema12.getUniqueItems();
        io.swagger.oas.models.media.Schema schema18 = schema12.title("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema23.addProperties("*/*", schema29);
        io.swagger.oas.models.media.Schema schema32 = objSchema23.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal33 = schema32.getMinimum();
        java.math.BigDecimal bigDecimal34 = null;
        schema32.setMultipleOf(bigDecimal34);
        java.lang.String str36 = schema32.getType();
        io.swagger.oas.models.media.Schema schema38 = schema32.description("");
        java.lang.Boolean boolean39 = schema32.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema41 = schema32.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Object> objList42 = schema41.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.externalDocs(externalDocumentation43);
        schema18.setDefault((java.lang.Object) schema41);
        schema41.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test13707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13707");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema29.additionalProperties(schema38);
        java.lang.Boolean boolean44 = schema38.getExclusiveMinimum();
        schema38.setMaxItems((java.lang.Integer) 100);
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        schema19.setExample((java.lang.Object) schema38);
        schema38.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
    }

    @Test
    public void test13708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13708");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema11.getExtensions();
        java.lang.Boolean boolean14 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema16 = schema11.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test13709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13709");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.title("hi!");
        java.lang.Object obj39 = schema38.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        io.swagger.oas.models.media.XML xML49 = null;
        schema48.setXml(xML49);
        schema48.setTitle("*/*");
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema48.xml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema48.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        java.util.List<java.lang.String> strList58 = schema56.getRequired();
        io.swagger.oas.models.media.Schema schema59 = schema38.addProperties("", schema56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        objSchema71.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int81 = objSchema76.getMinLength();
        objSchema71.addEnumItemObject((java.lang.Object) objSchema76);
        objSchema76.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int85 = objSchema76.getMaxLength();
        schema67.addExtension("no description", (java.lang.Object) objSchema76);
        io.swagger.oas.models.media.Schema schema88 = schema67.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema67.getExtensions();
        schema59.setExtensions(strMap89);
        schema28.setExtensions(strMap89);
        schema18.setExtensions(strMap89);
        java.lang.Boolean boolean93 = schema18.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + true + "'", boolean93, true);
    }

    @Test
    public void test13710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13710");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String str29 = schema28.getType();
        io.swagger.oas.models.media.Schema schema31 = schema28.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML32 = schema28.getXml();
        io.swagger.oas.models.media.Schema schema34 = schema28.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test13711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13711");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.format("no description");
        java.lang.Integer int15 = schema10.getMinProperties();
        java.lang.Integer int16 = schema10.getMaxLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test13712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13712");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        schema21.setMinItems((java.lang.Integer) 0);
        java.lang.Boolean boolean24 = schema21.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator25 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema21.setDiscriminator(discriminator26);
        java.lang.String str28 = schema21.get$ref();
        schema21.setDescription("#/components/schemas/class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test13713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13713");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.externalDocs(externalDocumentation37);
        schema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxItems((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList43 = schema36.getRequired();
        io.swagger.oas.models.media.XML xML44 = schema36.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(xML44);
    }

    @Test
    public void test13714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13714");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = objSchema0.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.title("*/*");
        io.swagger.oas.models.media.Schema schema24 = schema22.description(",");
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema22.required((java.util.List<java.lang.String>) strList28);
        schema22.set$ref("hi!");
        java.lang.String str33 = schema22.getDescription();
        io.swagger.oas.models.media.Schema schema35 = schema22.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema35.getNullable();
        java.lang.Boolean boolean37 = schema35.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal38 = schema35.getMaximum();
        boolean boolean39 = schema8.equals((java.lang.Object) schema35);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "," + "'", str33, ",");
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + true + "'", boolean37, true);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test13715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13715");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema21 = schema12.getNot();
        java.lang.String str22 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema24 = schema12.writeOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Object> objList25 = null;
        schema12.setEnum(objList25);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "no description" + "'", str22, "no description");
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test13716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13716");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.discriminator(discriminator26);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.name("");
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        schema31.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
    }

    @Test
    public void test13717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13717");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        schema10.setDescription("*/*");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema10.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        schema10.setDiscriminator(discriminator22);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator21);
    }

    @Test
    public void test13718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13718");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean17 = objSchema16.getDeprecated();
        java.lang.Boolean boolean18 = objSchema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema20 = objSchema16.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str21 = objSchema16.getTitle();
        boolean boolean22 = schema11.equals((java.lang.Object) str21);
        java.lang.Integer int23 = schema11.getMinLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test13719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13719");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        java.lang.Object obj12 = schema10.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        java.lang.Boolean boolean30 = objSchema14.getExclusiveMinimum();
        objSchema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema14.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        objSchema14.setProperties(strMap35);
        objSchema14.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = objSchema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        objSchema41.setRequired((java.util.List<java.lang.String>) strList48);
        objSchema14.setRequired((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList60 = objSchema52.getEnum();
        io.swagger.oas.models.media.Schema schema62 = objSchema52.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema52.title("no description");
        objSchema14.setExample((java.lang.Object) schema64);
        io.swagger.oas.models.media.Discriminator discriminator66 = schema64.getDiscriminator();
        schema64.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema64.getNot();
        io.swagger.oas.models.media.Schema schema70 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = null;
        io.swagger.oas.models.media.Schema schema78 = objSchema71.addProperties("*/*", schema77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = schema78.getExtensions();
        io.swagger.oas.models.media.Schema schema81 = schema78.minProperties((java.lang.Integer) 10);
        schema78.setMaxItems((java.lang.Integer) 0);
        schema78.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema78.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema78.addRequiredItem("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema91 = schema10.properties(strMap90);
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema10.minimum(bigDecimal92);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(objList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(discriminator66);
        org.junit.Assert.assertNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test13720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13720");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        schema24.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema13.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema27.writeOnly((java.lang.Boolean) false);
        java.lang.String str30 = schema27.getType();
        java.lang.String str31 = schema27.getFormat();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test13721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13721");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema29.additionalProperties(schema38);
        java.lang.Integer int44 = schema43.getMinLength();
        io.swagger.oas.models.media.Schema schema46 = schema43.minLength((java.lang.Integer) 10);
        schema18.setExample((java.lang.Object) schema43);
        schema43.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema51 = schema43.type("*/*");
        schema43.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test13722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13722");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        objSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int11 = objSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = objSchema0.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int14 = schema13.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test13723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13723");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        objSchema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test13724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13724");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("hi!");
        schema24.setMaxLength((java.lang.Integer) 10);
        objSchema0.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.Object obj32 = objSchema0.getExample();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test13725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13725");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema53.maxItems((java.lang.Integer) 100);
        schema53.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = schema53.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
    }

    @Test
    public void test13726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13726");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema10.getExclusiveMinimum();
        java.lang.Boolean boolean19 = schema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema10.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema10.setMinimum(bigDecimal22);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test13727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13727");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        java.math.BigDecimal bigDecimal32 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema10.minLength((java.lang.Integer) (-1));
        java.lang.Integer int35 = schema34.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test13728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13728");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema21.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        objSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema26.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema34.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = schema34.getExclusiveMinimum();
        schema34.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = schema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setType("");
        java.math.BigDecimal bigDecimal46 = objSchema41.getMaximum();
        io.swagger.oas.models.media.Schema schema48 = objSchema41.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema49.setMultipleOf(bigDecimal50);
        objSchema49.setType("");
        java.math.BigDecimal bigDecimal54 = objSchema49.getMaximum();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema49.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = objSchema49.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = objSchema49.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema49.externalDocs(externalDocumentation61);
        objSchema41.setDefault((java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal65 = null;
        objSchema64.setMultipleOf(bigDecimal65);
        objSchema64.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        objSchema64.setExternalDocs(externalDocumentation69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema64.multipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema73.addProperties("*/*", schema79);
        io.swagger.oas.models.media.XML xML81 = null;
        schema80.setXml(xML81);
        schema80.setTitle("*/*");
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema80.xml(xML85);
        java.lang.Boolean boolean87 = schema80.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema88 = schema72.example((java.lang.Object) boolean87);
        schema62.setNot(schema72);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema62.minimum(bigDecimal90);
        schema34.setAdditionalProperties(schema91);
        schema21.addEnumItemObject((java.lang.Object) schema91);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test13729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13729");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
    }

    @Test
    public void test13730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13730");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        java.lang.Object obj24 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str27 = schema26.getType();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.maximum(bigDecimal28);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test13731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13731");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) (-1));
        schema28.setMaxLength((java.lang.Integer) 100);
        boolean boolean31 = schema12.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema33 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = schema12.deprecated((java.lang.Boolean) false);
        java.lang.Integer int37 = schema12.getMinItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test13732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13732");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        objSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setType("");
        java.math.BigDecimal bigDecimal82 = objSchema77.getMaximum();
        java.math.BigDecimal bigDecimal83 = null;
        objSchema77.setMultipleOf(bigDecimal83);
        java.math.BigDecimal bigDecimal85 = objSchema77.getMaximum();
        java.lang.String str86 = objSchema77.getTitle();
        objSchema0.setNot((io.swagger.oas.models.media.Schema) objSchema77);
        io.swagger.oas.models.media.Discriminator discriminator88 = null;
        io.swagger.oas.models.media.Schema schema89 = objSchema77.discriminator(discriminator88);
        io.swagger.oas.models.media.Schema schema91 = schema89.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema93 = schema91.pattern("");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test13733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13733");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema15.setMinimum(bigDecimal18);
        java.math.BigDecimal bigDecimal20 = null;
        schema15.setMultipleOf(bigDecimal20);
        java.lang.Integer int22 = schema15.getMinLength();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test13734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13734");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema65.title("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema65.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test13735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13735");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema39.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema57 = schema54.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema59.addProperties("*/*", schema65);
        io.swagger.oas.models.media.Schema schema68 = objSchema59.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal69 = schema68.getMinimum();
        schema54.addExtension("#/components/schemas/", (java.lang.Object) schema68);
        io.swagger.oas.models.media.XML xML71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema54.xml(xML71);
        io.swagger.oas.models.media.Schema schema73 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        java.lang.String str79 = objSchema74.getName();
        objSchema74.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList82 = objSchema74.getEnum();
        io.swagger.oas.models.media.Schema schema84 = objSchema74.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator85 = objSchema74.getDiscriminator();
        objSchema74.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = objSchema74.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema91 = schema89.exclusiveMaximum((java.lang.Boolean) false);
        schema89.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema94 = schema72.additionalProperties(schema89);
        io.swagger.oas.models.media.Schema schema96 = schema89.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(objList82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(discriminator85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test13736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13736");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        java.lang.String str33 = schema32.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.externalDocs(externalDocumentation34);
        schema32.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = schema32.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test13737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13737");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML31 = null;
        schema12.setXml(xML31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = objSchema33.title("hi!");
        io.swagger.oas.models.media.Schema schema41 = schema39.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema41.$ref("no description");
        schema41.setName("");
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema41.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema41.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema41.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = schema12.example((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        objSchema54.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = objSchema54.pattern("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.xml(xML66);
        schema65.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal70 = schema65.getMultipleOf();
        io.swagger.oas.models.media.Schema schema72 = schema65.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema72.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema75 = schema12.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema77 = schema12.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.multipleOf(bigDecimal78);
        schema77.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test13738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13738");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema10.getProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = schema10.getRequired();
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test13739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13739");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean26 = schema25.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema25.getExternalDocs();
        schema25.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str30 = schema25.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test13740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13740");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema69 = schema67.maxProperties((java.lang.Integer) 1);
        java.lang.String[] strArray73 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional74 = io.swagger.jaxrs2.OperationParser.getTags(strArray73);
        schema69.addEnumItemObject((java.lang.Object) strArray73);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional76 = io.swagger.jaxrs2.OperationParser.getTags(strArray73);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(tagSetOptional74);
        org.junit.Assert.assertNotNull(tagSetOptional76);
    }

    @Test
    public void test13741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13741");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        schema13.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema13.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema13.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema21.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = schema21.getMaximum();
        java.lang.Boolean boolean26 = schema21.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test13742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13742");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.util.List<java.lang.Object> objList24 = schema15.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.addRequiredItem("#/components/schemas/");
        schema34.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema39 = schema34.deprecated((java.lang.Boolean) false);
        schema34.setNullable((java.lang.Boolean) false);
        schema34.setMinLength((java.lang.Integer) 1);
        schema15.setExample((java.lang.Object) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test13743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13743");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema schema20 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema18.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema18.setDiscriminator(discriminator23);
        java.lang.Integer int25 = schema18.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema18.getDiscriminator();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(discriminator26);
    }

    @Test
    public void test13744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13744");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema10.getProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.XML xML22 = null;
        schema21.setXml(xML22);
        schema21.setTitle("*/*");
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.xml(xML26);
        schema21.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema21.$ref("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.externalDocs(externalDocumentation32);
        java.lang.String str34 = schema33.getName();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema33.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.xml(xML37);
        schema10.setAdditionalProperties(schema36);
        java.lang.Integer int40 = schema36.getMaxLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test13745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13745");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema10.getProperties();
        java.lang.String str14 = schema10.getDescription();
        java.lang.Object obj15 = schema10.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test13746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13746");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema schema4 = objSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema4.readOnly((java.lang.Boolean) false);
        schema6.setNullable((java.lang.Boolean) false);
        java.lang.String str9 = schema6.toString();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13747");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema15 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test13748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13748");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.minimum(bigDecimal22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) true);
        schema27.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test13749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13749");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        schema26.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        objSchema42.addExtension("", (java.lang.Object) objSchema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema46.setExternalDocs(externalDocumentation52);
        java.lang.String str54 = objSchema46.getName();
        io.swagger.oas.models.media.Schema schema56 = objSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema46.maximum(bigDecimal57);
        java.util.List<java.lang.String> strList59 = objSchema46.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        objSchema46.setExternalDocs(externalDocumentation60);
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = objSchema46.getExternalDocs();
        io.swagger.oas.models.media.Schema schema65 = objSchema46.minItems((java.lang.Integer) 100);
        schema65.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test13750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13750");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.lang.Boolean boolean16 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = schema14.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema14.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test13751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13751");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = objSchema5.getExclusiveMinimum();
        java.util.List<java.lang.String> strList15 = objSchema5.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        objSchema5.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = objSchema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.getNot();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test13752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13752");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean5 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal8 = null;
        schema7.setMultipleOf(bigDecimal8);
        java.lang.String str10 = schema7.get$ref();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test13753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13753");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        io.swagger.oas.models.media.Schema schema58 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        schema58.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        java.lang.String str67 = objSchema62.getName();
        objSchema62.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList70 = objSchema62.getEnum();
        io.swagger.oas.models.media.Schema schema72 = objSchema62.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = objSchema62.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = objSchema62.getExternalDocs();
        java.lang.Integer int76 = objSchema62.getMaxLength();
        io.swagger.oas.models.media.Schema schema78 = objSchema62.maxLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = schema78.getProperties();
        java.lang.String str80 = schema78.get$ref();
        io.swagger.oas.models.media.Schema schema81 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(externalDocumentation75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test13754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13754");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        java.lang.Boolean boolean19 = schema7.getUniqueItems();
        schema7.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean22 = schema7.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = schema7.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema7.maximum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test13755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13755");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.readOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = schema27.getMaxLength();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test13756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13756");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema21.minProperties((java.lang.Integer) 100);
        schema27.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = schema27.getMultipleOf();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
    }

    @Test
    public void test13757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13757");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.String str27 = objSchema22.getName();
        objSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema22.getEnum();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema22.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = objSchema22.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = objSchema22.title("*/*");
        java.lang.Boolean boolean38 = objSchema22.getExclusiveMinimum();
        objSchema22.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = objSchema22.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        objSchema22.setProperties(strMap43);
        java.lang.Object obj45 = objSchema22.getExample();
        io.swagger.oas.models.media.Discriminator discriminator46 = objSchema22.getDiscriminator();
        java.lang.Boolean boolean47 = objSchema22.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        objSchema48.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = objSchema48.title("hi!");
        io.swagger.oas.models.media.Schema schema56 = schema54.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema56.$ref("no description");
        io.swagger.oas.models.media.Schema schema60 = schema56.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.maximum(bigDecimal61);
        objSchema22.addEnumItemObject((java.lang.Object) bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal65 = null;
        objSchema64.setMultipleOf(bigDecimal65);
        objSchema64.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        objSchema64.setExternalDocs(externalDocumentation69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema64.multipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema74 = schema72.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema22.setAdditionalProperties(schema74);
        io.swagger.oas.models.media.XML xML76 = schema74.getXml();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = schema74.getExtensions();
        schema74.setMinLength((java.lang.Integer) 0);
        boolean boolean80 = schema15.equals((java.lang.Object) schema74);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test13758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13758");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinLength();
        schema9.set$ref("");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test13759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13759");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema23.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.Schema schema51 = objSchema42.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal52 = schema51.getMinimum();
        schema37.addExtension("#/components/schemas/", (java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        java.math.BigDecimal bigDecimal57 = null;
        objSchema54.setMinimum(bigDecimal57);
        java.lang.Boolean boolean59 = objSchema54.getReadOnly();
        schema37.setDefault((java.lang.Object) objSchema54);
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema54);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test13760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13760");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema10.getMaxProperties();
        io.swagger.oas.models.media.Schema schema16 = schema10.getAdditionalProperties();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test13761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13761");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Boolean boolean26 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema28 = schema12.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = objSchema29.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = objSchema29.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = objSchema29.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj40 = schema39.getDefault();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.maximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema39.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema28.not(schema44);
        java.lang.Boolean boolean46 = schema45.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test13762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13762");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        java.math.BigDecimal bigDecimal26 = null;
        schema25.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        java.math.BigDecimal bigDecimal30 = schema25.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test13763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13763");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.type(",");
        io.swagger.oas.models.media.Schema schema17 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = schema17.getProperties();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test13764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13764");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.Object> objList24 = schema21.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema21.setExternalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = schema21.getWriteOnly();
        io.swagger.oas.models.media.MediaType mediaType28 = null;
        io.swagger.oas.annotations.media.ExampleObject exampleObject29 = null;
        java.util.Optional<io.swagger.oas.models.media.MediaType> mediaTypeOptional30 = io.swagger.jaxrs2.OperationParser.getMediaType(mediaType28, exampleObject29);
        io.swagger.oas.models.media.Schema schema31 = schema21.example((java.lang.Object) mediaType28);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(mediaTypeOptional30);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test13765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13765");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        java.math.BigDecimal bigDecimal57 = null;
        schema41.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema41.type("no description");
        io.swagger.oas.models.media.Schema schema62 = schema41.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj63 = schema62.getDefault();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test13766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13766");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        java.lang.String str10 = objSchema0.toString();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        objSchema0.setDiscriminator(discriminator11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Class<?> wildcardClass17 = objSchema0.getClass();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test13767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13767");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Schema schema28 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        java.lang.String str32 = schema30.getDescription();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test13768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13768");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        java.lang.Integer int36 = schema32.getMinItems();
        schema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema32.getAdditionalProperties();
        schema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML42 = schema32.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNull(xML42);
    }

    @Test
    public void test13769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13769");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        schema21.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema25);
        java.lang.Boolean boolean32 = schema21.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema34.properties(strMap63);
        java.lang.Object obj65 = schema64.getDefault();
        io.swagger.oas.models.media.Schema schema66 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema21.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema10.properties(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema69.addExtension("", (java.lang.Object) objSchema73);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        objSchema73.setExternalDocs(externalDocumentation79);
        java.lang.String str81 = objSchema73.getName();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.exclusiveMaximum((java.lang.Boolean) true);
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema73);
        objSchema73.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = objSchema73.minimum(bigDecimal87);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test13770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13770");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMinimum();
        java.lang.String str15 = schema13.getFormat();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test13771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13771");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.xml(xML25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema11.addProperties(",", schema26);
        java.lang.Boolean boolean29 = schema28.getNullable();
        io.swagger.oas.models.media.Schema schema31 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.String str32 = schema28.getTitle();
        schema28.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema28.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(schema35);
    }

    @Test
    public void test13772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13772");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema21.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test13773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13773");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.Schema schema57 = schema41.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.minimum(bigDecimal58);
        schema59.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test13774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13774");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.set$ref(",");
        java.util.List<java.lang.String> strList25 = objSchema0.getRequired();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.xml(xML26);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test13775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13775");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema50.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = schema57.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test13776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13776");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.util.List<java.lang.String> strList15 = null;
        schema12.setRequired(strList15);
        io.swagger.oas.models.media.Schema schema18 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test13777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13777");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Integer int24 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) true);
        java.lang.Integer int29 = schema23.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = objSchema41.getMinLength();
        schema37.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema41);
        schema37.setExclusiveMinimum((java.lang.Boolean) true);
        schema37.setType(",");
        java.lang.Boolean boolean52 = schema37.getExclusiveMinimum();
        java.lang.Object obj53 = schema37.getDefault();
        java.lang.String str54 = schema37.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema37.minLength((java.lang.Integer) 100);
        java.lang.String str57 = schema56.getFormat();
        io.swagger.oas.models.media.Schema schema58 = schema56.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema59.addProperties("*/*", schema65);
        io.swagger.oas.models.media.Schema schema68 = objSchema59.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema59.xml(xML69);
        io.swagger.oas.models.media.Schema schema72 = objSchema59.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList73 = schema72.getRequired();
        java.lang.Object obj74 = null;
        schema72.setDefault(obj74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema72.getProperties();
        schema56.setProperties(strMap76);
        io.swagger.oas.models.media.Schema schema78 = schema23.example((java.lang.Object) strMap76);
        java.lang.String str79 = schema23.getTitle();
        java.lang.String str80 = schema23.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + true + "'", boolean52, true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test13778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13778");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setNullable((java.lang.Boolean) false);
        objSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema14.xml(xML24);
        java.math.BigDecimal bigDecimal26 = schema25.getMultipleOf();
        schema25.setNullable((java.lang.Boolean) false);
        schema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema25.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = objSchema34.title("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        schema50.setTitle("*/*");
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema50.xml(xML55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema50.externalDocs(externalDocumentation57);
        schema42.addEnumItemObject((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema61 = schema42.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema32.addProperties("#/components/schemas/hi!", schema42);
        io.swagger.oas.models.media.Schema schema63 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        io.swagger.oas.models.media.Schema schema65 = schema63.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema65.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.additionalProperties(schema68);
        java.lang.Object obj70 = schema65.getDefault();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test13779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13779");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        schema23.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema23.getExternalDocs();
        java.lang.Integer int39 = schema23.getMaxLength();
        io.swagger.oas.models.media.Schema schema40 = objSchema4.example((java.lang.Object) schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema23.getExtensions();
        schema23.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema23.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = schema53.getExclusiveMinimum();
        schema53.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema23.example((java.lang.Object) schema53);
        io.swagger.oas.models.media.Schema schema61 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test13780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13780");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Integer int9 = objSchema0.getMinProperties();
        java.lang.Integer int10 = objSchema0.getMaxLength();
        objSchema0.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test13781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13781");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.maximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = schema23.getMultipleOf();
        java.lang.String str28 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = schema30.getMinimum();
        schema30.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test13782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13782");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int29 = schema24.getMinProperties();
        java.lang.String str30 = schema24.getFormat();
        schema24.set$ref("");
        io.swagger.oas.models.media.Schema schema34 = schema24.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema24.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema24.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = schema38.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test13783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13783");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        java.lang.String str12 = objSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema13.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema13.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal29 = null;
        objSchema28.setMultipleOf(bigDecimal29);
        objSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("#/components/schemas/");
        objSchema28.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = objSchema13.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        objSchema47.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = schema46.required((java.util.List<java.lang.String>) strList54);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Boolean boolean59 = objSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal60 = objSchema0.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(bigDecimal60);
    }

    @Test
    public void test13784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13784");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.lang.String str12 = schema11.toString();
        java.lang.String str13 = schema11.getType();
        java.lang.Integer int14 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = objSchema17.getProperties();
        java.lang.Boolean boolean21 = objSchema17.getExclusiveMinimum();
        objSchema17.setReadOnly((java.lang.Boolean) true);
        java.lang.String str24 = objSchema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = objSchema25.title("hi!");
        java.lang.Object obj32 = null;
        objSchema25.addEnumItemObject(obj32);
        io.swagger.oas.models.media.Schema schema35 = objSchema25.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema25.multipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal39 = null;
        objSchema38.setMultipleOf(bigDecimal39);
        objSchema38.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        objSchema38.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema38.properties(strMap61);
        schema37.setDefault((java.lang.Object) objSchema38);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        schema37.setDiscriminator(discriminator64);
        io.swagger.oas.models.media.Schema schema67 = schema37.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema68.setPattern("no description");
        objSchema68.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = null;
        io.swagger.oas.models.media.Schema schema75 = objSchema68.addProperties("*/*", schema74);
        io.swagger.oas.models.media.Schema schema77 = objSchema68.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal78 = schema77.getMinimum();
        java.math.BigDecimal bigDecimal79 = null;
        schema77.setMultipleOf(bigDecimal79);
        io.swagger.oas.models.media.Schema schema81 = schema77.getAdditionalProperties();
        java.math.BigDecimal bigDecimal82 = schema77.getMultipleOf();
        schema77.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema77.getProperties();
        io.swagger.oas.models.media.Schema schema86 = schema37.properties(strMap85);
        objSchema17.setProperties(strMap85);
        schema11.setProperties(strMap85);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNull(schema81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test13785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13785");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.XML xML73 = null;
        schema7.setXml(xML73);
        io.swagger.oas.models.media.XML xML75 = schema7.getXml();
        java.math.BigDecimal bigDecimal76 = schema7.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        schema7.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = schema7.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(xML75);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNull(externalDocumentation79);
    }

    @Test
    public void test13786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13786");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = objSchema20.getMinLength();
        objSchema15.addEnumItemObject((java.lang.Object) objSchema20);
        objSchema15.setMinProperties((java.lang.Integer) 100);
        objSchema15.setPattern("");
        java.math.BigDecimal bigDecimal31 = objSchema15.getMultipleOf();
        java.lang.String[] strArray49 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = objSchema15.required((java.util.List<java.lang.String>) strList50);
        schema14.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema55 = schema14.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean58 = schema57.getNullable();
        java.lang.Object obj59 = schema57.getDefault();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test13787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13787");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = schema9.getAdditionalProperties();
        java.math.BigDecimal bigDecimal14 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema schema16 = schema9.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList17 = schema16.getRequired();
        schema16.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator20 = schema16.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(discriminator20);
    }

    @Test
    public void test13788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13788");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        java.math.BigDecimal bigDecimal55 = objSchema50.getMaximum();
        objSchema50.setMinLength((java.lang.Integer) 0);
        objSchema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str61 = schema12.getName();
        io.swagger.oas.models.media.Schema schema63 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        java.lang.String str69 = objSchema64.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        objSchema64.setProperties(strMap70);
        objSchema64.setPattern("*/*");
        java.lang.Object obj74 = null;
        boolean boolean75 = objSchema64.equals(obj74);
        java.math.BigDecimal bigDecimal76 = objSchema64.getMultipleOf();
        schema63.setNot((io.swagger.oas.models.media.Schema) objSchema64);
        io.swagger.oas.models.media.Schema schema79 = schema63.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema79.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test13789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13789");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        objSchema30.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema30.properties(strMap53);
        schema14.setProperties(strMap53);
        schema14.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        schema65.setRequired((java.util.List<java.lang.String>) strList77);
        schema14.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema82 = schema14.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema83.setPattern("no description");
        objSchema83.setReadOnly((java.lang.Boolean) false);
        java.lang.String str88 = objSchema83.getName();
        objSchema83.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList91 = objSchema83.getEnum();
        io.swagger.oas.models.media.Schema schema93 = objSchema83.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator94 = objSchema83.getDiscriminator();
        java.lang.String str95 = objSchema83.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator96 = null;
        io.swagger.oas.models.media.Schema schema97 = objSchema83.discriminator(discriminator96);
        schema14.addEnumItemObject((java.lang.Object) objSchema83);
        io.swagger.oas.models.media.Schema schema99 = schema14.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(objList91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(discriminator94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "no description" + "'", str95, "no description");
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(schema99);
    }

    @Test
    public void test13790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13790");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema16.getType();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema31.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.String str41 = objSchema36.getName();
        objSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.addRequiredItem("#/components/schemas/");
        java.lang.Object obj46 = schema45.getDefault();
        io.swagger.oas.models.media.XML xML47 = schema45.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.XML xML56 = null;
        schema55.setXml(xML56);
        schema55.setTitle("*/*");
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        schema55.setRequired((java.util.List<java.lang.String>) strList67);
        schema45.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema71 = schema35.required((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema73 = schema35.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema73.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML76 = schema73.getXml();
        java.lang.String str77 = schema73.getFormat();
        io.swagger.oas.models.media.Schema schema78 = schema20.not(schema73);
        java.math.BigDecimal bigDecimal79 = null;
        schema73.setMultipleOf(bigDecimal79);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(xML47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(xML76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test13791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13791");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema11.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema16.deprecated((java.lang.Boolean) true);
        java.lang.Integer int20 = schema19.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test13792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13792");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList27 = objSchema19.getEnum();
        java.lang.Boolean boolean28 = objSchema19.getWriteOnly();
        java.lang.Boolean boolean29 = objSchema19.getReadOnly();
        io.swagger.oas.models.media.Schema schema31 = objSchema19.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema13.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema13.deprecated((java.lang.Boolean) false);
        schema13.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test13793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13793");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        objSchema0.setDescription("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test13794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13794");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema12.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMinimum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test13795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13795");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int31 = schema7.getMaxItems();
        java.lang.Integer int32 = schema7.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        schema7.setDiscriminator(discriminator33);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test13796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13796");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.$ref("*/*");
        io.swagger.oas.models.media.Schema schema31 = schema24.$ref("");
        io.swagger.oas.models.media.Schema schema33 = schema31.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.discriminator(discriminator37);
        schema38.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = objSchema41.title("hi!");
        java.lang.Object obj48 = null;
        objSchema41.addEnumItemObject(obj48);
        io.swagger.oas.models.media.Schema schema51 = objSchema41.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema41.multipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        objSchema54.setExternalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        schema68.setTitle("*/*");
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema68.xml(xML73);
        io.swagger.oas.models.media.Schema schema76 = schema68.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema76.getProperties();
        io.swagger.oas.models.media.Schema schema78 = objSchema54.properties(strMap77);
        schema53.setDefault((java.lang.Object) objSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema54.externalDocs(externalDocumentation80);
        java.lang.Boolean boolean82 = schema81.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema81.externalDocs(externalDocumentation83);
        schema38.setNot(schema81);
        java.math.BigDecimal bigDecimal86 = schema38.getMultipleOf();
        schema38.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(bigDecimal86);
    }

    @Test
    public void test13797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13797");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test13798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13798");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = objSchema5.getMaximum();
        java.lang.Integer int15 = objSchema5.getMaxItems();
        io.swagger.oas.models.media.Schema schema17 = objSchema5.title("");
        io.swagger.oas.models.media.Schema schema18 = objSchema5.getAdditionalProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test13799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13799");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        schema8.setFormat("");
        schema8.setNullable((java.lang.Boolean) true);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema8.getName();
        io.swagger.oas.models.media.Schema schema20 = schema8.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Object> objList21 = schema8.getEnum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(objList21);
    }

    @Test
    public void test13800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13800");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema20.minItems((java.lang.Integer) 100);
        java.lang.Integer int25 = schema24.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema34.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = objSchema38.getMinLength();
        schema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema38);
        java.lang.Boolean boolean45 = schema34.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.String str52 = objSchema47.getName();
        objSchema47.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList55 = objSchema47.getEnum();
        io.swagger.oas.models.media.Schema schema57 = objSchema47.name(",");
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        schema67.setTitle("*/*");
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema67.xml(xML72);
        io.swagger.oas.models.media.Schema schema75 = schema67.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema75.getProperties();
        io.swagger.oas.models.media.Schema schema77 = objSchema47.properties(strMap76);
        java.lang.Object obj78 = schema77.getDefault();
        io.swagger.oas.models.media.Schema schema79 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        io.swagger.oas.models.media.Schema schema81 = schema79.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal83 = null;
        objSchema82.setMultipleOf(bigDecimal83);
        objSchema82.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = objSchema82.title("hi!");
        java.lang.Object obj89 = null;
        objSchema82.addEnumItemObject(obj89);
        io.swagger.oas.models.media.Schema schema92 = objSchema82.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = objSchema82.multipleOf(bigDecimal93);
        io.swagger.oas.models.media.Schema schema95 = schema79.additionalProperties(schema94);
        io.swagger.oas.models.media.Schema schema97 = schema79.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap98 = schema79.getProperties();
        io.swagger.oas.models.media.Schema schema99 = schema24.properties(strMap98);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(objList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test13801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13801");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.Boolean boolean34 = schema33.getUniqueItems();
        java.lang.String str35 = schema33.getDescription();
        java.util.List<java.lang.Object> objList36 = schema33.getEnum();
        java.lang.String str37 = schema33.getTitle();
        java.lang.Boolean boolean38 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = schema33.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema49.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML59 = schema58.getXml();
        io.swagger.oas.models.media.Schema schema60 = schema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema58);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "no description" + "'", str37, "no description");
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(xML59);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test13802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13802");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        schema13.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test13803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13803");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML31 = null;
        schema12.setXml(xML31);
        java.lang.Object obj33 = schema12.getExample();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema12.maximum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList38 = schema12.getRequired();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test13804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13804");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        schema31.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str34 = schema31.toString();
        schema31.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: #/components/schemas/\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str34, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: #/components/schemas/\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13805");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator13 = schema9.getDiscriminator();
        schema9.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(discriminator13);
    }

    @Test
    public void test13806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13806");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = objSchema37.getEnum();
        java.lang.Boolean boolean45 = objSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema37);
        java.lang.String str49 = schema33.get$ref();
        java.lang.Boolean boolean50 = schema33.getReadOnly();
        io.swagger.oas.models.media.Schema schema52 = schema33.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.String> strList53 = schema33.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strList53);
    }

    @Test
    public void test13807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13807");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema26.getName();
        objSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList34 = objSchema26.getEnum();
        java.lang.Boolean boolean35 = objSchema26.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        objSchema26.setExtensions(strMap36);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema26.addProperties("no description", schema39);
        java.lang.String str41 = objSchema26.getFormat();
        schema24.addExtension("#/components/schemas/", (java.lang.Object) str41);
        io.swagger.oas.models.media.Schema schema44 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal47 = null;
        schema44.setMaximum(bigDecimal47);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(objList34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test13808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13808");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.Integer int43 = schema39.getMinLength();
        io.swagger.oas.models.media.Schema schema45 = schema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema47.multipleOf(bigDecimal49);
        java.lang.String str51 = schema47.getPattern();
        java.lang.String str52 = schema47.getTitle();
        io.swagger.oas.models.media.Schema schema54 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "no description" + "'", str51, "no description");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "*/*" + "'", str52, "*/*");
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test13809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13809");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.maximum(bigDecimal15);
        java.lang.Object obj17 = null;
        boolean boolean18 = schema14.equals(obj17);
        java.lang.Boolean boolean19 = schema14.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test13810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13810");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.lang.Integer int4 = objSchema0.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = objSchema0.getExternalDocs();
        java.util.List<java.lang.String> strList6 = objSchema0.getRequired();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objSchema0.getExtensions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test13811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13811");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema34.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema44 = objSchema20.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.format(",");
        io.swagger.oas.models.media.Schema schema47 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema49 = objSchema20.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal50 = null;
        objSchema20.setMinimum(bigDecimal50);
        objSchema20.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test13812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13812");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.Integer int31 = schema30.getMaxLength();
        java.lang.Object obj32 = schema30.getExample();
        io.swagger.oas.models.media.Schema schema33 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        io.swagger.oas.models.media.Schema schema43 = objSchema34.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = schema43.getMinimum();
        java.math.BigDecimal bigDecimal45 = null;
        schema43.setMultipleOf(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema43.$ref("*/*");
        schema43.setPattern("*/*");
        schema43.setDescription("*/*");
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema43.maximum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = schema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = schema30.not(schema43);
        schema30.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test13813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13813");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>> strListSchema54 = new io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = schema7.not((io.swagger.oas.models.media.Schema) strListSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = schema7.getExternalDocs();
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema7.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation56);
    }

    @Test
    public void test13814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13814");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.util.List<java.lang.Object> objList16 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema18 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = objSchema25.maxProperties((java.lang.Integer) 0);
        java.lang.String str36 = objSchema25.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.addRequiredItem("#/components/schemas/");
        java.lang.Object obj48 = schema47.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema47.getExtensions();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.maximum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = objSchema52.addProperties("*/*", schema58);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema59.getExtensions();
        io.swagger.oas.models.media.Schema schema62 = schema59.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int68 = objSchema63.getMinLength();
        schema59.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema63);
        java.lang.Boolean boolean70 = schema59.getNullable();
        io.swagger.oas.models.media.Schema schema72 = schema59.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema47.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema74 = objSchema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema73);
        objSchema25.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema78 = objSchema25.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = objSchema25.writeOnly((java.lang.Boolean) true);
        schema18.addExtension("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema80);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(objList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test13815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13815");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int10 = schema7.getMaxProperties();
        java.lang.Boolean boolean11 = schema7.getReadOnly();
        java.lang.String str12 = schema7.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test13816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13816");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int12 = objSchema0.getMaxItems();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema0.discriminator(discriminator15);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.type("");
        io.swagger.oas.models.media.Schema schema31 = schema29.title("*/*");
        io.swagger.oas.models.media.Schema schema33 = schema31.description(",");
        java.lang.String[] strArray36 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema31.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema41 = schema39.name("");
        schema41.setPattern(",");
        java.lang.Object obj44 = schema41.getDefault();
        objSchema0.setExample((java.lang.Object) schema41);
        java.lang.Integer int46 = objSchema0.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test13817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13817");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Boolean boolean24 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal25 = null;
        schema18.setMinimum(bigDecimal25);
        schema18.setNullable((java.lang.Boolean) false);
        schema18.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test13818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13818");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = schema7.getMinimum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.multipleOf(bigDecimal12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        java.lang.Boolean boolean15 = schema13.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test13819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13819");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.uniqueItems((java.lang.Boolean) true);
        java.lang.String str12 = schema8.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test13820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13820");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str32 = schema14.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str32, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13821");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.Boolean boolean34 = schema33.getUniqueItems();
        java.lang.Boolean boolean35 = schema33.getReadOnly();
        java.lang.String str36 = schema33.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test13822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13822");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Boolean boolean25 = objSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = objSchema0.addRequiredItem("#/components/schemas/no description");
        java.lang.String str30 = schema29.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = objSchema31.getReadOnly();
        io.swagger.oas.models.media.Schema schema38 = objSchema31.uniqueItems((java.lang.Boolean) false);
        schema29.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema42 = schema40.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "no description" + "'", str30, "no description");
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema40);
    }

    @Test
    public void test13823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13823");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int32 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        objSchema33.setExternalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema40.addProperties("*/*", schema46);
        io.swagger.oas.models.media.XML xML48 = null;
        schema47.setXml(xML48);
        schema47.setTitle("*/*");
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema47.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema47.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = schema55.getProperties();
        io.swagger.oas.models.media.Schema schema57 = objSchema33.properties(strMap56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        java.lang.Boolean boolean68 = objSchema59.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        objSchema59.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema59.addProperties("no description", schema72);
        java.lang.String str74 = objSchema59.getFormat();
        schema57.addExtension("#/components/schemas/", (java.lang.Object) str74);
        io.swagger.oas.models.media.Schema schema77 = schema57.maxLength((java.lang.Integer) 1);
        java.lang.Object obj78 = schema77.getDefault();
        schema77.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.addEnumItemObject((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test13824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13824");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.xml(xML19);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema21.addExtension("", (java.lang.Object) objSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema31.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.type("");
        io.swagger.oas.models.media.Schema schema42 = objSchema21.additionalProperties(schema39);
        schema42.setMinItems((java.lang.Integer) 0);
        java.lang.Boolean boolean45 = schema42.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema42.discriminator(discriminator46);
        io.swagger.oas.models.media.Schema schema48 = schema20.example((java.lang.Object) discriminator46);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.multipleOf(bigDecimal49);
        java.lang.Boolean boolean51 = schema48.getReadOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
    }

    @Test
    public void test13825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13825");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        schema13.setMaximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Integer int23 = schema13.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema13.getProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        schema13.setXml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.String str32 = objSchema27.getName();
        objSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList35 = objSchema27.getEnum();
        java.lang.String str36 = objSchema27.getTitle();
        objSchema27.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = objSchema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str41 = schema40.getTitle();
        boolean boolean42 = schema13.equals((java.lang.Object) str41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema50.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema50.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int59 = objSchema54.getMinLength();
        schema50.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema54);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema50.setType(",");
        java.lang.Integer int65 = schema50.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.Schema schema75 = objSchema66.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal76 = schema75.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = null;
        io.swagger.oas.models.media.Schema schema84 = objSchema77.addProperties("*/*", schema83);
        io.swagger.oas.models.media.XML xML85 = null;
        schema84.setXml(xML85);
        io.swagger.oas.models.media.Schema schema88 = schema84.pattern("*/*");
        io.swagger.oas.models.media.Schema schema89 = schema75.additionalProperties(schema84);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema75.getProperties();
        io.swagger.oas.models.media.Schema schema91 = schema50.properties(strMap90);
        io.swagger.oas.models.media.Schema schema92 = schema13.properties(strMap90);
        java.lang.String str93 = schema13.getName();
        java.math.BigDecimal bigDecimal94 = schema13.getMinimum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(objList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str93, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test13826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13826");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.$ref(",");
        io.swagger.oas.models.media.Schema schema35 = schema31.nullable((java.lang.Boolean) false);
        boolean boolean36 = schema22.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema38 = schema35.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        schema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.discriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema46 = schema44.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test13827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13827");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = objSchema0.getNullable();
        objSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test13828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13828");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema38 = objSchema28.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = objSchema28.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = objSchema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema43 = objSchema28.title("*/*");
        java.lang.Boolean boolean44 = objSchema28.getExclusiveMinimum();
        objSchema28.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = objSchema28.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        objSchema28.setProperties(strMap49);
        java.lang.Object obj51 = objSchema28.getExample();
        io.swagger.oas.models.media.Discriminator discriminator52 = objSchema28.getDiscriminator();
        java.lang.Boolean boolean53 = objSchema28.getUniqueItems();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema28.multipleOf(bigDecimal54);
        java.math.BigDecimal bigDecimal56 = schema55.getMultipleOf();
        schema7.setAdditionalProperties(schema55);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        java.lang.String str63 = objSchema58.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        objSchema58.setProperties(strMap64);
        io.swagger.oas.models.media.Schema schema67 = objSchema58.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema67.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema69.getNot();
        io.swagger.oas.models.media.Schema schema72 = schema69.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema55.setNot(schema69);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test13829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13829");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.XML xML56 = null;
        schema41.setXml(xML56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema41.discriminator(discriminator58);
        schema41.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj62 = schema41.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test13830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13830");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test13831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13831");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema35.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal59 = null;
        schema55.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema55.maxLength((java.lang.Integer) 10);
        schema47.addEnumItemObject((java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema schema65 = schema47.type("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema67 = schema27.addProperties("", schema47);
        java.lang.String str68 = schema27.getPattern();
        io.swagger.oas.models.media.Schema schema70 = schema27.title("#/components/schemas/");
        java.lang.Integer int71 = schema27.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "no description" + "'", str68, "no description");
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
    }

    @Test
    public void test13832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13832");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        objSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema6.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema31 = schema16.not(schema24);
        java.util.List<java.lang.Object> objList32 = schema24.getEnum();
        java.util.List<java.lang.String> strList33 = schema24.getRequired();
        io.swagger.oas.models.media.Schema schema34 = objSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema36 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal47 = schema46.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.XML xML56 = null;
        schema55.setXml(xML56);
        io.swagger.oas.models.media.Schema schema59 = schema55.pattern("*/*");
        io.swagger.oas.models.media.Schema schema60 = schema46.additionalProperties(schema55);
        java.lang.String str61 = schema55.getName();
        io.swagger.oas.models.media.Schema schema63 = schema55.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal65 = null;
        objSchema64.setMultipleOf(bigDecimal65);
        objSchema64.setType("");
        java.math.BigDecimal bigDecimal69 = objSchema64.getMaximum();
        java.math.BigDecimal bigDecimal70 = null;
        objSchema64.setMultipleOf(bigDecimal70);
        java.math.BigDecimal bigDecimal72 = objSchema64.getMaximum();
        objSchema64.setDescription("*/*");
        schema63.setNot((io.swagger.oas.models.media.Schema) objSchema64);
        java.util.List<java.lang.String> strList76 = schema63.getRequired();
        java.lang.Integer int77 = schema63.getMaxProperties();
        schema63.setDeprecated((java.lang.Boolean) true);
        schema24.setAdditionalProperties(schema63);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(int77);
    }

    @Test
    public void test13833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13833");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        io.swagger.oas.models.media.Schema schema2 = objSchema0.readOnly((java.lang.Boolean) true);
        schema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = schema2.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test13834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13834");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = schema8.deprecated((java.lang.Boolean) true);
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema14.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#/components/schemas/no description" + "'", str15, "#/components/schemas/no description");
    }

    @Test
    public void test13835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13835");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema14.getAdditionalProperties();
        java.math.BigDecimal bigDecimal17 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema16.setMaximum(bigDecimal17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test13836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13836");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema44.setExternalDocs(externalDocumentation47);
        schema44.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test13837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13837");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str10 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int13 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean16 = schema15.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = null;
        objSchema17.setAdditionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema25 = objSchema17.readOnly((java.lang.Boolean) false);
        java.lang.String str26 = schema25.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema15.additionalProperties(schema25);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test13838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13838");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema28);
        java.lang.Boolean boolean35 = schema24.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.name(",");
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        schema57.setTitle("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema57.xml(xML62);
        io.swagger.oas.models.media.Schema schema65 = schema57.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema67 = objSchema37.properties(strMap66);
        java.lang.Object obj68 = schema67.getDefault();
        io.swagger.oas.models.media.Schema schema69 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema24.getProperties();
        io.swagger.oas.models.media.Schema schema71 = schema15.properties(strMap70);
        java.lang.String str72 = schema71.getType();
        io.swagger.oas.models.media.Schema schema74 = schema71.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int75 = schema74.getMinLength();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
    }

    @Test
    public void test13839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13839");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.math.BigDecimal bigDecimal8 = schema7.getMultipleOf();
        schema7.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema12.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test13840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13840");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList5 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        io.swagger.oas.models.media.Schema schema15 = objSchema6.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal16 = schema15.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        schema15.addExtension("#/components/schemas/", (java.lang.Object) objSchema18);
        io.swagger.jaxrs2.OperationParser operationParser24 = new io.swagger.jaxrs2.OperationParser();
        schema15.addEnumItemObject((java.lang.Object) operationParser24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema15.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema15.nullable((java.lang.Boolean) true);
        objSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(objList5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test13841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13841");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        java.lang.Integer int31 = schema12.getMinProperties();
        java.lang.Integer int32 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema34 = schema12.maxItems((java.lang.Integer) 0);
        schema34.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test13842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13842");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema3.setPattern("no description");
        objSchema3.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = null;
        io.swagger.oas.models.media.Schema schema10 = objSchema3.addProperties("*/*", schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema14.getMinLength();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema14);
        schema10.setMinProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema10);
        io.swagger.oas.models.media.Schema schema27 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        io.swagger.oas.models.media.Schema schema30 = schema27.nullable((java.lang.Boolean) true);
        schema27.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13843");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema27.multipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = objSchema27.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema43.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test13844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13844");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minimum(bigDecimal8);
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema9.setExternalDocs(externalDocumentation12);
        java.lang.Boolean boolean14 = schema9.getReadOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test13845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13845");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema18.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.name(",");
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema24.properties(strMap53);
        io.swagger.oas.models.media.Schema schema55 = schema23.properties(strMap53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema58.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.title("*/*");
        io.swagger.oas.models.media.Schema schema71 = schema55.example((java.lang.Object) schema70);
        java.lang.String str72 = schema70.getType();
        io.swagger.oas.models.media.Schema schema74 = schema70.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = schema9.example((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema77 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML78 = schema9.getXml();
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean81 = schema9.getDeprecated();
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema9.maximum(bigDecimal82);
        java.lang.Integer int84 = schema9.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(xML78);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
    }

    @Test
    public void test13846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13846");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.exclusiveMaximum((java.lang.Boolean) false);
        schema43.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        objSchema46.addExtension("", (java.lang.Object) objSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema56.properties(strMap63);
        io.swagger.oas.models.media.Schema schema66 = schema64.type("");
        io.swagger.oas.models.media.Schema schema67 = objSchema46.additionalProperties(schema64);
        io.swagger.oas.models.media.Schema schema68 = schema43.additionalProperties(schema67);
        schema32.setExample((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema71 = schema68.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema71.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Object> objList74 = schema71.getEnum();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(objList74);
    }

    @Test
    public void test13847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13847");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setType("");
        java.math.BigDecimal bigDecimal38 = objSchema33.getMaximum();
        objSchema33.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        objSchema43.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema43.properties(strMap50);
        io.swagger.oas.models.media.Schema schema53 = schema51.type("");
        io.swagger.oas.models.media.Discriminator discriminator54 = schema51.getDiscriminator();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema51.maximum(bigDecimal55);
        schema42.setExample((java.lang.Object) schema51);
        schema51.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.addEnumItemObject((java.lang.Object) schema51);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test13848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13848");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        objSchema11.setExternalDocs(externalDocumentation16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema11.multipleOf(bigDecimal18);
        java.lang.Object obj20 = objSchema11.getExample();
        io.swagger.oas.models.media.Schema schema22 = objSchema11.nullable((java.lang.Boolean) false);
        java.lang.Integer int23 = objSchema11.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = objSchema11.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList30 = null;
        schema25.setRequired(strList30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema32.addExtension("", (java.lang.Object) objSchema36);
        objSchema32.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema45 = objSchema32.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = objSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema49 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = objSchema50.getMinLength();
        objSchema50.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        java.lang.String str63 = objSchema58.getName();
        objSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList66 = objSchema58.getEnum();
        io.swagger.oas.models.media.Schema schema68 = objSchema58.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = objSchema58.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = objSchema58.getExternalDocs();
        io.swagger.oas.models.media.Schema schema73 = objSchema58.title("*/*");
        java.lang.Boolean boolean74 = objSchema58.getExclusiveMinimum();
        objSchema58.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = objSchema58.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        objSchema58.setProperties(strMap79);
        objSchema58.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema84 = objSchema58.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal86 = null;
        objSchema85.setMultipleOf(bigDecimal86);
        java.lang.String[] strArray91 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        objSchema85.setRequired((java.util.List<java.lang.String>) strList92);
        objSchema58.setRequired((java.util.List<java.lang.String>) strList92);
        objSchema50.setRequired((java.util.List<java.lang.String>) strList92);
        schema49.setRequired((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema98 = schema25.required((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema99 = schema7.required((java.util.List<java.lang.String>) strList92);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(objList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(externalDocumentation71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test13849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13849");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        schema30.setMultipleOf(bigDecimal33);
        java.lang.Boolean boolean35 = schema30.getReadOnly();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test13850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13850");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        schema7.setMaximum(bigDecimal18);
        schema7.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = schema7.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test13851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13851");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMinLength();
        schema55.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema55.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test13852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13852");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String str15 = schema14.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.title(",");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 1);
        schema17.setDefault((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema40.properties(strMap47);
        io.swagger.oas.models.media.Schema schema50 = schema48.type("");
        io.swagger.oas.models.media.Schema schema52 = schema50.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal54 = null;
        objSchema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema63.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = schema63.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        schema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema67);
        schema63.setMinProperties((java.lang.Integer) 10);
        schema63.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = objSchema53.not(schema63);
        schema50.setAdditionalProperties(schema78);
        schema78.setPattern("");
        schema78.setExclusiveMinimum((java.lang.Boolean) true);
        schema38.setNot(schema78);
        java.lang.String str85 = schema38.getPattern();
        io.swagger.oas.models.media.Schema schema87 = schema38.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "no description" + "'", str85, "no description");
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test13853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13853");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.minimum(bigDecimal30);
        java.lang.Integer int32 = schema29.getMinItems();
        java.lang.Integer int33 = schema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = schema29.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = objSchema36.getReadOnly();
        io.swagger.oas.models.media.Schema schema43 = objSchema36.readOnly((java.lang.Boolean) true);
        objSchema36.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        io.swagger.oas.models.media.Schema schema55 = objSchema46.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal56 = schema55.getMaximum();
        java.lang.String str57 = schema55.getPattern();
        java.lang.String str58 = schema55.getType();
        schema55.setMinLength((java.lang.Integer) 1);
        java.lang.String str61 = schema55.toString();
        objSchema36.setAdditionalProperties(schema55);
        io.swagger.oas.models.media.Schema schema63 = schema35.not((io.swagger.oas.models.media.Schema) objSchema36);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "no description" + "'", str57, "no description");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str61, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test13854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13854");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        java.lang.Object obj16 = null;
        schema7.setDefault(obj16);
        io.swagger.oas.models.media.Schema schema19 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema19.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13855");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        objSchema0.setExternalDocs(externalDocumentation12);
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList16 = objSchema0.getRequired();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList16);
    }

    @Test
    public void test13856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13856");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = schema6.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test13857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13857");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.description("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema0.get$ref();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test13858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13858");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str14 = objSchema0.getPattern();
        java.lang.Boolean boolean15 = objSchema0.getExclusiveMinimum();
        java.lang.String str16 = objSchema0.get$ref();
        objSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList19 = objSchema0.getRequired();
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "no description" + "'", str14, "no description");
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "*/*" + "'", str16, "*/*");
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13859");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        io.swagger.oas.models.media.Schema schema36 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema schema37 = schema23.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema schema39 = schema23.readOnly((java.lang.Boolean) false);
        schema39.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema39.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = objSchema0.example((java.lang.Object) schema39);
        java.math.BigDecimal bigDecimal45 = null;
        schema44.setMinimum(bigDecimal45);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test13860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13860");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema14);
        io.swagger.oas.models.media.Schema schema17 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.properties(strMap18);
        java.util.List<java.lang.String> strList20 = schema19.getRequired();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test13861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13861");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str14 = objSchema0.getPattern();
        java.lang.Boolean boolean15 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.minProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema23.readOnly((java.lang.Boolean) false);
        schema23.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema23.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        objSchema35.setExternalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema59 = objSchema35.properties(strMap58);
        schema23.setProperties(strMap58);
        io.swagger.oas.models.media.Schema schema61 = objSchema0.properties(strMap58);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = schema69.getExtensions();
        io.swagger.oas.models.media.Schema schema72 = schema69.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal73 = null;
        schema69.setMinimum(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema69.maxLength((java.lang.Integer) 10);
        java.lang.String str77 = schema69.getTitle();
        io.swagger.oas.models.media.Schema schema79 = schema69.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList80 = schema69.getRequired();
        schema61.setRequired(strList80);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "no description" + "'", str14, "no description");
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strList80);
    }

    @Test
    public void test13862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13862");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        schema9.setTitle("hi!");
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        schema9.setType(",");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.maximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        java.math.BigDecimal bigDecimal28 = schema26.getMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13863");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 10);
        java.lang.String str18 = schema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema19.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema19.minLength((java.lang.Integer) 0);
        schema15.setAdditionalProperties(schema30);
        java.lang.String str32 = schema30.getTitle();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test13864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13864");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema34.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema44 = objSchema20.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.format(",");
        io.swagger.oas.models.media.Schema schema47 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema20);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema18.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test13865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13865");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean26 = schema9.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema9.minLength((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema28.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test13866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13866");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.externalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13867");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = null;
        io.swagger.oas.models.media.Schema schema76 = objSchema69.addProperties("*/*", schema75);
        io.swagger.oas.models.media.Schema schema78 = schema76.title("hi!");
        io.swagger.oas.models.media.Schema schema80 = schema78.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal81 = null;
        schema80.setMaximum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = schema80.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema86 = schema80.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int87 = schema86.getMinItems();
        schema14.setNot(schema86);
        schema86.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean91 = schema86.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(boolean91);
    }

    @Test
    public void test13868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13868");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        java.lang.Integer int18 = schema7.getMaxProperties();
        java.lang.String str19 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema21 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "*/*" + "'", str19, "*/*");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13869");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        java.lang.String str12 = objSchema0.getFormat();
        java.lang.Integer int13 = objSchema0.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test13870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13870");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema61 = schema59.description(",");
        java.lang.String[] strArray64 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema59.required((java.util.List<java.lang.String>) strList65);
        schema59.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema70 = schema59.getNot();
        java.lang.Integer int71 = schema59.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = schema59.getExternalDocs();
        io.swagger.oas.models.media.Schema schema74 = schema59.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = schema59.getExternalDocs();
        schema44.setNot(schema59);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema44.externalDocs(externalDocumentation77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.externalDocs(externalDocumentation79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.externalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema schema84 = schema82.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(externalDocumentation75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test13871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13871");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.lang.Boolean boolean8 = objSchema0.getDeprecated();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = objSchema0.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal11 = null;
        objSchema10.setMultipleOf(bigDecimal11);
        objSchema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = objSchema15.getMinLength();
        objSchema10.addEnumItemObject((java.lang.Object) objSchema15);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int24 = objSchema15.getMaxLength();
        java.lang.Object obj25 = objSchema15.getExample();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema15.maximum(bigDecimal26);
        java.lang.String str28 = schema27.getName();
        objSchema0.setNot(schema27);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test13872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13872");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.readOnly((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.String str31 = objSchema0.toString();
        java.lang.String str32 = objSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema34 = objSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMaximum(bigDecimal35);
        java.lang.String str37 = schema34.get$ref();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str31, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test13873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13873");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML32 = null;
        schema8.setXml(xML32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        io.swagger.oas.models.media.Schema schema43 = objSchema34.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = schema43.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("*/*");
        io.swagger.oas.models.media.Schema schema57 = schema43.additionalProperties(schema52);
        java.lang.String str58 = schema52.getName();
        io.swagger.oas.models.media.Schema schema60 = schema52.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal62 = null;
        objSchema61.setMultipleOf(bigDecimal62);
        objSchema61.setType("");
        java.math.BigDecimal bigDecimal66 = objSchema61.getMaximum();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema61.setMultipleOf(bigDecimal67);
        java.math.BigDecimal bigDecimal69 = objSchema61.getMaximum();
        objSchema61.setDescription("*/*");
        schema60.setNot((io.swagger.oas.models.media.Schema) objSchema61);
        java.util.List<java.lang.String> strList73 = schema60.getRequired();
        java.lang.Integer int74 = schema60.getMaxProperties();
        boolean boolean75 = schema8.equals((java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema schema77 = schema60.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema60.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean80 = schema60.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
    }

    @Test
    public void test13874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13874");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String str15 = schema14.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema14.getExclusiveMaximum();
        schema14.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList29 = objSchema21.getEnum();
        io.swagger.oas.models.media.Schema schema31 = objSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema21.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = objSchema21.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = objSchema21.title("*/*");
        java.lang.Boolean boolean37 = objSchema21.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema39 = objSchema21.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema39.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.Schema schema52 = objSchema43.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        io.swagger.oas.models.media.Schema schema65 = schema61.pattern("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema68 = schema52.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList69 = schema68.getRequired();
        io.swagger.oas.models.media.Schema schema70 = schema41.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema14.setProperties(strMap71);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(objList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test13875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13875");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.xml(xML32);
        schema29.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test13876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13876");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.multipleOf(bigDecimal22);
        schema21.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13877");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj11 = schema10.getDefault();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.maximum(bigDecimal12);
        schema13.setDescription("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.xml(xML16);
        java.lang.Object obj18 = schema13.getDefault();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test13878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13878");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int32 = objSchema0.getMinProperties();
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: [#/components/schemas/, ,, ,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test13879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13879");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = schema25.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema30.setDiscriminator(discriminator31);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13880");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema12.getReadOnly();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.maximum(bigDecimal14);
        java.lang.Class<?> wildcardClass16 = schema15.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test13881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13881");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.math.BigDecimal bigDecimal18 = objSchema12.getMaximum();
        java.lang.Boolean boolean19 = objSchema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }

    @Test
    public void test13882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13882");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = objSchema20.getMinLength();
        objSchema15.addEnumItemObject((java.lang.Object) objSchema20);
        objSchema15.setMinProperties((java.lang.Integer) 100);
        objSchema15.setPattern("");
        java.math.BigDecimal bigDecimal31 = objSchema15.getMultipleOf();
        java.lang.String[] strArray49 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = objSchema15.required((java.util.List<java.lang.String>) strList50);
        schema14.setRequired((java.util.List<java.lang.String>) strList50);
        java.lang.String str54 = schema14.getName();
        java.lang.Integer int55 = schema14.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test13883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13883");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.title("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.$ref("hi!");
        java.lang.String str30 = schema29.getName();
        java.math.BigDecimal bigDecimal31 = schema29.getMultipleOf();
        java.math.BigDecimal bigDecimal32 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = objSchema44.getMinLength();
        schema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.Boolean boolean51 = schema40.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.String str58 = objSchema53.getName();
        objSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList61 = objSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name(",");
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema53.properties(strMap82);
        java.lang.Object obj84 = schema83.getDefault();
        io.swagger.oas.models.media.Schema schema85 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema29.properties(strMap86);
        io.swagger.oas.models.media.Schema schema88 = objSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema87);
        java.math.BigDecimal bigDecimal89 = null;
        schema87.setMaximum(bigDecimal89);
        io.swagger.oas.models.media.Schema schema92 = schema87.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema87.discriminator(discriminator93);
        java.lang.Boolean boolean95 = schema94.getNullable();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(objList61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test13884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13884");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal22 = null;
        objSchema21.setMultipleOf(bigDecimal22);
        objSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = objSchema26.getMinLength();
        objSchema21.addEnumItemObject((java.lang.Object) objSchema26);
        objSchema26.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = objSchema26.maxProperties((java.lang.Integer) 0);
        objSchema26.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema40 = objSchema26.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = objSchema26.type(",");
        schema42.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema42.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema7.not(schema46);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema49.setMultipleOf(bigDecimal50);
        objSchema49.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        objSchema49.setExternalDocs(externalDocumentation54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema49.multipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema65.xml(xML70);
        java.lang.Boolean boolean72 = schema65.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema73 = schema57.example((java.lang.Object) boolean72);
        io.swagger.oas.models.media.Schema schema75 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        schema73.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = schema73.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema79.setPattern("no description");
        objSchema79.setReadOnly((java.lang.Boolean) false);
        objSchema79.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = null;
        io.swagger.oas.models.media.Schema schema87 = objSchema79.properties(strMap86);
        io.swagger.oas.models.media.Schema schema89 = schema87.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema89.getExtensions();
        schema89.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema94 = schema89.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema95 = schema73.additionalProperties(schema94);
        schema47.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema95);
        java.lang.Boolean boolean97 = schema95.getDeprecated();
        schema95.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(externalDocumentation78);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(boolean97);
    }

    @Test
    public void test13885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13885");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.title("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("no description");
        io.swagger.oas.models.media.Schema schema38 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.maximum(bigDecimal39);
        objSchema0.addEnumItemObject((java.lang.Object) bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setAdditionalProperties(schema52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema0.maximum(bigDecimal54);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test13886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13886");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema24.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema11.addProperties("", schema26);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema11.getDiscriminator();
        schema11.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
    }

    @Test
    public void test13887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13887");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.util.List<java.lang.Object> objList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMultipleOf(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema26.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean45 = objSchema36.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.String str51 = objSchema46.getName();
        objSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = objSchema46.addRequiredItem("#/components/schemas/");
        java.lang.Object obj56 = schema55.getDefault();
        io.swagger.oas.models.media.XML xML57 = schema55.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        schema65.setRequired((java.util.List<java.lang.String>) strList77);
        schema55.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema81 = objSchema36.required((java.util.List<java.lang.String>) strList77);
        schema26.setRequired((java.util.List<java.lang.String>) strList77);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + true + "'", boolean45, true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(xML57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test13888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13888");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        schema9.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema9.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional28 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema15.addExtension("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strArray23);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagSetOptional26);
        org.junit.Assert.assertNotNull(tagSetOptional27);
        org.junit.Assert.assertNotNull(tagSetOptional28);
        org.junit.Assert.assertNotNull(tagSetOptional29);
    }

    @Test
    public void test13889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13889");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        org.junit.Assert.assertNotNull(parameterArray1);
        org.junit.Assert.assertNotNull(parameterListOptional3);
        org.junit.Assert.assertNotNull(parameterListOptional5);
        org.junit.Assert.assertNotNull(parameterListOptional7);
        org.junit.Assert.assertNotNull(parameterListOptional9);
        org.junit.Assert.assertNotNull(parameterListOptional11);
        org.junit.Assert.assertNotNull(parameterListOptional13);
        org.junit.Assert.assertNotNull(parameterListOptional15);
        org.junit.Assert.assertNotNull(parameterListOptional17);
        org.junit.Assert.assertNotNull(parameterListOptional19);
        org.junit.Assert.assertNotNull(parameterListOptional21);
        org.junit.Assert.assertNotNull(parameterListOptional23);
        org.junit.Assert.assertNotNull(parameterListOptional25);
        org.junit.Assert.assertNotNull(parameterListOptional27);
        org.junit.Assert.assertNotNull(parameterListOptional29);
        org.junit.Assert.assertNotNull(parameterListOptional31);
        org.junit.Assert.assertNotNull(parameterListOptional33);
        org.junit.Assert.assertNotNull(parameterListOptional35);
        org.junit.Assert.assertNotNull(parameterListOptional37);
        org.junit.Assert.assertNotNull(parameterListOptional39);
        org.junit.Assert.assertNotNull(parameterListOptional41);
    }

    @Test
    public void test13890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13890");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = schema12.toString();
        io.swagger.oas.models.media.Schema schema23 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema12.getNullable();
        schema12.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test13891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13891");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema58 = schema41.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str59 = schema58.get$ref();
        java.lang.String str60 = schema58.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test13892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13892");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setMinProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = objSchema13.not(schema23);
        schema10.setAdditionalProperties(schema38);
        java.lang.Integer int40 = schema10.getMaxLength();
        schema10.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test13893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13893");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = objSchema0.getNullable();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema0.multipleOf(bigDecimal16);
        schema17.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test13894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13894");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = schema13.deprecated((java.lang.Boolean) false);
        schema30.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13895");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        schema41.setMaxLength((java.lang.Integer) 1);
        java.lang.Integer int51 = schema41.getMinProperties();
        java.lang.Object obj52 = null;
        schema41.addEnumItemObject(obj52);
        io.swagger.oas.models.media.Schema schema55 = schema41.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test13896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13896");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        java.util.List<java.lang.Object> objList16 = schema7.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema7.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema7.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = schema7.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(objList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test13897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13897");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str5 = objSchema0.get$ref();
        java.math.BigDecimal bigDecimal6 = objSchema0.getMultipleOf();
        java.lang.String str7 = objSchema0.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test13898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13898");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema25.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal49 = null;
        schema45.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema45.maxLength((java.lang.Integer) 10);
        schema37.addEnumItemObject((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.name("");
        io.swagger.oas.models.media.Schema schema56 = objSchema0.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        objSchema57.addExtension("", (java.lang.Object) objSchema61);
        objSchema57.set$ref("*/*");
        java.lang.Object obj69 = objSchema57.getExample();
        java.util.List<java.lang.Object> objList70 = objSchema57.getEnum();
        io.swagger.oas.models.media.Schema schema72 = objSchema57.writeOnly((java.lang.Boolean) true);
        objSchema57.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean75 = objSchema57.getDeprecated();
        java.lang.String str76 = objSchema57.toString();
        boolean boolean77 = schema56.equals((java.lang.Object) objSchema57);
        java.lang.Boolean boolean78 = objSchema57.getExclusiveMaximum();
        java.util.List<java.lang.String> strList79 = objSchema57.getRequired();
        java.lang.Boolean boolean80 = objSchema57.getReadOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str76, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
    }

    @Test
    public void test13899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13899");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        schema13.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema13.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal25 = null;
        objSchema24.setMultipleOf(bigDecimal25);
        objSchema24.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = objSchema24.title("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("no description");
        io.swagger.oas.models.media.Schema schema36 = schema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.discriminator(discriminator37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.minimum(bigDecimal39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        objSchema43.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema43.properties(strMap50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        schema53.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema53.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema38.example((java.lang.Object) true);
        java.lang.String str60 = schema38.getPattern();
        schema38.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema38.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 0\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema13.not(schema64);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test13900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13900");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema9.multipleOf(bigDecimal28);
        java.lang.String str30 = schema29.getDescription();
        schema29.setTitle("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test13901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13901");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = objSchema16.title("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema32.externalDocs(externalDocumentation39);
        schema24.addEnumItemObject((java.lang.Object) schema40);
        schema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.addProperties("", schema40);
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = objSchema51.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = objSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.title("*/*");
        java.lang.Boolean boolean67 = objSchema51.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        objSchema51.setExternalDocs(externalDocumentation68);
        objSchema51.setMinItems((java.lang.Integer) (-1));
        boolean boolean72 = schema50.equals((java.lang.Object) objSchema51);
        schema50.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema79.setPattern("no description");
        objSchema79.setReadOnly((java.lang.Boolean) false);
        objSchema75.addExtension("", (java.lang.Object) objSchema79);
        io.swagger.oas.models.media.Schema schema86 = objSchema75.minItems((java.lang.Integer) 100);
        java.lang.String str87 = schema86.toString();
        java.lang.String str88 = schema86.getType();
        io.swagger.oas.models.media.Schema schema89 = schema50.example((java.lang.Object) schema86);
        schema86.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str87, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test13902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13902");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        schema15.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.minProperties((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass20 = schema19.getClass();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test13903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13903");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList13 = schema10.getRequired();
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setType("");
        java.math.BigDecimal bigDecimal21 = objSchema16.getMaximum();
        java.lang.Boolean boolean22 = objSchema16.getExclusiveMinimum();
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema16);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        objSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema28.properties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = schema36.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.title("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema40.description(",");
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema40.required((java.util.List<java.lang.String>) strList46);
        schema40.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema51 = schema40.getNot();
        io.swagger.oas.models.media.Schema schema53 = schema40.name("");
        java.lang.Integer int54 = schema40.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema58 = schema40.additionalProperties((io.swagger.oas.models.media.Schema) objSchema55);
        boolean boolean59 = schema27.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema61 = schema27.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.minimum(bigDecimal62);
        schema61.setMinItems((java.lang.Integer) 100);
        schema61.setDeprecated((java.lang.Boolean) true);
        schema61.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test13904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13904");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema18.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = schema26.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        objSchema31.setExternalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.XML xML46 = null;
        schema45.setXml(xML46);
        schema45.setTitle("*/*");
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.xml(xML50);
        io.swagger.oas.models.media.Schema schema53 = schema45.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = schema53.getProperties();
        io.swagger.oas.models.media.Schema schema55 = objSchema31.properties(strMap54);
        java.lang.Integer int56 = objSchema31.getMaxLength();
        schema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) int56);
        schema13.setDefault((java.lang.Object) schema26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal61 = null;
        objSchema60.setMultipleOf(bigDecimal61);
        objSchema60.setType("");
        java.math.BigDecimal bigDecimal65 = objSchema60.getMaximum();
        java.math.BigDecimal bigDecimal66 = null;
        objSchema60.setMultipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema69 = objSchema60.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema71 = objSchema60.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = objSchema60.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.minimum(bigDecimal74);
        schema26.addExtension("#/components/schemas/", (java.lang.Object) schema73);
        schema73.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 0\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema73.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test13905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13905");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema22.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.externalDocs(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test13906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13906");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema8.xml(xML28);
        java.lang.String str30 = schema29.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test13907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13907");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema24.properties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema32.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.title("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema36.description(",");
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = schema36.required((java.util.List<java.lang.String>) strList42);
        schema36.set$ref("hi!");
        java.lang.String str47 = schema36.getDescription();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema36.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema23.not(schema36);
        java.lang.Integer int51 = schema50.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "," + "'", str47, ",");
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test13908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13908");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        schema20.addExtension("#/components/schemas/", (java.lang.Object) objSchema23);
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        schema20.addEnumItemObject((java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema41 = schema38.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema43 = schema38.exclusiveMaximum((java.lang.Boolean) false);
        schema20.setAdditionalProperties(schema38);
        schema38.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = objSchema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 0\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        java.lang.Boolean boolean48 = schema38.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test13909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13909");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        schema6.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test13910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13910");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal8 = null;
        objSchema7.setMultipleOf(bigDecimal8);
        objSchema7.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        objSchema7.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.XML xML22 = null;
        schema21.setXml(xML22);
        schema21.setTitle("*/*");
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema21.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema29.getProperties();
        io.swagger.oas.models.media.Schema schema31 = objSchema7.properties(strMap30);
        java.lang.Integer int32 = objSchema7.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        schema40.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.minProperties((java.lang.Integer) 10);
        schema56.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        io.swagger.oas.models.media.XML xML70 = null;
        schema69.setXml(xML70);
        schema69.setTitle("*/*");
        io.swagger.oas.models.media.XML xML74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema69.xml(xML74);
        io.swagger.oas.models.media.Schema schema77 = schema69.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = schema77.getProperties();
        schema56.setProperties(strMap78);
        schema40.addEnumItemObject((java.lang.Object) strMap78);
        io.swagger.oas.models.media.Schema schema81 = objSchema7.properties(strMap78);
        objSchema7.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal85 = null;
        objSchema84.setMultipleOf(bigDecimal85);
        objSchema84.setType("");
        java.math.BigDecimal bigDecimal89 = objSchema84.getMaximum();
        java.math.BigDecimal bigDecimal90 = null;
        objSchema84.setMultipleOf(bigDecimal90);
        java.math.BigDecimal bigDecimal92 = objSchema84.getMaximum();
        java.lang.String str93 = objSchema84.getTitle();
        objSchema7.setNot((io.swagger.oas.models.media.Schema) objSchema84);
        io.swagger.oas.models.media.Discriminator discriminator95 = null;
        io.swagger.oas.models.media.Schema schema96 = objSchema84.discriminator(discriminator95);
        schema6.setNot((io.swagger.oas.models.media.Schema) objSchema84);
        io.swagger.oas.models.media.Schema schema98 = null;
        objSchema84.setNot(schema98);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(bigDecimal89);
        org.junit.Assert.assertNull(bigDecimal92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test13911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13911");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema11.getExtensions();
        java.util.List<java.lang.String> strList14 = schema11.getRequired();
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 0\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test13912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13912");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        objSchema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema5.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema17.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema32 = schema28.getAdditionalProperties();
        java.math.BigDecimal bigDecimal33 = schema28.getMultipleOf();
        schema28.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema37 = schema17.properties(strMap36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema38.addExtension("", (java.lang.Object) objSchema42);
        objSchema38.set$ref("*/*");
        java.lang.Object obj50 = objSchema38.getExample();
        java.util.List<java.lang.Object> objList51 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema53 = objSchema38.type(",");
        io.swagger.oas.models.media.Schema schema55 = schema53.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema53.getExtensions();
        java.lang.Boolean boolean57 = schema53.getExclusiveMaximum();
        schema37.setAdditionalProperties(schema53);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(objList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(boolean57);
    }

    @Test
    public void test13913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13913");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema13.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.minimum(bigDecimal21);
        java.lang.Boolean boolean23 = schema20.getDeprecated();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test13914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13914");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.title("");
        schema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.String> strList18 = schema17.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test13915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13915");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.maximum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema60.minLength((java.lang.Integer) (-1));
        java.lang.Object obj63 = schema62.getExample();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema62.minimum(bigDecimal64);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test13916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13916");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema40.pattern("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema31.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema49 = schema20.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.maximum(bigDecimal50);
        java.lang.Integer int52 = schema47.getMinProperties();
        io.swagger.oas.models.media.Schema schema54 = schema47.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean55 = schema47.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test13917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13917");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        objSchema66.setExternalDocs(externalDocumentation71);
        java.util.List<java.lang.Object> objList73 = objSchema66.getEnum();
        io.swagger.oas.models.media.Schema schema74 = objSchema5.not((io.swagger.oas.models.media.Schema) objSchema66);
        objSchema66.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(objList73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test13918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13918");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setTitle("#/components/schemas/");
        java.lang.Integer int20 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema22 = schema15.minProperties((java.lang.Integer) (-1));
        schema15.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test13919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13919");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        schema28.setMultipleOf(bigDecimal29);
        java.util.List<java.lang.String> strList31 = null;
        schema28.setRequired(strList31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema33.xml(xML43);
        io.swagger.oas.models.media.Schema schema46 = objSchema33.deprecated((java.lang.Boolean) false);
        schema46.set$ref("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        schema46.setXml(xML49);
        schema46.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal54 = null;
        objSchema53.setMultipleOf(bigDecimal54);
        objSchema53.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = objSchema53.title("hi!");
        io.swagger.oas.models.media.XML xML60 = objSchema53.getXml();
        io.swagger.oas.models.media.Schema schema61 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) objSchema53);
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        java.lang.String str69 = objSchema64.getName();
        objSchema64.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList72 = objSchema64.getEnum();
        io.swagger.oas.models.media.Schema schema74 = objSchema64.name(",");
        io.swagger.oas.models.media.XML xML75 = objSchema64.getXml();
        java.util.List<java.lang.String> strList76 = objSchema64.getRequired();
        schema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema64);
        schema28.addEnumItemObject((java.lang.Object) objSchema64);
        io.swagger.oas.models.media.Schema schema79 = schema13.not((io.swagger.oas.models.media.Schema) objSchema64);
        schema13.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(xML60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(objList72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test13920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13920");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str10 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test13921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13921");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.minimum(bigDecimal6);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.externalDocs(externalDocumentation10);
        schema11.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test13922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13922");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        objSchema30.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema30.properties(strMap53);
        schema14.setProperties(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.String str61 = objSchema56.getName();
        objSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList64 = objSchema56.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = objSchema56.getExternalDocs();
        io.swagger.oas.models.media.Schema schema71 = objSchema56.title("*/*");
        java.lang.Boolean boolean72 = objSchema56.getExclusiveMinimum();
        objSchema56.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean75 = objSchema56.getUniqueItems();
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema56.minimum(bigDecimal76);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        objSchema78.setReadOnly((java.lang.Boolean) false);
        java.lang.String str83 = objSchema78.getName();
        objSchema78.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = objSchema78.getEnum();
        io.swagger.oas.models.media.Schema schema88 = objSchema78.name(",");
        objSchema78.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema92 = objSchema78.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList93 = schema92.getEnum();
        io.swagger.oas.models.media.Schema schema95 = schema92.uniqueItems((java.lang.Boolean) true);
        schema77.setAdditionalProperties(schema92);
        io.swagger.oas.models.media.Schema schema97 = schema14.example((java.lang.Object) schema92);
        io.swagger.oas.models.media.Schema schema99 = schema97.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(objList93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test13923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13923");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.discriminator(discriminator29);
        schema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema30);
        schema30.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13924");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMaximum(bigDecimal6);
        java.lang.Integer int8 = objSchema0.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test13925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13925");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema14.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema14.setDiscriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = objSchema20.deprecated((java.lang.Boolean) false);
        schema14.addEnumItemObject((java.lang.Object) objSchema20);
        schema14.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test13926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13926");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        io.swagger.oas.models.media.Schema schema48 = schema42.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML49 = null;
        schema42.setXml(xML49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema42.maximum(bigDecimal51);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test13927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13927");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 10);
        java.lang.String str18 = schema15.getFormat();
        java.lang.Boolean boolean19 = schema15.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema20.xml(xML30);
        java.math.BigDecimal bigDecimal32 = schema31.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = schema34.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema37 = schema15.properties(strMap36);
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinProperties();
        objSchema40.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema48 = schema15.not((io.swagger.oas.models.media.Schema) objSchema40);
        io.swagger.oas.models.media.Schema schema50 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test13928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13928");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMinimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.maxLength((java.lang.Integer) 10);
        schema19.setNullable((java.lang.Boolean) true);
        schema19.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema19.discriminator(discriminator31);
        io.swagger.oas.models.media.Schema schema34 = schema19.deprecated((java.lang.Boolean) true);
        schema11.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.deprecated((java.lang.Boolean) false);
        schema37.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test13929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13929");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int31 = objSchema22.getMaxLength();
        objSchema22.setFormat("#/components/schemas/no description");
        java.lang.Boolean boolean34 = objSchema22.getNullable();
        schema15.addEnumItemObject((java.lang.Object) boolean34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema36.addExtension("", (java.lang.Object) objSchema40);
        objSchema36.set$ref("*/*");
        java.lang.Object obj48 = objSchema36.getExample();
        java.util.List<java.lang.Object> objList49 = objSchema36.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema36.writeOnly((java.lang.Boolean) true);
        objSchema36.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean54 = objSchema36.getDeprecated();
        java.lang.Boolean boolean55 = objSchema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = objSchema36.maxLength((java.lang.Integer) (-1));
        schema15.setAdditionalProperties(schema57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema57.getExtensions();
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.xml(xML60);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test13930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13930");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMaxLength((java.lang.Integer) 10);
        schema8.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test13931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13931");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema8.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema18.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = objSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = objSchema18.title("*/*");
        java.lang.Boolean boolean34 = objSchema18.getExclusiveMinimum();
        objSchema18.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = objSchema18.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        objSchema18.setProperties(strMap39);
        java.lang.Object obj41 = objSchema18.getExample();
        java.lang.Object obj42 = objSchema18.getExample();
        io.swagger.oas.models.media.Schema schema44 = objSchema18.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str45 = schema44.getType();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.maximum(bigDecimal46);
        java.lang.String str48 = schema47.getFormat();
        java.lang.String str49 = schema47.getPattern();
        schema47.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema47.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "no description" + "'", str49, "no description");
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test13932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13932");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema5.discriminator(discriminator14);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test13933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13933");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        io.swagger.oas.annotations.Parameter parameter19 = null;
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.parameters.Parameter> parameterOptional21 = io.swagger.jaxrs2.OperationParser.getParameter(parameter19, components20);
        io.swagger.oas.models.media.Schema schema22 = schema18.example((java.lang.Object) parameterOptional21);
        java.lang.Integer int23 = schema18.getMaxProperties();
        java.lang.Boolean boolean24 = schema18.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(parameterOptional21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test13934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13934");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = objSchema5.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        objSchema46.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema46.properties(strMap53);
        schema54.setExclusiveMinimum((java.lang.Boolean) true);
        schema44.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str58 = schema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema59.addProperties("*/*", schema65);
        io.swagger.oas.models.media.XML xML67 = null;
        schema66.setXml(xML67);
        schema66.setTitle("*/*");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        schema66.setRequired((java.util.List<java.lang.String>) strList78);
        schema44.setRequired((java.util.List<java.lang.String>) strList78);
        schema29.setRequired((java.util.List<java.lang.String>) strList78);
        java.math.BigDecimal bigDecimal83 = null;
        schema29.setMultipleOf(bigDecimal83);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test13935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13935");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Schema schema28 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML29 = schema28.getXml();
        io.swagger.oas.models.media.Schema schema31 = schema28.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema28.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(xML29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test13936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13936");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = objSchema5.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = objSchema20.getMinLength();
        objSchema15.addEnumItemObject((java.lang.Object) objSchema20);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int29 = objSchema20.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = objSchema20.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema39.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema54 = schema31.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = objSchema5.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema57 = objSchema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test13937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13937");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        schema7.setMaximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema7.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema7.setExternalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema7.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test13938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13938");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        schema27.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema31.setMinProperties((java.lang.Integer) 100);
        objSchema31.setPattern("");
        java.math.BigDecimal bigDecimal47 = objSchema31.getMultipleOf();
        java.lang.String[] strArray65 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        io.swagger.oas.models.media.Schema schema68 = objSchema31.required((java.util.List<java.lang.String>) strList66);
        java.util.List<java.lang.Object> objList69 = schema68.getEnum();
        schema27.setEnum(objList69);
        io.swagger.oas.models.media.Schema schema72 = schema27.type("hi!");
        io.swagger.oas.models.media.Schema schema74 = schema27.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(objList69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test13939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13939");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema17.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test13940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13940");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        schema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema33.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = objSchema33.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        objSchema48.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("#/components/schemas/");
        objSchema48.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = objSchema33.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal68 = null;
        objSchema67.setMultipleOf(bigDecimal68);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        objSchema67.setRequired((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema77 = schema66.required((java.util.List<java.lang.String>) strList74);
        schema77.setNullable((java.lang.Boolean) false);
        java.lang.Object obj80 = schema77.getDefault();
        io.swagger.oas.models.media.Schema schema81 = schema32.not(schema77);
        java.math.BigDecimal bigDecimal82 = null;
        schema77.setMinimum(bigDecimal82);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test13941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13941");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        objSchema66.setExternalDocs(externalDocumentation71);
        java.util.List<java.lang.Object> objList73 = objSchema66.getEnum();
        io.swagger.oas.models.media.Schema schema74 = objSchema5.not((io.swagger.oas.models.media.Schema) objSchema66);
        java.lang.String str75 = schema74.getType();
        java.lang.String str76 = schema74.getName();
        io.swagger.oas.models.media.Schema schema78 = schema74.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML79 = schema74.getXml();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(objList73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(xML79);
    }

    @Test
    public void test13942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13942");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) (-1));
        schema28.setMaxLength((java.lang.Integer) 100);
        boolean boolean31 = schema12.equals((java.lang.Object) 100);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema12.maximum(bigDecimal32);
        java.lang.Integer int34 = schema33.getMaxProperties();
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema33.xml(xML35);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test13943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13943");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int77 = schema76.getMinProperties();
        schema76.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema76.format("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test13944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13944");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.addRequiredItem("#/components/schemas/");
        java.lang.Object obj28 = schema27.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema27.getExtensions();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema39.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = objSchema43.getMinLength();
        schema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema43);
        java.lang.Boolean boolean50 = schema39.getNullable();
        io.swagger.oas.models.media.Schema schema52 = schema39.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema27.additionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema54 = objSchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        java.math.BigDecimal bigDecimal55 = schema54.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        objSchema56.setExternalDocs(externalDocumentation61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema56.multipleOf(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema65.addProperties("*/*", schema71);
        io.swagger.oas.models.media.XML xML73 = null;
        schema72.setXml(xML73);
        schema72.setTitle("*/*");
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema72.xml(xML77);
        java.lang.Boolean boolean79 = schema72.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema80 = schema64.example((java.lang.Object) boolean79);
        java.math.BigDecimal bigDecimal81 = schema64.getMaximum();
        io.swagger.oas.models.media.Schema schema82 = schema54.not(schema64);
        schema54.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema54.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema88 = schema54.deprecated((java.lang.Boolean) false);
        java.lang.Integer int89 = schema54.getMaxItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
    }

    @Test
    public void test13945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13945");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = schema13.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema18.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema26.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.title("*/*");
        io.swagger.oas.models.media.Schema schema32 = schema30.description(",");
        java.lang.String[] strArray35 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema30.required((java.util.List<java.lang.String>) strList36);
        schema30.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema41 = schema30.getNot();
        io.swagger.oas.models.media.Schema schema43 = schema30.name("");
        java.lang.Boolean boolean44 = schema30.getDeprecated();
        io.swagger.oas.models.media.Schema schema45 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        io.swagger.oas.models.media.Schema schema47 = schema30.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal48 = schema47.getMultipleOf();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
    }

    @Test
    public void test13946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13946");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema11.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minItems((java.lang.Integer) 1);
        schema16.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = schema16.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema20.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = objSchema34.title("*/*");
        io.swagger.oas.models.media.Schema schema50 = objSchema20.not((io.swagger.oas.models.media.Schema) objSchema34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        objSchema51.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema51.set$ref("no description");
        objSchema51.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.String str66 = objSchema61.getName();
        objSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList69 = objSchema61.getEnum();
        io.swagger.oas.models.media.Schema schema71 = objSchema61.name(",");
        objSchema61.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema51.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema76 = objSchema51.name("*/*");
        objSchema20.setDefault((java.lang.Object) schema76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = objSchema20.getExternalDocs();
        objSchema20.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema20.xml(xML81);
        io.swagger.oas.models.media.Schema schema83 = schema16.not((io.swagger.oas.models.media.Schema) objSchema20);
        java.lang.String str84 = objSchema20.getFormat();
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj87 = null;
        objSchema20.addEnumItemObject(obj87);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(objList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(externalDocumentation78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test13947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13947");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema25.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = objSchema25.deprecated((java.lang.Boolean) false);
        schema38.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setNot(schema42);
        java.util.List<java.lang.String> strList44 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema46 = objSchema0.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test13948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13948");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = objSchema42.getMinLength();
        objSchema37.addEnumItemObject((java.lang.Object) objSchema42);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int51 = objSchema42.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = objSchema42.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = objSchema42.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.addRequiredItem(",");
        schema10.setDefault((java.lang.Object) schema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema10.multipleOf(bigDecimal59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        objSchema62.addExtension("", (java.lang.Object) objSchema66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        objSchema66.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = objSchema66.addRequiredItem(",");
        java.lang.String str76 = schema75.getName();
        java.lang.Boolean boolean77 = schema75.getDeprecated();
        io.swagger.oas.models.media.Schema schema79 = schema75.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema79.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema83 = schema81.maxProperties((java.lang.Integer) 0);
        schema60.addExtension("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema83);
        java.lang.String str85 = schema60.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test13949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13949");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.xml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.String str14 = objSchema9.getName();
        objSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList17 = objSchema9.getEnum();
        io.swagger.oas.models.media.Schema schema19 = objSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = objSchema9.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = objSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema24 = objSchema9.title("*/*");
        java.lang.Boolean boolean25 = objSchema9.getExclusiveMinimum();
        objSchema9.setNullable((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema59 = objSchema29.properties(strMap58);
        java.lang.Object obj60 = schema59.getDefault();
        io.swagger.oas.models.media.Schema schema61 = objSchema9.additionalProperties(schema59);
        java.lang.Boolean boolean62 = objSchema9.getNullable();
        boolean boolean64 = objSchema9.equals((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema9);
        io.swagger.oas.models.media.Schema schema67 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema67.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(objList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test13950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13950");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.Boolean boolean53 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int70 = objSchema65.getMinLength();
        schema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema65);
        schema61.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = schema61.getDiscriminator();
        io.swagger.oas.models.media.Schema schema76 = schema61.uniqueItems((java.lang.Boolean) false);
        objSchema0.addEnumItemObject((java.lang.Object) schema76);
        io.swagger.oas.models.media.Schema schema78 = schema76.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        schema76.setExternalDocs(externalDocumentation79);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema78);
    }

    @Test
    public void test13951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13951");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        schema18.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema18.multipleOf(bigDecimal25);
        java.lang.Boolean boolean27 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        objSchema28.setProperties(strMap34);
        io.swagger.oas.models.media.Schema schema37 = objSchema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = schema52.getExtensions();
        io.swagger.oas.models.media.Schema schema55 = schema52.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int61 = objSchema56.getMinLength();
        schema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema56);
        java.lang.Boolean boolean63 = schema52.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        java.lang.String str69 = objSchema64.getName();
        objSchema64.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList72 = objSchema64.getEnum();
        io.swagger.oas.models.media.Schema schema74 = objSchema64.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = objSchema64.title("no description");
        schema52.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema schema78 = schema37.not(schema52);
        io.swagger.oas.models.media.Discriminator discriminator79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.discriminator(discriminator79);
        java.lang.String str81 = schema80.getFormat();
        io.swagger.oas.models.media.Schema schema83 = schema80.readOnly((java.lang.Boolean) true);
        schema26.setNot(schema80);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema80.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(objList72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap85);
    }

    @Test
    public void test13952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13952");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.xml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.String str14 = objSchema9.getName();
        objSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList17 = objSchema9.getEnum();
        io.swagger.oas.models.media.Schema schema19 = objSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = objSchema9.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = objSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema24 = objSchema9.title("*/*");
        java.lang.Boolean boolean25 = objSchema9.getExclusiveMinimum();
        objSchema9.setNullable((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema59 = objSchema29.properties(strMap58);
        java.lang.Object obj60 = schema59.getDefault();
        io.swagger.oas.models.media.Schema schema61 = objSchema9.additionalProperties(schema59);
        java.lang.Boolean boolean62 = objSchema9.getNullable();
        boolean boolean64 = objSchema9.equals((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema9);
        objSchema9.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = objSchema9.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(objList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test13953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13953");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = schema12.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test13954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13954");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        schema29.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema29.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema14.example((java.lang.Object) true);
        java.lang.String str36 = schema14.getPattern();
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 0\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str41 = schema40.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test13955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13955");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        java.lang.Object obj23 = schema22.getDefault();
        schema22.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema22.setMaximum(bigDecimal26);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test13956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13956");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator22 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean23 = objSchema0.getDeprecated();
        java.lang.Boolean boolean24 = objSchema0.getWriteOnly();
        java.lang.String str25 = objSchema0.getName();
        objSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test13957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13957");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        io.swagger.oas.models.media.XML xML5 = null;
        objSchema0.setXml(xML5);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test13958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13958");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        io.swagger.oas.models.media.Schema schema15 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema17.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = objSchema17.deprecated((java.lang.Boolean) false);
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema9.example((java.lang.Object) objSchema17);
        java.lang.Boolean boolean34 = schema33.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test13959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13959");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema37 = schema34.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.xml(xML40);
        io.swagger.oas.models.media.Schema schema43 = schema37.nullable((java.lang.Boolean) true);
        schema43.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int46 = schema43.getMinProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test13960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13960");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = objSchema31.getName();
        objSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList39 = objSchema31.getEnum();
        io.swagger.oas.models.media.Schema schema41 = objSchema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = objSchema31.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = objSchema31.getExternalDocs();
        java.lang.Integer int45 = objSchema31.getMaxLength();
        objSchema31.setMaxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean48 = objSchema31.getExclusiveMaximum();
        boolean boolean49 = schema30.equals((java.lang.Object) objSchema31);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(objList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test13961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13961");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.not(schema26);
        java.math.BigDecimal bigDecimal28 = schema27.getMinimum();
        io.swagger.oas.models.media.Schema schema30 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema31.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.type("");
        io.swagger.oas.models.media.Discriminator discriminator42 = schema39.getDiscriminator();
        schema39.setFormat("");
        schema39.setNullable((java.lang.Boolean) true);
        schema39.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema39.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema39.maxItems((java.lang.Integer) 0);
        schema30.setNot(schema39);
        java.lang.Boolean boolean54 = schema39.getExclusiveMaximum();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean54);
    }

    @Test
    public void test13962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13962");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.XML xML16 = schema14.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test13963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13963");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        objSchema12.setProperties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int24 = objSchema12.getMaxItems();
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema12);
        io.swagger.oas.models.media.Schema schema27 = schema25.format("");
        java.lang.Integer int28 = schema25.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test13964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13964");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        io.swagger.oas.models.media.Schema schema17 = schema10.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        java.lang.String str20 = schema17.getPattern();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "no description" + "'", str20, "no description");
    }

    @Test
    public void test13965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13965");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        schema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test13966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13966");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        schema8.setFormat("");
        schema8.setNullable((java.lang.Boolean) true);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema8.maxItems((java.lang.Integer) 0);
        java.lang.Integer int22 = schema21.getMinItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test13967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13967");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema7.additionalProperties(schema26);
        schema26.setMinItems((java.lang.Integer) 10);
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema26.xml(xML32);
        io.swagger.oas.models.media.XML xML34 = schema26.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
    }

    @Test
    public void test13968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13968");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema9.minItems((java.lang.Integer) (-1));
        java.lang.String str30 = schema9.getDescription();
        schema9.setNullable((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema9.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema38.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test13969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13969");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema19 = schema14.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test13970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13970");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.lang.String str12 = schema11.toString();
        java.lang.String str13 = schema11.getType();
        io.swagger.oas.models.media.Schema schema15 = schema11.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema11.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema11.getNullable();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test13971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13971");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema13.externalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = objSchema13.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int43 = schema42.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.externalDocs(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test13972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13972");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxItems((java.lang.Integer) 0);
        schema14.setMinItems((java.lang.Integer) 10);
        schema14.setType("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema14.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test13973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13973");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setMinProperties((java.lang.Integer) 0);
        schema40.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test13974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13974");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema7.getMinLength();
        schema7.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema7.externalDocs(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test13975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13975");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        java.lang.String str13 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema10.name("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "no description" + "'", str13, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test13976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13976");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema23);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        schema19.setType(",");
        io.swagger.oas.models.media.Schema schema35 = schema19.deprecated((java.lang.Boolean) false);
        java.lang.Integer int36 = schema19.getMaxProperties();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema19.xml(xML37);
        io.swagger.oas.models.media.Schema schema39 = objSchema4.additionalProperties(schema38);
        java.math.BigDecimal bigDecimal40 = null;
        schema38.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema38.setExternalDocs(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test13977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13977");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema35 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal40 = null;
        objSchema39.setMultipleOf(bigDecimal40);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        objSchema39.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = schema37.example((java.lang.Object) objSchema39);
        io.swagger.oas.models.media.Schema schema51 = objSchema39.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema51.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = schema51.getProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
    }

    @Test
    public void test13978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13978");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema9.example(obj27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        java.math.BigDecimal bigDecimal34 = objSchema29.getMaximum();
        java.lang.Boolean boolean35 = objSchema29.getExclusiveMinimum();
        objSchema29.setExclusiveMinimum((java.lang.Boolean) true);
        schema9.setDefault((java.lang.Object) objSchema29);
        io.swagger.oas.models.media.Schema schema40 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        java.lang.Boolean boolean50 = objSchema41.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        objSchema41.setExtensions(strMap51);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema41.addProperties("no description", schema54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = objSchema41.getProperties();
        schema40.setProperties(strMap56);
        io.swagger.oas.models.media.XML xML58 = schema40.getXml();
        schema40.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(xML58);
    }

    @Test
    public void test13979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13979");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        objSchema29.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema29.properties(strMap52);
        objSchema0.setProperties(strMap52);
        io.swagger.oas.models.media.Schema schema56 = objSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        java.lang.String str63 = objSchema58.getName();
        objSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList66 = objSchema58.getEnum();
        io.swagger.oas.models.media.Schema schema68 = objSchema58.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = objSchema58.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = objSchema58.getExternalDocs();
        java.lang.Integer int72 = objSchema58.getMaxLength();
        objSchema58.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = objSchema58.externalDocs(externalDocumentation75);
        schema76.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema76.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema82 = schema76.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = objSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema76);
        io.swagger.oas.models.media.Schema schema85 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(objList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(externalDocumentation71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test13980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13980");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema14.name("#/components/schemas/no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test13981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13981");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        java.lang.Integer int14 = schema10.getMinLength();
        io.swagger.oas.models.media.XML xML15 = schema10.getXml();
        java.lang.Integer int16 = schema10.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test13982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13982");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test13983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13983");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMinProperties((java.lang.Integer) 1);
        java.lang.String str13 = schema8.toString();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.minimum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema8.discriminator(discriminator16);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test13984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13984");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test13985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13985");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        io.swagger.oas.models.media.Schema schema58 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) false);
        schema60.setMaxProperties((java.lang.Integer) 100);
        schema60.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML65 = schema60.getXml();
        io.swagger.oas.models.media.Schema schema67 = schema60.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/,\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema60.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test13986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13986");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema7.additionalProperties(schema26);
        schema26.setMinItems((java.lang.Integer) 10);
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = schema26.getMultipleOf();
        java.lang.Boolean boolean33 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator34 = schema26.getDiscriminator();
        schema26.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test13987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13987");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = objSchema21.getMinLength();
        objSchema16.addEnumItemObject((java.lang.Object) objSchema21);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = objSchema21.maxProperties((java.lang.Integer) 0);
        objSchema21.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema35 = objSchema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = objSchema21.type(",");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        java.lang.Integer int39 = schema37.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema10.example((java.lang.Object) schema37);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
    }

    @Test
    public void test13988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13988");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema25.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = objSchema25.deprecated((java.lang.Boolean) false);
        schema38.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setNot(schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.minItems((java.lang.Integer) 100);
        schema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        objSchema48.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = objSchema53.getMinLength();
        objSchema48.addEnumItemObject((java.lang.Object) objSchema53);
        objSchema53.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int62 = objSchema53.getMaxLength();
        io.swagger.oas.models.media.Schema schema64 = objSchema53.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal65 = objSchema53.getMaximum();
        objSchema53.setMaxItems((java.lang.Integer) (-1));
        schema45.setNot((io.swagger.oas.models.media.Schema) objSchema53);
        java.lang.Integer int69 = objSchema53.getMinLength();
        io.swagger.oas.models.media.Schema schema71 = objSchema53.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.externalDocs(externalDocumentation72);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test13989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13989");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str37 = schema36.getName();
        io.swagger.oas.models.media.Schema schema39 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        java.lang.Boolean boolean41 = schema39.getReadOnly();
        schema39.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
    }

    @Test
    public void test13990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13990");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        objSchema0.setDefault((java.lang.Object) "*/*");
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        objSchema0.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.Schema schema35 = objSchema26.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal36 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema35.additionalProperties(schema44);
        java.lang.Integer int50 = schema49.getMinLength();
        java.lang.String str51 = schema49.getPattern();
        schema49.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = objSchema0.additionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema56 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema56.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema58.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "no description" + "'", str51, "no description");
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test13991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13991");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema25.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal49 = null;
        schema45.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema45.maxLength((java.lang.Integer) 10);
        schema37.addEnumItemObject((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.name("");
        io.swagger.oas.models.media.Schema schema56 = objSchema0.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema58 = objSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = schema58.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema58.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        schema58.setDiscriminator(discriminator62);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema64.addProperties("*/*", schema70);
        io.swagger.oas.models.media.XML xML72 = null;
        schema71.setXml(xML72);
        schema71.setTitle("*/*");
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema71.xml(xML76);
        schema71.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema81 = schema71.$ref("*/*");
        schema71.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = schema71.writeOnly((java.lang.Boolean) false);
        schema71.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema71.deprecated((java.lang.Boolean) false);
        java.lang.Integer int90 = schema71.getMinLength();
        io.swagger.oas.models.media.Schema schema91 = schema58.example((java.lang.Object) schema71);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(int90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test13992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13992");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema70 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema72.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test13993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13993");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean15 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema12.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema12.maxItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema21.getProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test13994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13994");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        io.swagger.oas.models.media.Schema schema17 = schema10.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        java.util.List<java.lang.Object> objList20 = schema19.getEnum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(objList20);
    }

    @Test
    public void test13995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13995");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test13996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13996");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        objSchema0.setDiscriminator(discriminator38);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test13997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13997");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList26 = schema9.getRequired();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema9.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.type("*/*");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test13998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13998");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema26.getName();
        objSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList34 = objSchema26.getEnum();
        io.swagger.oas.models.media.Schema schema36 = objSchema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = objSchema26.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = objSchema26.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema57 = schema54.addRequiredItem("#/components/schemas/");
        objSchema41.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = objSchema26.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema41);
        io.swagger.oas.models.media.Schema schema61 = objSchema26.exclusiveMaximum((java.lang.Boolean) false);
        schema25.setNot((io.swagger.oas.models.media.Schema) objSchema26);
        java.lang.Integer int63 = objSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = objSchema26.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int66 = schema65.getMinProperties();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(objList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
    }

    @Test
    public void test13999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13999");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema14 = schema11.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema16.addRequiredItem("#/components/schemas/class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test14000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test14000");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.String str11 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema10.title("#/components/schemas/");
        java.lang.Object obj15 = null;
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj15);
        io.swagger.oas.models.media.Schema schema18 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
    }
}

