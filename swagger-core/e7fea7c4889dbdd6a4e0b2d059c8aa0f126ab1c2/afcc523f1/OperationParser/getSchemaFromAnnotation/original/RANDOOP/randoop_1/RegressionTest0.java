import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test00001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00001");
        io.swagger.oas.annotations.servers.Server server0 = null;
        java.util.Optional<io.swagger.oas.models.servers.Server> serverOptional1 = io.swagger.jaxrs2.OperationParser.getServer(server0);
        org.junit.Assert.assertNotNull(serverOptional1);
    }

    @Test
    public void test00002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00002");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.MEDIA_TYPE;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "*/*" + "'", str0, "*/*");
    }

    @Test
    public void test00003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00003");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        org.junit.Assert.assertNotNull(tagSetOptional1);
    }

    @Test
    public void test00004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00004");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "no description" + "'", str0, "no description");
    }

    @Test
    public void test00005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00005");
        io.swagger.oas.annotations.info.Contact contact0 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional1 = io.swagger.jaxrs2.OperationParser.getContact(contact0);
        org.junit.Assert.assertNotNull(contactOptional1);
    }

    @Test
    public void test00006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00006");
        io.swagger.oas.annotations.media.Schema schema0 = null;
        java.util.Optional<io.swagger.oas.models.media.Schema> schemaOptional1 = io.swagger.jaxrs2.OperationParser.getSchemaFromAnnotation(schema0);
        org.junit.Assert.assertNotNull(schemaOptional1);
    }

    @Test
    public void test00007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00007");
        io.swagger.oas.annotations.responses.ApiResponse apiResponse0 = null;
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray1 = new io.swagger.oas.annotations.responses.ApiResponse[] { apiResponse0 };
        javax.ws.rs.Produces produces2 = null;
        javax.ws.rs.Produces produces3 = null;
        io.swagger.oas.models.Components components4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional5 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray1, produces2, produces3, components4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(apiResponseArray1);
    }

    @Test
    public void test00008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00008");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass8 = objSchema0.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test00009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00009");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.COMMA;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "," + "'", str0, ",");
    }

    @Test
    public void test00010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00010");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.COMPONENTS_REF;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "#/components/schemas/" + "'", str0, "#/components/schemas/");
    }

    @Test
    public void test00011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00011");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        objSchema12.setExtensions(strMap18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test00012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00012");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        java.lang.String str9 = schema7.getDescription();
        java.lang.Class<?> wildcardClass10 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test00013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00013");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema11.setType("#/components/schemas/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test00014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00014");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Class<?> wildcardClass7 = schema6.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test00015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00015");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test00016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00016");
        io.swagger.oas.annotations.parameters.RequestBody requestBody0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.parameters.RequestBody> requestBodyOptional2 = io.swagger.jaxrs2.OperationParser.getRequestBody(requestBody0, components1);
        org.junit.Assert.assertNotNull(requestBodyOptional2);
    }

    @Test
    public void test00017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00017");
        io.swagger.oas.annotations.media.Content[] contentArray0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        org.junit.Assert.assertNotNull(contentOptional2);
    }

    @Test
    public void test00018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00018");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.Integer int11 = schema10.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test00019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00019");
        io.swagger.oas.annotations.info.Info info0 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional1 = io.swagger.jaxrs2.OperationParser.getInfo(info0);
        org.junit.Assert.assertNotNull(infoOptional1);
    }

    @Test
    public void test00020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00020");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator9 = objSchema0.getDiscriminator();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(discriminator9);
    }

    @Test
    public void test00021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00021");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        java.lang.String str13 = objSchema0.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test00022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00022");
        io.swagger.oas.annotations.links.LinkParameters linkParameters0 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap1 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameters0);
        org.junit.Assert.assertNotNull(strMap1);
    }

    @Test
    public void test00023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00023");
        io.swagger.oas.models.media.Schema<java.util.List<java.lang.String>> strListSchema0 = new io.swagger.oas.models.media.Schema<java.util.List<java.lang.String>>();
    }

    @Test
    public void test00024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00024");
        io.swagger.oas.annotations.ExternalDocumentation externalDocumentation0 = null;
        java.util.Optional<io.swagger.oas.models.ExternalDocumentation> externalDocumentationOptional1 = io.swagger.jaxrs2.OperationParser.getExternalDocumentation(externalDocumentation0);
        org.junit.Assert.assertNotNull(externalDocumentationOptional1);
    }

    @Test
    public void test00025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00025");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema37.setXml(xML39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00026");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean24 = schema23.getExclusiveMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test00027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00027");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        objSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00028");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema9.getProperties();
        java.math.BigDecimal bigDecimal25 = schema9.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test00029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00029");
        io.swagger.oas.models.media.Schema<java.lang.reflect.GenericDeclaration> genericDeclarationSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test00030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00030");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        java.lang.Boolean boolean3 = objSchema0.getNullable();
        org.junit.Assert.assertNull(boolean3);
    }

    @Test
    public void test00031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00031");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        schema7.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00032");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.externalDocs(externalDocumentation31);
        schema27.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test00033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00033");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        objSchema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema32.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema42 = objSchema18.properties(strMap41);
        io.swagger.oas.models.media.Schema schema43 = schema14.properties(strMap41);
        schema14.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test00034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00034");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.String str44 = objSchema39.getName();
        objSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList47 = objSchema39.getEnum();
        io.swagger.oas.models.media.Schema schema49 = objSchema39.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = objSchema39.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = objSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = objSchema39.title("*/*");
        java.lang.Boolean boolean55 = objSchema39.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        objSchema39.setExternalDocs(externalDocumentation56);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema58 = schema37.example((java.lang.Object) externalDocumentation56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(objList47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test00035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00035");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
    }

    @Test
    public void test00036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00036");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass4 = serverListOptional3.getClass();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test00037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00037");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean17 = schema16.getDeprecated();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test00038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00038");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        schema12.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test00039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00039");
        io.swagger.oas.annotations.media.Content content0 = null;
        io.swagger.oas.annotations.media.Content[] contentArray1 = new io.swagger.oas.annotations.media.Content[] { content0 };
        io.swagger.oas.models.Components components2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.oas.models.media.Content> contentOptional3 = io.swagger.jaxrs2.OperationParser.getContents(contentArray1, components2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(contentArray1);
    }

    @Test
    public void test00040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00040");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        objSchema0.setMinProperties((java.lang.Integer) 10);
        java.lang.Object obj4 = objSchema0.getExample();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test00041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00041");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00042");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.String str13 = objSchema4.getTitle();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test00043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00043");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        schema23.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test00044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00044");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int15 = objSchema4.getMinProperties();
        io.swagger.oas.models.media.XML xML16 = objSchema4.getXml();
        objSchema4.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test00045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00045");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        java.math.BigDecimal bigDecimal16 = schema7.getMinimum();
        java.lang.Boolean boolean17 = schema7.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
    }

    @Test
    public void test00046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00046");
        io.swagger.oas.models.media.Schema<java.util.Collection<java.lang.String>> strCollectionSchema0 = new io.swagger.oas.models.media.Schema<java.util.Collection<java.lang.String>>();
    }

    @Test
    public void test00047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00047");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        schema19.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00048");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.name(",");
        java.math.BigDecimal bigDecimal18 = null;
        schema13.setMaximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00049");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str20 = schema7.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test00050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00050");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal19 = null;
        schema17.setMinimum(bigDecimal19);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test00051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00051");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        schema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass26 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test00052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00052");
        io.swagger.oas.models.media.Schema<java.lang.reflect.Type> typeSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.Type>();
    }

    @Test
    public void test00053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00053");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test00054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00054");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass12 = objSchema0.getClass();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test00055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00055");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass14 = objSchema0.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test00056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00056");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema10.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00057");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String str15 = schema14.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00058");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        java.lang.String str16 = objSchema4.getDescription();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test00059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00059");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        java.lang.Class<?> wildcardClass56 = schema41.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test00060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00060");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer int24 = schema23.getMaxProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test00061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00061");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        java.math.BigDecimal bigDecimal18 = schema16.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test00062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00062");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Integer int24 = schema7.getMaxProperties();
        java.lang.Integer int25 = schema7.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test00063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00063");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = schema9.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test00064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00064");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.String str12 = objSchema0.getType();
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test00065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00065");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Integer int26 = objSchema0.getMaxItems();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test00066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00066");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        java.lang.Integer int47 = schema46.getMaxItems();
        schema46.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test00067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00067");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        java.lang.Boolean boolean24 = schema23.getReadOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
    }

    @Test
    public void test00068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00068");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema11.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minItems((java.lang.Integer) 1);
        schema16.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test00069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00069");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        schema11.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00070");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setDescription("");
        java.lang.Boolean boolean20 = schema7.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test00071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00071");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.name("*/*");
        io.swagger.oas.models.media.XML xML57 = schema56.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(xML57);
    }

    @Test
    public void test00072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00072");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema16 = schema14.readOnly((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test00073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00073");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        org.junit.Assert.assertNotNull(parameterListOptional2);
    }

    @Test
    public void test00074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00074");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00075");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("");
        io.swagger.oas.models.media.Schema schema40 = schema36.description("");
        io.swagger.oas.models.media.Schema schema41 = objSchema0.example((java.lang.Object) schema36);
        java.lang.Integer int42 = objSchema0.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test00076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00076");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        java.lang.Class<?> wildcardClass14 = schema13.getClass();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test00077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00077");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        java.lang.Integer int45 = schema44.getMaxLength();
        java.util.List<java.lang.Object> objList46 = schema44.getEnum();
        schema44.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(objList46);
    }

    @Test
    public void test00078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00078");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) 1);
        java.lang.String str21 = schema20.getType();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test00079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00079");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj14 = objSchema0.getDefault();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test00080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00080");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) schema37);
        schema24.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00081");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        schema33.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema33.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        objSchema38.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema38.properties(strMap45);
        schema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.minItems((java.lang.Integer) 100);
        java.lang.Integer int51 = schema50.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = objSchema52.addProperties("*/*", schema58);
        io.swagger.oas.models.media.Schema schema61 = objSchema52.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal62 = schema61.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        schema61.addExtension("#/components/schemas/", (java.lang.Object) objSchema64);
        io.swagger.jaxrs2.OperationParser operationParser70 = new io.swagger.jaxrs2.OperationParser();
        schema61.addEnumItemObject((java.lang.Object) operationParser70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema79.getExtensions();
        io.swagger.oas.models.media.Schema schema82 = schema79.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema84 = schema79.exclusiveMaximum((java.lang.Boolean) false);
        schema61.setAdditionalProperties(schema79);
        schema50.setNot(schema79);
        java.lang.Boolean boolean87 = schema79.getWriteOnly();
        io.swagger.oas.models.media.Schema schema88 = schema33.addProperties("#/components/schemas/no description", schema79);
        schema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "#/components/schemas/no description");
        java.lang.Boolean boolean90 = schema7.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + true + "'", boolean90, true);
    }

    @Test
    public void test00082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00082");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema10.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test00083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00083");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.String str15 = schema14.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test00084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00084");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.addRequiredItem(",");
        java.lang.Integer int21 = schema18.getMinLength();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test00085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00085");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.Class<?> wildcardClass18 = schema9.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test00086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00086");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        java.lang.Class<?> wildcardClass18 = schema15.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test00087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00087");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        java.lang.Class<?> wildcardClass4 = parameterListOptional3.getClass();
        org.junit.Assert.assertNotNull(parameterArray1);
        org.junit.Assert.assertNotNull(parameterListOptional3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test00088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00088");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test00089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00089");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00090");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getType();
        objSchema12.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test00091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00091");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        objSchema0.setDefault((java.lang.Object) "*/*");
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = objSchema0.getMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test00092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00092");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        schema7.setExternalDocs(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test00093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00093");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        objSchema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema32.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema42 = objSchema18.properties(strMap41);
        io.swagger.oas.models.media.Schema schema43 = schema14.properties(strMap41);
        schema43.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str46 = schema43.toString();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str46, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test00094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00094");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str20 = objSchema0.getType();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test00095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00095");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.String str12 = objSchema7.getName();
        objSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = objSchema7.getEnum();
        io.swagger.oas.models.media.Schema schema17 = objSchema7.name(",");
        objSchema7.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema7.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties(schema24);
        java.util.List<java.lang.Object> objList26 = schema24.getEnum();
        java.lang.Integer int27 = schema24.getMaxLength();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test00096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00096");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        schema13.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test00097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00097");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        schema18.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema18);
        java.lang.Class<?> wildcardClass26 = schema18.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test00098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00098");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass10 = objSchema0.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test00099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00099");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test00100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00100");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema18.getWriteOnly();
        schema18.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test00101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00101");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        java.util.List<java.lang.String> strList17 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema19 = schema15.writeOnly((java.lang.Boolean) false);
        schema19.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00102");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        schema14.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = schema14.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation17);
    }

    @Test
    public void test00103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00103");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.type(",");
        io.swagger.oas.models.media.Schema schema17 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass18 = schema17.getClass();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test00104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00104");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        schema24.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema13.additionalProperties(schema24);
        java.lang.String str28 = schema24.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00105");
        io.swagger.oas.models.media.Schema<java.io.Serializable> serializableSchema0 = new io.swagger.oas.models.media.Schema<java.io.Serializable>();
    }

    @Test
    public void test00106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00106");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        java.lang.Boolean boolean39 = schema7.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test00107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00107");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        java.lang.String str22 = schema7.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test00108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00108");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test00109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00109");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator33 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator34 = objSchema0.getDiscriminator();
        java.lang.Integer int35 = objSchema0.getMinLength();
        objSchema0.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test00110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00110");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.String str32 = objSchema27.getName();
        objSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList35 = objSchema27.getEnum();
        java.lang.Boolean boolean36 = objSchema27.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        objSchema27.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema27.addProperties("no description", schema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = objSchema27.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema50.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema50.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal54 = null;
        schema50.setMinimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema50.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        objSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema59.properties(strMap66);
        schema67.setExclusiveMinimum((java.lang.Boolean) true);
        schema57.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str71 = schema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        io.swagger.oas.models.media.XML xML80 = null;
        schema79.setXml(xML80);
        schema79.setTitle("*/*");
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        schema79.setRequired((java.util.List<java.lang.String>) strList91);
        schema57.setRequired((java.util.List<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema95 = objSchema27.required((java.util.List<java.lang.String>) strList91);
        schema26.setRequired((java.util.List<java.lang.String>) strList91);
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(objList35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test00111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00111");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = objSchema0.getExclusiveMinimum();
        java.lang.Class<?> wildcardClass14 = objSchema0.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test00112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00112");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML39 = null;
        schema26.setXml(xML39);
        java.lang.Integer int41 = schema26.getMaxProperties();
        java.lang.Class<?> wildcardClass42 = schema26.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test00113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00113");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        schema9.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test00114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00114");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        java.lang.Class<?> wildcardClass47 = schema46.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00115");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema13.minProperties((java.lang.Integer) (-1));
        java.lang.String str20 = schema19.getFormat();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test00116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00116");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema21.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00117");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getNot();
        java.math.BigDecimal bigDecimal15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test00118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00118");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.xml(xML25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema11.addProperties(",", schema26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        java.lang.String str35 = objSchema30.getName();
        objSchema30.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList38 = objSchema30.getEnum();
        io.swagger.oas.models.media.Schema schema40 = objSchema30.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        objSchema30.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.String str48 = objSchema43.getName();
        objSchema43.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList51 = objSchema43.getEnum();
        io.swagger.oas.models.media.Schema schema53 = objSchema43.exclusiveMaximum((java.lang.Boolean) false);
        objSchema30.setExample((java.lang.Object) objSchema43);
        java.lang.Boolean boolean55 = objSchema30.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema56 = schema26.addProperties("*/*", (io.swagger.oas.models.media.Schema) objSchema30);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(objList38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(objList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
    }

    @Test
    public void test00119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00119");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        java.math.BigDecimal bigDecimal56 = schema53.getMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
    }

    @Test
    public void test00120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00120");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema5.getName();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test00121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00121");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMaximum();
        objSchema0.setDescription("*/*");
        objSchema0.setMinLength((java.lang.Integer) 1);
        objSchema0.set$ref(",");
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal8);
    }

    @Test
    public void test00122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00122");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass37 = schema36.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test00123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00123");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.lang.Object obj73 = schema72.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test00124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00124");
        io.swagger.oas.models.media.Schema<java.lang.Cloneable> cloneableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Cloneable>();
    }

    @Test
    public void test00125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00125");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        java.lang.String str12 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema14 = schema9.format("hi!");
        java.lang.String str15 = schema9.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "no description" + "'", str12, "no description");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test00126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00126");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Class<?> wildcardClass9 = objSchema0.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test00127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00127");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test00128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00128");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.lang.String str16 = schema14.getPattern();
        schema14.setPattern("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "no description" + "'", str16, "no description");
    }

    @Test
    public void test00129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00129");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.lang.String str13 = schema8.toString();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00130");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Class<?> wildcardClass25 = objSchema13.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test00131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00131");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00132");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList13 = schema10.getRequired();
        io.swagger.oas.models.media.Schema schema14 = schema10.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test00133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00133");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML17 = objSchema0.getXml();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = xML17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test00134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00134");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test00135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00135");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        io.swagger.oas.models.media.Schema schema40 = schema7.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = schema40.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
    }

    @Test
    public void test00136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00136");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        schema14.setTitle("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00137");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema40.pattern("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema31.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema49 = schema20.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.lang.Boolean boolean50 = schema49.getUniqueItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
    }

    @Test
    public void test00138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00138");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass16 = schema15.getClass();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test00139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00139");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        java.lang.Integer int36 = schema34.getMinProperties();
        schema34.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test00140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00140");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.minimum(bigDecimal14);
        java.lang.Integer int16 = schema9.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test00141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00141");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.not(schema7);
        io.swagger.oas.models.media.Schema schema10 = schema6.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = schema6.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
    }

    @Test
    public void test00142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00142");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.format("");
        java.lang.Object obj16 = schema15.getDefault();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test00143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00143");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str5 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal9 = null;
        objSchema8.setMultipleOf(bigDecimal9);
        objSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int18 = objSchema13.getMinLength();
        objSchema8.addEnumItemObject((java.lang.Object) objSchema13);
        objSchema13.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema13.maxProperties((java.lang.Integer) 0);
        objSchema13.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.Schema schema36 = objSchema27.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        schema36.addExtension("#/components/schemas/", (java.lang.Object) objSchema39);
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        schema36.addEnumItemObject((java.lang.Object) operationParser45);
        io.swagger.oas.models.media.Schema schema47 = objSchema13.addProperties("no description", schema36);
        schema47.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str50 = schema47.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema47.externalDocs(externalDocumentation51);
        objSchema0.setAdditionalProperties(schema52);
        objSchema0.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test00144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00144");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema8.additionalProperties(schema28);
        java.math.BigDecimal bigDecimal30 = schema8.getMultipleOf();
        io.swagger.oas.models.media.Schema schema32 = schema8.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test00145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00145");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Boolean boolean12 = objSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test00146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00146");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str57 = objSchema0.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test00147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00147");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        schema19.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema19.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00148");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        java.lang.String str19 = objSchema0.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test00149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00149");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        schema9.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema9.maxLength((java.lang.Integer) 100);
        schema14.setFormat("");
        java.lang.Object obj17 = schema14.getDefault();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test00150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00150");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = objSchema37.getMinLength();
        schema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema37);
        schema33.setExclusiveMinimum((java.lang.Boolean) true);
        schema33.setType(",");
        java.lang.Boolean boolean48 = schema33.getExclusiveMinimum();
        schema23.setAdditionalProperties(schema33);
        java.lang.Class<?> wildcardClass50 = schema33.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + true + "'", boolean48, true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00151");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = schema26.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
    }

    @Test
    public void test00152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00152");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        java.lang.Object obj16 = null;
        schema7.setDefault(obj16);
        io.swagger.oas.models.media.Schema schema19 = schema7.uniqueItems((java.lang.Boolean) false);
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00153");
        io.swagger.oas.models.media.Schema<java.lang.Class<?>> wildcardClassSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Class<?>>();
    }

    @Test
    public void test00154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00154");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        schema21.setTitle("*/*");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test00155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00155");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        schema50.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean55 = schema50.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test00156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00156");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int68 = schema67.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test00157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00157");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>> strListSchema54 = new io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = schema7.not((io.swagger.oas.models.media.Schema) strListSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = schema7.getExternalDocs();
        java.lang.Integer int57 = schema7.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test00158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00158");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema0.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int14 = schema13.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test00159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00159");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.toString();
        io.swagger.oas.models.media.Schema schema29 = schema14.getNot();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test00160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00160");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.name(",");
        java.lang.String str18 = schema13.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "*/*" + "'", str18, "*/*");
    }

    @Test
    public void test00161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00161");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        schema52.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int55 = schema52.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test00162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00162");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        schema6.setDescription("");
        java.lang.Boolean boolean11 = schema6.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test00163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00163");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        objSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = objSchema0.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema55);
    }

    @Test
    public void test00164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00164");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema7.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        schema7.setXml(xML12);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test00165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00165");
        io.swagger.oas.models.media.Schema<java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema>> strMapSchema0 = new io.swagger.oas.models.media.Schema<java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema>>();
    }

    @Test
    public void test00166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00166");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.Integer int21 = schema13.getMaxProperties();
        schema13.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema13.getExternalDocs();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(externalDocumentation24);
    }

    @Test
    public void test00167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00167");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal9 = null;
        objSchema8.setMultipleOf(bigDecimal9);
        objSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema8.set$ref("no description");
        objSchema8.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.name(",");
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema8.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str32 = objSchema8.getType();
        io.swagger.oas.models.media.Schema schema34 = objSchema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = objSchema35.getName();
        objSchema35.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList43 = objSchema35.getEnum();
        io.swagger.oas.models.media.Schema schema45 = objSchema35.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = objSchema35.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = objSchema35.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema63.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = schema63.addRequiredItem("#/components/schemas/");
        objSchema50.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = objSchema35.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema50);
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 1);
        schema68.setDeprecated((java.lang.Boolean) false);
        java.lang.String str73 = schema68.getType();
        objSchema8.addEnumItemObject((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema75 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema8);
        java.lang.Integer int76 = objSchema0.getMaxItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(objList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test00168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00168");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMinItems();
        schema14.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00169");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = objSchema0.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test00170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00170");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.Boolean boolean53 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int70 = objSchema65.getMinLength();
        schema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema65);
        schema61.setExclusiveMinimum((java.lang.Boolean) true);
        schema61.setType(",");
        io.swagger.oas.models.media.Schema schema76 = objSchema0.example((java.lang.Object) schema61);
        objSchema0.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test00171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00171");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        objSchema0.setName("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00172");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMinProperties((java.lang.Integer) 1);
        schema8.setPattern("#/components/schemas/");
        java.lang.String str15 = schema8.getFormat();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test00173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00173");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = objSchema0.getProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test00174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00174");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.Integer int15 = schema12.getMaxLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00175");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        java.lang.String str33 = schema32.getPattern();
        java.lang.Integer int34 = schema32.getMinProperties();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "no description" + "'", str33, "no description");
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test00176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00176");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.String str12 = objSchema7.getName();
        objSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = objSchema7.getEnum();
        io.swagger.oas.models.media.Schema schema17 = objSchema7.name(",");
        objSchema7.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema7.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties(schema24);
        java.math.BigDecimal bigDecimal26 = objSchema0.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = objSchema0.getProperties();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test00177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00177");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        io.swagger.oas.models.media.XML xML11 = objSchema0.getXml();
        java.lang.Class<?> wildcardClass12 = objSchema0.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test00178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00178");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        schema14.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema14.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema14.getAdditionalProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
    }

    @Test
    public void test00179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00179");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema9.multipleOf(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        schema29.setMinimum(bigDecimal30);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00180");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML21 = null;
        objSchema0.setXml(xML21);
        java.lang.String str23 = objSchema0.getType();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test00181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00181");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema20.xml(xML30);
        io.swagger.oas.models.media.Schema schema33 = objSchema20.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj34 = schema33.getExample();
        schema15.addExtension("#/components/schemas/", obj34);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test00182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00182");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        java.lang.String str34 = schema9.getTitle();
        io.swagger.oas.models.media.Schema schema36 = schema9.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test00183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00183");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        java.lang.Boolean boolean49 = schema12.getDeprecated();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test00184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00184");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema46.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema46.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(externalDocumentation49);
    }

    @Test
    public void test00185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00185");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objSchema0.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test00186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00186");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        schema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = objSchema39.getMinLength();
        objSchema34.addEnumItemObject((java.lang.Object) objSchema39);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int48 = objSchema39.getMaxLength();
        io.swagger.oas.models.media.Schema schema50 = objSchema39.maxLength((java.lang.Integer) 100);
        schema31.setNot((io.swagger.oas.models.media.Schema) objSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = objSchema39.getExternalDocs();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema39.setMultipleOf(bigDecimal53);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(externalDocumentation52);
    }

    @Test
    public void test00187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00187");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.externalDocs(externalDocumentation30);
        java.util.List<java.lang.String> strList32 = schema29.getRequired();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test00188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00188");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.xml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        objSchema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.addRequiredItem(",");
        schema40.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj43 = schema40.getExample();
        java.util.List<java.lang.String> strList44 = schema40.getRequired();
        io.swagger.oas.models.media.Schema schema45 = schema26.required(strList44);
        schema11.setRequired(strList44);
        io.swagger.oas.models.media.XML xML47 = schema11.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(xML47);
    }

    @Test
    public void test00189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00189");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean10 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema11 = schema9.getAdditionalProperties();
        java.lang.Boolean boolean12 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test00190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00190");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        schema10.setDescription("*/*");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema10.setDiscriminator(discriminator21);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00191");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        schema52.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int55 = schema52.getMinProperties();
        schema52.setMinProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema52.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
    }

    @Test
    public void test00192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00192");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        java.lang.Boolean boolean33 = objSchema24.getWriteOnly();
        io.swagger.oas.annotations.media.Content content34 = null;
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(content34, produces35, produces36, components37);
        boolean boolean39 = objSchema24.equals((java.lang.Object) contentOptional38);
        schema21.addExtension("no description", (java.lang.Object) objSchema24);
        java.lang.String str41 = schema21.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test00193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00193");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        io.swagger.oas.models.media.Schema schema33 = schema30.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test00194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00194");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema7.externalDocs(externalDocumentation17);
        java.math.BigDecimal bigDecimal19 = schema7.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema7.setExternalDocs(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test00195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00195");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.String str25 = objSchema0.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test00196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00196");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        io.swagger.oas.models.media.XML xML2 = null;
        objSchema0.setXml(xML2);
        org.junit.Assert.assertNull(boolean1);
    }

    @Test
    public void test00197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00197");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        io.swagger.oas.models.media.Schema schema34 = schema12.maxItems((java.lang.Integer) 100);
        java.lang.Object obj35 = schema12.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test00198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00198");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.name(",");
        io.swagger.oas.models.media.XML xML18 = null;
        schema13.setXml(xML18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00199");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        schema15.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00200");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.XML xML9 = schema8.getXml();
        java.math.BigDecimal bigDecimal10 = schema8.getMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test00201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00201");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema schema67 = objSchema5.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test00202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00202");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = objSchema0.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
    }

    @Test
    public void test00203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00203");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) schema37);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema40 = schema37.deprecated((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test00204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00204");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        schema23.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test00205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00205");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getPattern();
        objSchema12.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "no description" + "'", str18, "no description");
    }

    @Test
    public void test00206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00206");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.XML xML10 = schema9.getXml();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test00207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00207");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) (-1));
        schema31.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj34 = schema31.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "#/components/schemas/" + "'", obj34, "#/components/schemas/");
    }

    @Test
    public void test00208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00208");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.XML xML25 = schema18.getXml();
        java.lang.Integer int26 = schema18.getMinLength();
        java.lang.Integer int27 = schema18.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(xML25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test00209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00209");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        objSchema0.setMinItems((java.lang.Integer) 0);
        objSchema0.set$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00210");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.maxItems((java.lang.Integer) 0);
        java.lang.String str18 = schema13.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test00211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00211");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        java.math.BigDecimal bigDecimal16 = objSchema0.getMultipleOf();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML42 = null;
        objSchema0.setXml(xML42);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test00212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00212");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal11 = null;
        objSchema10.setMultipleOf(bigDecimal11);
        objSchema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = objSchema15.getMinLength();
        objSchema10.addEnumItemObject((java.lang.Object) objSchema15);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema15.maxProperties((java.lang.Integer) 0);
        objSchema15.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema schema49 = objSchema15.addProperties("no description", schema38);
        schema49.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        objSchema0.setExample((java.lang.Object) schema49);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test00213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00213");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        objSchema0.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test00214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00214");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema29 = objSchema0.properties(strMap28);
        io.swagger.oas.models.media.XML xML30 = schema29.getXml();
        java.util.List<java.lang.Object> objList31 = schema29.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        schema40.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema40.minItems((java.lang.Integer) 100);
        java.lang.String str45 = schema44.get$ref();
        schema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        objSchema48.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema48.properties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema56.type("");
        io.swagger.oas.models.media.Schema schema60 = schema58.title("*/*");
        io.swagger.oas.models.media.Schema schema62 = schema60.description(",");
        java.lang.String[] strArray65 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        io.swagger.oas.models.media.Schema schema68 = schema60.required((java.util.List<java.lang.String>) strList66);
        schema60.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema72 = schema60.name("");
        io.swagger.oas.models.media.Schema schema74 = schema72.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema76 = schema72.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList77 = schema72.getRequired();
        schema44.setRequired(strList77);
        schema29.setRequired(strList77);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strList77);
    }

    @Test
    public void test00215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00215");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList14 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test00216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00216");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 100);
        java.lang.String str22 = schema7.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema23.getEnum();
        objSchema23.setDescription("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setType("");
        java.math.BigDecimal bigDecimal38 = objSchema33.getMaximum();
        io.swagger.oas.models.media.Schema schema40 = objSchema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList60 = objSchema52.getEnum();
        io.swagger.oas.models.media.Schema schema62 = objSchema52.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema52.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = objSchema52.getExternalDocs();
        io.swagger.oas.models.media.Schema schema67 = objSchema52.title("*/*");
        java.lang.Boolean boolean68 = objSchema52.getExclusiveMinimum();
        objSchema52.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = objSchema52.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        objSchema52.setProperties(strMap73);
        objSchema52.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = objSchema52.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal80 = null;
        objSchema79.setMultipleOf(bigDecimal80);
        java.lang.String[] strArray85 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        objSchema79.setRequired((java.util.List<java.lang.String>) strList86);
        objSchema52.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema90 = objSchema41.required((java.util.List<java.lang.String>) strList86);
        objSchema33.setRequired((java.util.List<java.lang.String>) strList86);
        objSchema23.setRequired((java.util.List<java.lang.String>) strList86);
        schema7.setRequired((java.util.List<java.lang.String>) strList86);
        java.lang.Object obj94 = null;
        schema7.addEnumItemObject(obj94);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "no description" + "'", str22, "no description");
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(objList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test00217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00217");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        schema15.setType("#/components/schemas/no description");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00218");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema7.deprecated((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass19 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test00219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00219");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
    }

    @Test
    public void test00220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00220");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test00221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00221");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.servers.Server[]> serverArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.servers.Server[]>();
    }

    @Test
    public void test00222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00222");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Integer int10 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = schema9.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema12.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test00223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00223");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema15.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00224");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = null;
        schema7.setXml(xML15);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00225");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema25.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal49 = null;
        schema45.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema45.maxLength((java.lang.Integer) 10);
        schema37.addEnumItemObject((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.name("");
        io.swagger.oas.models.media.Schema schema56 = objSchema0.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.lang.Boolean boolean57 = objSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
    }

    @Test
    public void test00226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00226");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = null;
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
    }

    @Test
    public void test00227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00227");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema7.getExternalDocs();
        java.lang.Integer int23 = schema7.getMaxLength();
        java.lang.Class<?> wildcardClass24 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test00228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00228");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        objSchema0.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema13.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema13.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = objSchema13.title("*/*");
        java.lang.Boolean boolean29 = objSchema13.getExclusiveMinimum();
        objSchema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema13.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        objSchema13.setProperties(strMap34);
        objSchema13.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema38.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = objSchema38.deprecated((java.lang.Boolean) false);
        schema51.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema13.setNot(schema55);
        io.swagger.oas.models.media.Schema schema58 = objSchema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean59 = objSchema13.getNullable();
        boolean boolean60 = objSchema0.equals((java.lang.Object) boolean59);
        objSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test00229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00229");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        schema21.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.xml(xML24);
        schema21.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00230");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        schema8.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test00231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00231");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        java.lang.String str34 = schema27.getPattern();
        java.lang.Boolean boolean35 = schema27.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "no description" + "'", str34, "no description");
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test00232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00232");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        java.lang.Integer int15 = schema14.getMinItems();
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00233");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test00234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00234");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        java.lang.Boolean boolean26 = schema8.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + true + "'", boolean26, true);
    }

    @Test
    public void test00235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00235");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = schema15.getType();
        schema15.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test00236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00236");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00237");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = objSchema11.getMultipleOf();
        objSchema11.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test00238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00238");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema21 = schema12.getNot();
        java.util.List<java.lang.Object> objList22 = schema12.getEnum();
        schema12.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNull(objList22);
    }

    @Test
    public void test00239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00239");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean11 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = schema10.getNot();
        java.lang.String str13 = schema10.getName();
        io.swagger.oas.models.media.Schema schema15 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema10.externalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00240");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        objSchema5.setFormat("#/components/schemas/no description");
        java.lang.Integer int17 = objSchema5.getMinItems();
        java.math.BigDecimal bigDecimal18 = objSchema5.getMaximum();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test00241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00241");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        java.lang.Integer int24 = schema21.getMinItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test00242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00242");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.title("hi!");
        java.lang.Object obj39 = schema38.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        io.swagger.oas.models.media.XML xML49 = null;
        schema48.setXml(xML49);
        schema48.setTitle("*/*");
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema48.xml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema48.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        java.util.List<java.lang.String> strList58 = schema56.getRequired();
        io.swagger.oas.models.media.Schema schema59 = schema38.addProperties("", schema56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        objSchema71.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int81 = objSchema76.getMinLength();
        objSchema71.addEnumItemObject((java.lang.Object) objSchema76);
        objSchema76.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int85 = objSchema76.getMaxLength();
        schema67.addExtension("no description", (java.lang.Object) objSchema76);
        io.swagger.oas.models.media.Schema schema88 = schema67.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema67.getExtensions();
        schema59.setExtensions(strMap89);
        schema28.setExtensions(strMap89);
        schema18.setExtensions(strMap89);
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema95 = schema18.getNot();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(schema95);
    }

    @Test
    public void test00243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00243");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        schema13.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00244");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        schema18.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = objSchema37.getMinLength();
        schema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema37);
        schema33.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        io.swagger.oas.models.media.XML xML54 = null;
        schema53.setXml(xML54);
        schema53.setTitle("*/*");
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema53.xml(xML58);
        schema33.setDefault((java.lang.Object) xML58);
        io.swagger.oas.models.media.Schema schema62 = schema33.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema33.discriminator(discriminator63);
        io.swagger.oas.models.media.Schema schema66 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.String str72 = objSchema67.getName();
        objSchema67.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList75 = objSchema67.getEnum();
        io.swagger.oas.models.media.Schema schema77 = objSchema67.name(",");
        objSchema67.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema80.setPattern("no description");
        objSchema80.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = null;
        io.swagger.oas.models.media.Schema schema87 = objSchema80.addProperties("*/*", schema86);
        io.swagger.oas.models.media.XML xML88 = null;
        schema87.setXml(xML88);
        schema87.setTitle("*/*");
        io.swagger.oas.models.media.XML xML92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema87.xml(xML92);
        io.swagger.oas.models.media.Schema schema95 = schema87.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap96 = schema95.getProperties();
        io.swagger.oas.models.media.Schema schema97 = objSchema67.properties(strMap96);
        io.swagger.oas.models.media.Schema schema98 = schema33.properties(strMap96);
        io.swagger.oas.models.media.Schema schema99 = schema25.properties(strMap96);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(objList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test00245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00245");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        java.lang.Object obj14 = schema13.getDefault();
        java.lang.Boolean boolean15 = schema13.getWriteOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00246");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        java.lang.Boolean boolean49 = schema41.getWriteOnly();
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema41.xml(xML50);
        java.math.BigDecimal bigDecimal52 = schema41.getMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
    }

    @Test
    public void test00247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00247");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        java.lang.String str21 = schema18.toString();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00248");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str10 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        objSchema13.setRequired((java.util.List<java.lang.String>) strList20);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList20);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test00249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00249");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema14.getExtensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test00250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00250");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        java.lang.Object obj16 = null;
        schema7.setDefault(obj16);
        io.swagger.oas.models.media.Schema schema19 = schema7.uniqueItems((java.lang.Boolean) false);
        schema19.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00251");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema28);
        java.lang.Boolean boolean35 = schema24.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.name(",");
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        schema57.setTitle("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema57.xml(xML62);
        io.swagger.oas.models.media.Schema schema65 = schema57.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema67 = objSchema37.properties(strMap66);
        java.lang.Object obj68 = schema67.getDefault();
        io.swagger.oas.models.media.Schema schema69 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema24.getProperties();
        io.swagger.oas.models.media.Schema schema71 = schema15.properties(strMap70);
        schema71.setTitle("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test00252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00252");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema25.getEnum();
        objSchema25.setDescription("hi!");
        schema24.setNot((io.swagger.oas.models.media.Schema) objSchema25);
        objSchema25.set$ref("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(objList32);
    }

    @Test
    public void test00253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00253");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.writeOnly((java.lang.Boolean) false);
        schema65.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema65.uniqueItems((java.lang.Boolean) false);
        schema71.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test00254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00254");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.Integer int31 = schema12.getMinProperties();
        java.lang.Boolean boolean32 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test00255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00255");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass15 = schema9.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00256");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema7.type(",");
        java.lang.Class<?> wildcardClass21 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test00257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00257");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        java.lang.String str11 = schema7.toString();
        io.swagger.oas.models.media.Schema schema13 = schema7.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00258");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema33 = schema30.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema33.setExclusiveMaximum((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema33);
    }

    @Test
    public void test00259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00259");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML31 = null;
        schema12.setXml(xML31);
        java.lang.Class<?> wildcardClass33 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test00260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00260");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.XML xML9 = schema8.getXml();
        java.math.BigDecimal bigDecimal10 = null;
        schema8.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        schema8.setExample((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00261");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        java.math.BigDecimal bigDecimal55 = objSchema50.getMaximum();
        objSchema50.setMinLength((java.lang.Integer) 0);
        objSchema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator61 = schema12.getDiscriminator();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
    }

    @Test
    public void test00262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00262");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        java.lang.Boolean boolean12 = schema11.getExclusiveMaximum();
        schema11.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test00263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00263");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.$ref("#/components/schemas/no description");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00264");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.lang.Boolean boolean10 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        java.lang.Boolean boolean15 = schema12.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00265");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objSchema0.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test00266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00266");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema14.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test00267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00267");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.maximum(bigDecimal13);
        java.lang.Class<?> wildcardClass15 = schema14.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00268");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        schema39.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test00269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00269");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema7.addExtension("#/components/schemas/", (java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMultipleOf(bigDecimal24);
        java.lang.String str26 = schema21.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str26, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00270");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean11 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = schema10.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema13.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema13.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = objSchema13.title("*/*");
        java.lang.Boolean boolean29 = objSchema13.getExclusiveMinimum();
        objSchema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema13.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        objSchema13.setProperties(strMap34);
        java.lang.Object obj36 = objSchema13.getExample();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema39 = objSchema13.minProperties((java.lang.Integer) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema40 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test00271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00271");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer int12 = schema11.getMinProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test00272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00272");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        schema15.setMinimum(bigDecimal19);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test00273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00273");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getPattern();
        objSchema12.setMinProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema12.maximum(bigDecimal21);
        java.lang.Boolean boolean23 = objSchema12.getReadOnly();
        java.lang.Boolean boolean24 = objSchema12.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "no description" + "'", str18, "no description");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test00274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00274");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema14.getMinLength();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxLength((java.lang.Integer) 0);
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00275");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        schema18.setNot(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        objSchema37.setExternalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        schema51.setXml(xML52);
        schema51.setTitle("*/*");
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema51.xml(xML56);
        io.swagger.oas.models.media.Schema schema59 = schema51.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = schema59.getProperties();
        io.swagger.oas.models.media.Schema schema61 = objSchema37.properties(strMap60);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        objSchema62.setExternalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = null;
        io.swagger.oas.models.media.Schema schema76 = objSchema69.addProperties("*/*", schema75);
        io.swagger.oas.models.media.XML xML77 = null;
        schema76.setXml(xML77);
        schema76.setTitle("*/*");
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema76.xml(xML81);
        io.swagger.oas.models.media.Schema schema84 = schema76.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema86 = objSchema62.properties(strMap85);
        schema61.setProperties(strMap85);
        io.swagger.oas.models.media.Schema schema89 = schema61.minLength((java.lang.Integer) (-1));
        schema89.setTitle("#/components/schemas/no description");
        boolean boolean92 = schema33.equals((java.lang.Object) schema89);
        io.swagger.oas.models.media.Discriminator discriminator93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema89.discriminator(discriminator93);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test00276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00276");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        io.swagger.oas.models.media.Schema schema58 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int59 = schema25.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test00277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00277");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema12.setMultipleOf(bigDecimal13);
        objSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = objSchema12.title("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema20.$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean25 = schema24.getDeprecated();
        objSchema0.addEnumItemObject((java.lang.Object) schema24);
        java.lang.Class<?> wildcardClass27 = schema24.getClass();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test00278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00278");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.XML xML56 = null;
        schema41.setXml(xML56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema41.discriminator(discriminator58);
        schema41.setWriteOnly((java.lang.Boolean) false);
        schema41.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test00279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00279");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.util.List<java.lang.String> strList25 = objSchema13.getRequired();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema13.setMaximum(bigDecimal26);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test00280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00280");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        java.lang.Boolean boolean33 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema35 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test00281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00281");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.String str32 = objSchema27.getName();
        objSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList35 = objSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema27.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = objSchema27.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = objSchema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = objSchema27.title("*/*");
        java.lang.Boolean boolean43 = objSchema27.getExclusiveMinimum();
        objSchema27.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean46 = objSchema27.getUniqueItems();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema27.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        objSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema49.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("");
        io.swagger.oas.models.media.Schema schema61 = schema57.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema65 = schema63.$ref("");
        io.swagger.oas.models.media.Schema schema67 = schema63.description("");
        io.swagger.oas.models.media.Schema schema68 = objSchema27.example((java.lang.Object) schema63);
        objSchema0.addExtension("", (java.lang.Object) schema63);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(objList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test00282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00282");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema30.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.externalDocs(externalDocumentation34);
        schema35.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test00283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00283");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        java.math.BigDecimal bigDecimal27 = schema9.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test00284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00284");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass16 = schema15.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test00285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00285");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        io.swagger.oas.models.media.Schema schema13 = schema10.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test00286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00286");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = objSchema0.getWriteOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test00287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00287");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        java.lang.Boolean boolean22 = schema7.getExclusiveMinimum();
        java.lang.Object obj23 = schema7.getDefault();
        java.lang.String str24 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema7.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.String str33 = objSchema28.getName();
        objSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList36 = objSchema28.getEnum();
        io.swagger.oas.models.media.Schema schema38 = objSchema28.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema38.name("hi!");
        schema40.set$ref("*/*");
        schema26.addExtension("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "*/*");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(objList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test00288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00288");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        io.swagger.oas.models.media.Schema schema15 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema18 = schema9.pattern("no description");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test00289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00289");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int25 = schema22.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test00290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00290");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = objSchema5.getExclusiveMinimum();
        java.lang.Boolean boolean15 = objSchema5.getUniqueItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00291");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        objSchema0.setMinProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal4 = null;
        objSchema0.setMultipleOf(bigDecimal4);
        org.junit.Assert.assertNull(boolean1);
    }

    @Test
    public void test00292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00292");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema15.getMaxProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test00293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00293");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        io.swagger.oas.models.media.Schema schema36 = schema32.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema36.setMaxItems((java.lang.Integer) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema36);
    }

    @Test
    public void test00294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00294");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML15 = null;
        schema12.setXml(xML15);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00295");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        java.lang.Object obj14 = schema13.getExample();
        java.lang.Class<?> wildcardClass15 = schema13.getClass();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00296");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maximum(bigDecimal23);
        objSchema15.setMinProperties((java.lang.Integer) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema27 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test00297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00297");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.readOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = objSchema0.getMaximum();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test00298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00298");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.lang.Integer int12 = schema10.getMinProperties();
        java.lang.Object obj13 = schema10.getDefault();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test00299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00299");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        schema18.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema25 = schema10.not(schema18);
        java.util.List<java.lang.Object> objList26 = schema18.getEnum();
        java.util.List<java.lang.String> strList27 = schema18.getRequired();
        schema18.setMinLength((java.lang.Integer) 0);
        schema18.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test00300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00300");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML16 = schema10.getXml();
        schema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass19 = schema10.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test00301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00301");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema9.addProperties("", schema27);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 100);
        schema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema32.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation35);
    }

    @Test
    public void test00302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00302");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Integer int24 = schema7.getMaxProperties();
        java.math.BigDecimal bigDecimal25 = null;
        schema7.setMaximum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test00303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00303");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        objSchema29.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema29.properties(strMap52);
        objSchema0.setProperties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = objSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema56 = schema55.getAdditionalProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema55);
    }

    @Test
    public void test00304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00304");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        java.lang.String str14 = schema13.getName();
        java.lang.Boolean boolean15 = schema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass18 = schema13.getClass();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test00305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00305");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema17 = schema7.pattern("hi!");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test00306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00306");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.Integer int21 = schema13.getMaxProperties();
        java.lang.String str22 = schema13.get$ref();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test00307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00307");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        io.swagger.oas.models.media.Schema schema61 = schema14.addProperties("hi!", (io.swagger.oas.models.media.Schema) objSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        objSchema62.addExtension("", (java.lang.Object) objSchema66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        objSchema66.setExternalDocs(externalDocumentation72);
        java.lang.String str74 = objSchema66.getName();
        io.swagger.oas.models.media.Schema schema76 = objSchema66.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema76.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int79 = schema78.getMinItems();
        schema78.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema14.not(schema78);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        schema84.setDiscriminator(discriminator85);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test00308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00308");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema7.title("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test00309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00309");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        objSchema13.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema21 = schema12.example((java.lang.Object) strMap19);
        schema21.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test00310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00310");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        objSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00311");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String str15 = schema14.getTitle();
        java.math.BigDecimal bigDecimal16 = schema14.getMinimum();
        java.lang.Boolean boolean17 = schema14.getUniqueItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test00312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00312");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMultipleOf(bigDecimal15);
        schema12.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00313");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema schema56 = schema54.type("");
        schema54.setDescription("");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test00314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00314");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int29 = schema28.getMaxProperties();
        schema28.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test00315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00315");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean12 = objSchema0.getExclusiveMinimum();
        objSchema0.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean15 = objSchema0.getNullable();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00316");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal22 = null;
        objSchema21.setMultipleOf(bigDecimal22);
        objSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = objSchema26.getMinLength();
        objSchema21.addEnumItemObject((java.lang.Object) objSchema26);
        objSchema26.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = objSchema26.maxProperties((java.lang.Integer) 0);
        objSchema26.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema40 = objSchema26.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = objSchema26.type(",");
        schema42.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema42.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema7.not(schema46);
        schema46.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test00317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00317");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        java.lang.String str65 = schema57.getPattern();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "no description" + "'", str65, "no description");
    }

    @Test
    public void test00318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00318");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        java.util.List<java.lang.String> strList66 = objSchema56.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test00319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00319");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref(",");
        io.swagger.oas.models.media.Schema schema12 = schema8.nullable((java.lang.Boolean) false);
        schema8.setFormat("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test00320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00320");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = schema7.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00321");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.minLength((java.lang.Integer) 100);
        java.lang.Boolean boolean33 = schema32.getDeprecated();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test00322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00322");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.maxProperties((java.lang.Integer) 10);
        objSchema0.setTitle("no description");
        objSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test00323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00323");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        schema7.setRequired((java.util.List<java.lang.String>) strList19);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema7.format("no description");
        schema25.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML28 = null;
        schema25.setXml(xML28);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00324");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj21 = schema20.getDefault();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test00325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00325");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test00326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00326");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema17.getProperties();
        schema17.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test00327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00327");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        objSchema30.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema30.properties(strMap53);
        schema14.setProperties(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.String str61 = objSchema56.getName();
        objSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList64 = objSchema56.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = objSchema56.getExternalDocs();
        io.swagger.oas.models.media.Schema schema71 = objSchema56.title("*/*");
        java.lang.Boolean boolean72 = objSchema56.getExclusiveMinimum();
        objSchema56.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean75 = objSchema56.getUniqueItems();
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema56.minimum(bigDecimal76);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        objSchema78.setReadOnly((java.lang.Boolean) false);
        java.lang.String str83 = objSchema78.getName();
        objSchema78.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = objSchema78.getEnum();
        io.swagger.oas.models.media.Schema schema88 = objSchema78.name(",");
        objSchema78.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema92 = objSchema78.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList93 = schema92.getEnum();
        io.swagger.oas.models.media.Schema schema95 = schema92.uniqueItems((java.lang.Boolean) true);
        schema77.setAdditionalProperties(schema92);
        io.swagger.oas.models.media.Schema schema97 = schema14.example((java.lang.Object) schema92);
        schema97.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(objList93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test00328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00328");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        java.lang.String str18 = schema16.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        schema27.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.minItems((java.lang.Integer) 100);
        java.lang.String str32 = schema31.get$ref();
        java.lang.Boolean boolean33 = schema31.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema34.set$ref("no description");
        objSchema34.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList52 = objSchema44.getEnum();
        io.swagger.oas.models.media.Schema schema54 = objSchema44.name(",");
        objSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema34.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str58 = objSchema34.getType();
        io.swagger.oas.models.media.Schema schema60 = objSchema34.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = objSchema67.maxProperties((java.lang.Integer) 0);
        objSchema67.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema81 = objSchema67.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = objSchema67.type(",");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema67.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = objSchema67.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema60.additionalProperties(schema87);
        java.lang.String str89 = schema88.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema88.discriminator(discriminator90);
        io.swagger.oas.models.media.Schema schema92 = schema16.not(schema91);
        io.swagger.oas.models.media.Schema schema94 = schema16.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(objList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#/components/schemas/no description" + "'", str89, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test00329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00329");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        schema38.setNot((io.swagger.oas.models.media.Schema) objSchema39);
        io.swagger.oas.models.media.XML xML43 = objSchema39.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML43);
    }

    @Test
    public void test00330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00330");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        java.util.List<java.lang.String> strList20 = schema18.getRequired();
        io.swagger.oas.models.media.Schema schema22 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        schema22.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test00331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00331");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test00332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00332");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = schema32.title("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        java.util.List<java.lang.String> strList54 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema34.addProperties("", schema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal68 = null;
        objSchema67.setMultipleOf(bigDecimal68);
        objSchema67.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int77 = objSchema72.getMinLength();
        objSchema67.addEnumItemObject((java.lang.Object) objSchema72);
        objSchema72.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int81 = objSchema72.getMaxLength();
        schema63.addExtension("no description", (java.lang.Object) objSchema72);
        io.swagger.oas.models.media.Schema schema84 = schema63.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema63.getExtensions();
        schema55.setExtensions(strMap85);
        schema24.setExtensions(strMap85);
        io.swagger.oas.models.media.Schema schema88 = objSchema0.example((java.lang.Object) strMap85);
        io.swagger.oas.models.media.Schema schema89 = schema88.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean90 = schema89.getNullable();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(schema89);
    }

    @Test
    public void test00333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00333");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("hi!");
        java.lang.Object obj34 = schema33.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        java.util.List<java.lang.String> strList53 = schema51.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema33.addProperties("", schema51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int76 = objSchema71.getMinLength();
        objSchema66.addEnumItemObject((java.lang.Object) objSchema71);
        objSchema71.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int80 = objSchema71.getMaxLength();
        schema62.addExtension("no description", (java.lang.Object) objSchema71);
        io.swagger.oas.models.media.Schema schema83 = schema62.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = schema62.getExtensions();
        schema54.setExtensions(strMap84);
        schema23.setExtensions(strMap84);
        schema13.setExtensions(strMap84);
        java.lang.Object obj88 = new java.lang.Object();
        schema13.addEnumItemObject(obj88);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = schema13.getExternalDocs();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(externalDocumentation90);
    }

    @Test
    public void test00334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00334");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.lang.Boolean boolean11 = schema9.getWriteOnly();
        java.math.BigDecimal bigDecimal12 = schema9.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema9.setDiscriminator(discriminator13);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test00335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00335");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.maxProperties((java.lang.Integer) 10);
        objSchema0.setTitle("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.String str47 = objSchema42.getName();
        objSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList50 = objSchema42.getEnum();
        io.swagger.oas.models.media.Schema schema52 = objSchema42.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        io.swagger.oas.models.media.Schema schema55 = schema52.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setNot(schema52);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(objList50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test00336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00336");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema35 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        java.lang.String str38 = schema37.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test00337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00337");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean18 = objSchema0.getDeprecated();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test00338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00338");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        java.lang.Integer int7 = objSchema0.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test00339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00339");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList23 = objSchema15.getEnum();
        io.swagger.oas.models.media.Schema schema25 = objSchema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator26 = objSchema15.getDiscriminator();
        io.swagger.oas.models.media.Schema schema27 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML30 = null;
        schema29.setXml(xML30);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(objList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00340");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema4.maximum(bigDecimal15);
        java.lang.Integer int17 = objSchema4.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        objSchema18.set$ref("*/*");
        java.lang.Object obj30 = objSchema18.getExample();
        java.util.List<java.lang.Object> objList31 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema18.type(",");
        io.swagger.oas.models.media.Schema schema35 = objSchema18.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.exclusiveMinimum((java.lang.Boolean) true);
        objSchema4.setNot(schema35);
        objSchema4.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test00341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00341");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        java.lang.String str11 = schema7.toString();
        io.swagger.oas.models.media.Schema schema13 = schema7.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema7.setDiscriminator(discriminator14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00342");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        io.swagger.oas.models.media.XML xML11 = schema9.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema19.setRequired((java.util.List<java.lang.String>) strList31);
        schema9.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str35 = schema9.getPattern();
        schema9.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "no description" + "'", str35, "no description");
    }

    @Test
    public void test00343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00343");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.maxLength((java.lang.Integer) (-1));
        objSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test00344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00344");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = schema12.toString();
        io.swagger.oas.models.media.Schema schema23 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.String str24 = schema12.getPattern();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "no description" + "'", str24, "no description");
    }

    @Test
    public void test00345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00345");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        io.swagger.oas.models.media.Schema schema34 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema12.setExternalDocs(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test00346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00346");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean28 = schema25.getDeprecated();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test00347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00347");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema19.example((java.lang.Object) 1);
        io.swagger.oas.models.media.Schema schema33 = schema19.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal34 = schema33.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test00348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00348");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.xml(xML29);
        schema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema24.$ref("*/*");
        schema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema24.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema39.properties(strMap46);
        io.swagger.oas.models.media.Schema schema49 = schema47.type("");
        io.swagger.oas.models.media.Schema schema51 = schema49.title("*/*");
        io.swagger.oas.models.media.Schema schema53 = schema51.description(",");
        java.lang.String[] strArray56 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        io.swagger.oas.models.media.Schema schema59 = schema51.required((java.util.List<java.lang.String>) strList57);
        schema38.setRequired((java.util.List<java.lang.String>) strList57);
        schema14.setRequired((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema63 = schema14.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test00349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00349");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = objSchema5.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.addRequiredItem("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema16.getTitle();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test00350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00350");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Integer int24 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test00351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00351");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test00352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00352");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal5 = objSchema0.getMinimum();
        java.util.List<java.lang.Object> objList6 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        objSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema7.properties(strMap14);
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.minItems((java.lang.Integer) 100);
        java.lang.Integer int20 = schema19.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        io.swagger.oas.models.media.Schema schema30 = objSchema21.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal31 = schema30.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        schema30.addExtension("#/components/schemas/", (java.lang.Object) objSchema33);
        io.swagger.jaxrs2.OperationParser operationParser39 = new io.swagger.jaxrs2.OperationParser();
        schema30.addEnumItemObject((java.lang.Object) operationParser39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema48.getExtensions();
        io.swagger.oas.models.media.Schema schema51 = schema48.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema53 = schema48.exclusiveMaximum((java.lang.Boolean) false);
        schema30.setAdditionalProperties(schema48);
        schema19.setNot(schema48);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.String str61 = objSchema56.getName();
        objSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList64 = objSchema56.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = objSchema56.getExternalDocs();
        io.swagger.oas.models.media.Schema schema71 = objSchema56.title("*/*");
        java.lang.Boolean boolean72 = objSchema56.getExclusiveMinimum();
        objSchema56.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = objSchema56.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        objSchema56.setProperties(strMap77);
        objSchema56.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema82 = objSchema56.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal84 = null;
        objSchema83.setMultipleOf(bigDecimal84);
        java.lang.String[] strArray89 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        objSchema83.setRequired((java.util.List<java.lang.String>) strList90);
        objSchema56.setRequired((java.util.List<java.lang.String>) strList90);
        schema19.setRequired((java.util.List<java.lang.String>) strList90);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList90);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(objList6);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test00353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00353");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        objSchema4.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00354");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = schema32.title("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        java.util.List<java.lang.String> strList54 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema34.addProperties("", schema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal68 = null;
        objSchema67.setMultipleOf(bigDecimal68);
        objSchema67.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int77 = objSchema72.getMinLength();
        objSchema67.addEnumItemObject((java.lang.Object) objSchema72);
        objSchema72.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int81 = objSchema72.getMaxLength();
        schema63.addExtension("no description", (java.lang.Object) objSchema72);
        io.swagger.oas.models.media.Schema schema84 = schema63.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema63.getExtensions();
        schema55.setExtensions(strMap85);
        schema24.setExtensions(strMap85);
        io.swagger.oas.models.media.Schema schema88 = objSchema0.example((java.lang.Object) strMap85);
        io.swagger.oas.models.media.Schema schema89 = schema88.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = schema89.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(schema89);
    }

    @Test
    public void test00355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00355");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema32.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema31.properties(strMap61);
        objSchema12.setProperties(strMap61);
        java.lang.Boolean boolean65 = objSchema12.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean68 = objSchema67.getDeprecated();
        java.lang.Boolean boolean69 = objSchema67.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema77.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema77.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema81 = objSchema67.example((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema82 = objSchema12.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        objSchema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema85 = objSchema12.getNot();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(schema85);
    }

    @Test
    public void test00356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00356");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema7.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) true);
        schema29.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00357");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        objSchema0.setDiscriminator(discriminator11);
        java.lang.String str13 = objSchema0.getPattern();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "no description" + "'", str13, "no description");
    }

    @Test
    public void test00358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00358");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.maximum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema58.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test00359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00359");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator26 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema37.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("");
        io.swagger.oas.models.media.Schema schema48 = objSchema27.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema50 = objSchema27.readOnly((java.lang.Boolean) false);
        objSchema0.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema53 = schema50.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = objSchema54.title("hi!");
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema62.$ref("no description");
        schema62.setName("");
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema62.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema62.minimum(bigDecimal70);
        schema62.setUniqueItems((java.lang.Boolean) false);
        schema50.addEnumItemObject((java.lang.Object) schema62);
        schema62.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test00360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00360");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        schema19.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test00361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00361");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        java.lang.String str15 = schema10.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00362");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMinimum(bigDecimal28);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test00363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00363");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        java.lang.Integer int15 = schema9.getMinLength();
        java.util.List<java.lang.String> strList16 = schema9.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        java.lang.Integer int29 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.title("hi!");
        java.lang.Object obj40 = schema39.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        java.util.List<java.lang.String> strList59 = schema57.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema39.addProperties("", schema57);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal73 = null;
        objSchema72.setMultipleOf(bigDecimal73);
        objSchema72.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int82 = objSchema77.getMinLength();
        objSchema72.addEnumItemObject((java.lang.Object) objSchema77);
        objSchema77.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int86 = objSchema77.getMaxLength();
        schema68.addExtension("no description", (java.lang.Object) objSchema77);
        io.swagger.oas.models.media.Schema schema89 = schema68.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema68.getExtensions();
        schema60.setExtensions(strMap90);
        schema27.setExtensions(strMap90);
        schema9.setExtensions(strMap90);
        io.swagger.oas.models.media.Schema schema94 = schema9.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(schema94);
    }

    @Test
    public void test00364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00364");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        schema9.setTitle("hi!");
        java.lang.String str12 = schema9.toString();
        schema9.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00365");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = schema13.getTitle();
        java.util.List<java.lang.String> strList15 = schema13.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test00366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00366");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int19 = schema14.getMinItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema14.getProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test00367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00367");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator33 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator34 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean35 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        objSchema0.setExternalDocs(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
    }

    @Test
    public void test00368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00368");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema12.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema12.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test00369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00369");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        java.lang.String str33 = schema32.getName();
        schema32.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema32.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test00370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00370");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        java.lang.Integer int10 = objSchema4.getMinProperties();
        java.math.BigDecimal bigDecimal11 = objSchema4.getMultipleOf();
        objSchema4.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test00371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00371");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = schema74.getMultipleOf();
        java.lang.Integer int78 = schema74.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(int78);
    }

    @Test
    public void test00372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00372");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList19 = schema18.getRequired();
        java.lang.String str20 = schema18.getDescription();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "," + "'", str20, ",");
    }

    @Test
    public void test00373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00373");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        objSchema26.setExternalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema26.properties(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        objSchema51.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        objSchema51.setExternalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema65.xml(xML70);
        io.swagger.oas.models.media.Schema schema73 = schema65.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema73.getProperties();
        io.swagger.oas.models.media.Schema schema75 = objSchema51.properties(strMap74);
        schema50.setProperties(strMap74);
        io.swagger.oas.models.media.Schema schema77 = schema9.properties(strMap74);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        objSchema78.setReadOnly((java.lang.Boolean) false);
        objSchema78.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = null;
        io.swagger.oas.models.media.Schema schema86 = objSchema78.properties(strMap85);
        io.swagger.oas.models.media.Schema schema88 = schema86.type("");
        io.swagger.oas.models.media.Schema schema90 = schema88.title("*/*");
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema88.multipleOf(bigDecimal91);
        io.swagger.oas.models.media.Schema schema93 = schema9.additionalProperties(schema88);
        schema9.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test00374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00374");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema59.getExtensions();
        schema59.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema63.addProperties("*/*", schema69);
        io.swagger.oas.models.media.Schema schema72 = objSchema63.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal73 = schema72.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = schema72.getExternalDocs();
        schema72.setWriteOnly((java.lang.Boolean) true);
        schema59.addEnumItemObject((java.lang.Object) schema72);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal73);
        org.junit.Assert.assertNull(externalDocumentation74);
    }

    @Test
    public void test00375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00375");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema10.setExternalDocs(externalDocumentation32);
        java.math.BigDecimal bigDecimal34 = null;
        schema10.setMultipleOf(bigDecimal34);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00376");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMinimum(bigDecimal13);
        java.lang.String str15 = schema12.getType();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test00377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00377");
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema0 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
    }

    @Test
    public void test00378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00378");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema8.getExclusiveMinimum();
        schema8.setUniqueItems((java.lang.Boolean) false);
        schema8.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
    }

    @Test
    public void test00379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00379");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass15 = schema14.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00380");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema20.getProperties();
        io.swagger.oas.models.media.Schema schema25 = schema20.maxLength((java.lang.Integer) (-1));
        schema20.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00381");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema40.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema40.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = objSchema51.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = objSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.title("*/*");
        java.lang.Boolean boolean67 = objSchema51.getExclusiveMinimum();
        objSchema51.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = objSchema51.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        objSchema51.setProperties(strMap72);
        objSchema51.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = objSchema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        objSchema78.setRequired((java.util.List<java.lang.String>) strList85);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = objSchema40.required((java.util.List<java.lang.String>) strList85);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Discriminator discriminator91 = objSchema27.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(discriminator91);
    }

    @Test
    public void test00382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00382");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        objSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        objSchema5.setExternalDocs(externalDocumentation19);
        java.lang.Integer int21 = objSchema5.getMaxItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test00383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00383");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) true);
        objSchema0.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00384");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema14.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test00385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00385");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.title("hi!");
        java.lang.Object obj30 = schema29.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        java.util.List<java.lang.String> strList49 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema50 = schema29.addProperties("", schema47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int76 = objSchema67.getMaxLength();
        schema58.addExtension("no description", (java.lang.Object) objSchema67);
        io.swagger.oas.models.media.Schema schema79 = schema58.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema58.getExtensions();
        schema50.setExtensions(strMap80);
        schema13.setExtensions(strMap80);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema13.minimum(bigDecimal83);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test00386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00386");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = null;
        schema11.setAdditionalProperties(schema12);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00387");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.lang.Boolean boolean6 = objSchema0.getNullable();
        objSchema0.setNullable((java.lang.Boolean) true);
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test00388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00388");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList13 = schema10.getRequired();
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setType("");
        java.math.BigDecimal bigDecimal21 = objSchema16.getMaximum();
        java.lang.Boolean boolean22 = objSchema16.getExclusiveMinimum();
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema16);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema10.discriminator(discriminator28);
        io.swagger.oas.models.media.XML xML30 = schema29.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
    }

    @Test
    public void test00389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00389");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        schema7.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test00390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00390");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        java.lang.Boolean boolean2 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema4 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass5 = schema4.getClass();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test00391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00391");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        objSchema34.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema44 = schema33.required((java.util.List<java.lang.String>) strList41);
        java.lang.Boolean boolean45 = schema44.getUniqueItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test00392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00392");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.Integer int31 = schema30.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema30.setDiscriminator(discriminator32);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test00393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00393");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        java.lang.Integer int66 = schema65.getMaxItems();
        io.swagger.oas.models.media.Schema schema68 = schema65.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema65.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema71 = schema69.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(schema69);
    }

    @Test
    public void test00394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00394");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.setPattern("#/components/schemas/no description");
        java.lang.String str16 = schema13.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test00395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00395");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.externalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema23.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test00396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00396");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.$ref("#/components/schemas/no description");
        objSchema0.setMaxLength((java.lang.Integer) 1);
        java.lang.String str42 = objSchema0.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test00397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00397");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        java.lang.Object obj14 = schema13.getDefault();
        io.swagger.oas.models.media.Schema schema16 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean17 = schema16.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test00398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00398");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) (-1));
        java.lang.String str32 = schema29.getPattern();
        java.lang.Boolean boolean33 = schema29.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema29.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "no description" + "'", str32, "no description");
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test00399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00399");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema52 = objSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer int53 = schema52.getMinProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema52);
    }

    @Test
    public void test00400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00400");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        schema27.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setName("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test00401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00401");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setFormat(",");
        schema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int20 = schema9.getMinItems();
        java.lang.Integer int21 = schema9.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test00402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00402");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = schema12.getExternalDocs();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
    }

    @Test
    public void test00403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00403");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema24.getExtensions();
        schema7.setDefault((java.lang.Object) schema24);
        java.lang.Boolean boolean28 = schema24.getNullable();
        java.math.BigDecimal bigDecimal29 = null;
        schema24.setMultipleOf(bigDecimal29);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test00404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00404");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema11.getDiscriminator();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
    }

    @Test
    public void test00405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00405");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema14.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema14.setDiscriminator(discriminator16);
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test00406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00406");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.xml(xML8);
        java.lang.Integer int10 = schema9.getMinProperties();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test00407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00407");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator20 = schema19.getDiscriminator();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
    }

    @Test
    public void test00408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00408");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        schema14.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test00409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00409");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test00410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00410");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema7.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test00411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00411");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema9.setExternalDocs(externalDocumentation26);
        schema9.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test00412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00412");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxItems((java.lang.Integer) 1);
        schema9.setReadOnly((java.lang.Boolean) false);
        schema9.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema9.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test00413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00413");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str42 = schema39.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema39.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema39.setXml(xML45);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test00414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00414");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema8.getMinimum();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = bigDecimal11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test00415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00415");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = objSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = objSchema12.title("*/*");
        java.lang.Boolean boolean28 = objSchema12.getExclusiveMinimum();
        objSchema12.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = objSchema12.getUniqueItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema12.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema34.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = schema48.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema48.uniqueItems((java.lang.Boolean) true);
        schema33.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema53 = schema11.additionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema55 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str56 = schema11.getTitle();
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test00416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00416");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal22 = null;
        objSchema21.setMultipleOf(bigDecimal22);
        objSchema21.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        objSchema21.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        schema35.setTitle("*/*");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema35.xml(xML40);
        io.swagger.oas.models.media.Schema schema43 = schema35.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema43.getProperties();
        io.swagger.oas.models.media.Schema schema45 = objSchema21.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = objSchema21.format(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        objSchema48.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        objSchema48.setExternalDocs(externalDocumentation53);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema48.multipleOf(bigDecimal55);
        objSchema48.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema59.addProperties("*/*", schema65);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = schema66.getExtensions();
        io.swagger.oas.models.media.Schema schema69 = schema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.xml(xML70);
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.minimum(bigDecimal72);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        objSchema74.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema74.properties(strMap81);
        io.swagger.oas.models.media.Schema schema84 = schema82.type("");
        io.swagger.oas.models.media.Schema schema86 = schema84.title("*/*");
        io.swagger.oas.models.media.Schema schema88 = schema86.description(",");
        java.lang.String[] strArray91 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        io.swagger.oas.models.media.Schema schema94 = schema86.required((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema95 = schema69.required((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema96 = objSchema48.required((java.util.List<java.lang.String>) strList92);
        schema47.setRequired((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema98 = schema18.required((java.util.List<java.lang.String>) strList92);
        java.lang.Integer int99 = schema98.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(int99);
    }

    @Test
    public void test00417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00417");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.multipleOf(bigDecimal13);
        schema14.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        objSchema17.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema31.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema41 = objSchema17.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        schema41.setProperties(strMap65);
        java.lang.String str68 = schema41.getType();
        schema14.setNot(schema41);
        java.lang.Integer int70 = schema14.getMinProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test00418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00418");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        objSchema0.setMaxItems((java.lang.Integer) 10);
        java.lang.Object obj16 = objSchema0.getExample();
        java.lang.String str17 = objSchema0.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test00419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00419");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema28);
        java.lang.Boolean boolean35 = schema24.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.name(",");
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.XML xML58 = null;
        schema57.setXml(xML58);
        schema57.setTitle("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema57.xml(xML62);
        io.swagger.oas.models.media.Schema schema65 = schema57.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema67 = objSchema37.properties(strMap66);
        java.lang.Object obj68 = schema67.getDefault();
        io.swagger.oas.models.media.Schema schema69 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema24.getProperties();
        io.swagger.oas.models.media.Schema schema71 = schema15.properties(strMap70);
        java.lang.String str72 = schema71.getType();
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema71.xml(xML73);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        schema71.setExternalDocs(externalDocumentation75);
        schema71.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test00420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00420");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        java.lang.String str13 = schema12.getDescription();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test00421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00421");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        java.lang.String str13 = schema9.getType();
        io.swagger.oas.models.media.Schema schema15 = schema9.description("");
        java.lang.Boolean boolean16 = schema9.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test00422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00422");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema14.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test00423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00423");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) false);
        schema10.setDescription("hi!");
        java.lang.Boolean boolean15 = schema10.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test00424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00424");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema16.setDiscriminator(discriminator19);
        java.lang.String str21 = schema16.getTitle();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "*/*" + "'", str21, "*/*");
    }

    @Test
    public void test00425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00425");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        java.lang.Integer int19 = objSchema5.getMaxProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test00426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00426");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = objSchema5.getProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test00427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00427");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        io.swagger.oas.models.media.Schema schema66 = schema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.maximum(bigDecimal67);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test00428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00428");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema46.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        objSchema49.setProperties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = objSchema49.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = objSchema49.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.String str66 = objSchema61.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        objSchema61.setProperties(strMap67);
        io.swagger.oas.models.media.Schema schema70 = objSchema61.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = objSchema61.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int73 = objSchema61.getMaxItems();
        io.swagger.oas.models.media.Schema schema74 = objSchema49.additionalProperties((io.swagger.oas.models.media.Schema) objSchema61);
        schema46.setExample((java.lang.Object) objSchema49);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test00429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00429");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal21 = schema20.getMinimum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test00430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00430");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        io.swagger.oas.models.media.Schema schema25 = objSchema16.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = schema25.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema25.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema41 = schema25.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal68 = null;
        objSchema67.setMultipleOf(bigDecimal68);
        objSchema67.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        objSchema67.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema74.addProperties("*/*", schema80);
        io.swagger.oas.models.media.XML xML82 = null;
        schema81.setXml(xML82);
        schema81.setTitle("*/*");
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema81.xml(xML86);
        io.swagger.oas.models.media.Schema schema89 = schema81.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema91 = objSchema67.properties(strMap90);
        schema66.setProperties(strMap90);
        io.swagger.oas.models.media.Schema schema93 = schema25.properties(strMap90);
        schema10.setAdditionalProperties(schema25);
        java.lang.String str95 = schema25.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test00431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00431");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.Schema schema57 = schema41.writeOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList58 = schema41.getRequired();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strList58);
    }

    @Test
    public void test00432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00432");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setType(",");
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean24 = schema12.getWriteOnly();
        java.util.List<java.lang.String> strList25 = schema12.getRequired();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test00433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00433");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test00434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00434");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        objSchema66.setExternalDocs(externalDocumentation71);
        java.util.List<java.lang.Object> objList73 = objSchema66.getEnum();
        io.swagger.oas.models.media.Schema schema74 = objSchema5.not((io.swagger.oas.models.media.Schema) objSchema66);
        java.lang.Boolean boolean75 = schema74.getWriteOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(objList73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
    }

    @Test
    public void test00435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00435");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        objSchema5.setDiscriminator(discriminator66);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test00436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00436");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema55.title("hi!");
        java.lang.Object obj62 = null;
        objSchema55.addEnumItemObject(obj62);
        io.swagger.oas.models.media.Schema schema65 = objSchema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema55.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema52.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema77.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema77.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.xml(xML81);
        java.lang.Object obj83 = schema80.getDefault();
        schema52.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj83);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test00437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00437");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        java.lang.Class<?> wildcardClass56 = schema13.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test00438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00438");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = objSchema34.getMinLength();
        objSchema29.addEnumItemObject((java.lang.Object) objSchema34);
        objSchema34.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int43 = objSchema34.getMaxLength();
        schema25.addExtension("no description", (java.lang.Object) objSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema25.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema25.getExtensions();
        schema17.setExtensions(strMap47);
        schema17.setFormat("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema52 = schema17.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test00439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00439");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        objSchema0.setTitle("");
        java.lang.String str11 = objSchema0.get$ref();
        objSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test00440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00440");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        java.lang.Boolean boolean23 = schema22.getWriteOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test00441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00441");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema9.nullable((java.lang.Boolean) true);
        schema23.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList26 = schema23.getRequired();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
    }

    @Test
    public void test00442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00442");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.set$ref("#/components/schemas/");
        objSchema0.setNullable((java.lang.Boolean) false);
        objSchema0.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00443");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        schema10.setDescription("*/*");
        java.math.BigDecimal bigDecimal21 = null;
        schema10.setMultipleOf(bigDecimal21);
        schema10.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00444");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = objSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema15.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test00445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00445");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        java.lang.Object obj11 = null;
        objSchema0.addEnumItemObject(obj11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = schema24.getDefault();
        io.swagger.oas.models.media.XML xML26 = schema24.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema34.setRequired((java.util.List<java.lang.String>) strList46);
        schema24.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema14.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test00446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00446");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema55.title("hi!");
        java.lang.Object obj62 = null;
        objSchema55.addEnumItemObject(obj62);
        io.swagger.oas.models.media.Schema schema65 = objSchema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema55.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema52.additionalProperties(schema67);
        java.lang.String str69 = schema67.getName();
        schema67.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test00447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00447");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        io.swagger.oas.models.media.Schema schema60 = objSchema50.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal61 = null;
        objSchema50.setMultipleOf(bigDecimal61);
        java.lang.Boolean boolean63 = objSchema50.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema65 = objSchema50.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema7.addProperties("hi!", schema65);
        java.lang.Object obj67 = schema7.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test00448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00448");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test00449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00449");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema9.getExternalDocs();
        schema9.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.minItems((java.lang.Integer) 0);
        java.lang.String str16 = schema15.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test00450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00450");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        objSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        objSchema78.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema78.addProperties("*/*", schema84);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = schema85.getExtensions();
        io.swagger.oas.models.media.Schema schema88 = schema85.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema89 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema89.setPattern("no description");
        objSchema89.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int94 = objSchema89.getMinLength();
        schema85.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema89);
        java.lang.Boolean boolean96 = schema85.getNullable();
        java.lang.Boolean boolean97 = schema85.getUniqueItems();
        java.lang.String str98 = schema85.getName();
        objSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) str98);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int94);
        org.junit.Assert.assertNull(boolean96);
        org.junit.Assert.assertNull(boolean97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test00451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00451");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema40.pattern("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema31.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema49 = schema20.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.maximum(bigDecimal50);
        java.lang.Integer int52 = schema51.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test00452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00452");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema14.getNot();
        java.lang.Class<?> wildcardClass22 = schema14.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test00453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00453");
        io.swagger.oas.models.media.Schema<io.swagger.oas.models.media.Schema<java.lang.Object>> objSchemaSchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.models.media.Schema<java.lang.Object>>();
    }

    @Test
    public void test00454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00454");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref(",");
        io.swagger.oas.models.media.Schema schema12 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema8.getTitle();
        schema8.setMaxProperties((java.lang.Integer) 1);
        java.lang.Integer int16 = schema8.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test00455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00455");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.externalDocs(externalDocumentation10);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00456");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        objSchema27.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = objSchema27.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = schema33.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema33);
    }

    @Test
    public void test00457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00457");
        io.swagger.oas.models.media.Schema<io.swagger.jaxrs2.OperationParser> operationParserSchema0 = new io.swagger.oas.models.media.Schema<io.swagger.jaxrs2.OperationParser>();
    }

    @Test
    public void test00458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00458");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema10.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test00459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00459");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal7 = schema6.getMaximum();
        java.lang.String str8 = schema6.getFormat();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test00460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00460");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema8.getDeprecated();
        schema8.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test00461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00461");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema9.example(obj27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        java.math.BigDecimal bigDecimal34 = objSchema29.getMaximum();
        java.lang.Boolean boolean35 = objSchema29.getExclusiveMinimum();
        objSchema29.setExclusiveMinimum((java.lang.Boolean) true);
        schema9.setDefault((java.lang.Object) objSchema29);
        java.lang.Boolean boolean39 = schema9.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test00462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00462");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema10.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList57 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema59 = objSchema49.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema49.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = objSchema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.title("*/*");
        java.lang.Boolean boolean65 = objSchema49.getExclusiveMinimum();
        objSchema49.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = objSchema49.getUniqueItems();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema49.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.String str76 = objSchema71.getName();
        objSchema71.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList79 = objSchema71.getEnum();
        io.swagger.oas.models.media.Schema schema81 = objSchema71.name(",");
        objSchema71.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = objSchema71.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = schema85.getEnum();
        io.swagger.oas.models.media.Schema schema88 = schema85.uniqueItems((java.lang.Boolean) true);
        schema70.setAdditionalProperties(schema85);
        io.swagger.oas.models.media.Schema schema90 = schema48.additionalProperties(schema85);
        schema10.setNot(schema90);
        schema10.setReadOnly((java.lang.Boolean) true);
        schema10.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema97 = schema10.uniqueItems((java.lang.Boolean) true);
        schema10.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(objList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(objList79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test00463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00463");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        java.lang.Object obj14 = schema13.getExample();
        schema13.setMaxProperties((java.lang.Integer) 0);
        schema13.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test00464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00464");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML21 = null;
        objSchema0.setXml(xML21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema0.multipleOf(bigDecimal23);
        java.lang.String str25 = objSchema0.toString();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test00465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00465");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        schema52.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        schema52.setDiscriminator(discriminator59);
        io.swagger.oas.models.media.Schema schema62 = schema52.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test00466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00466");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMinProperties((java.lang.Integer) 1);
        schema8.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test00467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00467");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        objSchema18.addEnumItemObject((java.lang.Object) objSchema23);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = objSchema23.maxProperties((java.lang.Integer) 0);
        objSchema23.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal47 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        schema46.addExtension("#/components/schemas/", (java.lang.Object) objSchema49);
        io.swagger.jaxrs2.OperationParser operationParser55 = new io.swagger.jaxrs2.OperationParser();
        schema46.addEnumItemObject((java.lang.Object) operationParser55);
        io.swagger.oas.models.media.Schema schema57 = objSchema23.addProperties("no description", schema46);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema schema62 = objSchema5.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal64 = null;
        objSchema63.setMultipleOf(bigDecimal64);
        objSchema63.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema63.set$ref("no description");
        java.util.List<java.lang.Object> objList70 = objSchema63.getEnum();
        objSchema63.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema62.additionalProperties((io.swagger.oas.models.media.Schema) objSchema63);
        java.lang.String str74 = schema73.getType();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test00468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00468");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.xml(xML11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema12.getExtensions();
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test00469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00469");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema32.maxProperties((java.lang.Integer) 0);
        objSchema32.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = objSchema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema32.type(",");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema32.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema56.getEnum();
        java.lang.Boolean boolean64 = objSchema56.getWriteOnly();
        java.lang.Boolean boolean65 = objSchema56.getWriteOnly();
        boolean boolean66 = schema50.equals((java.lang.Object) objSchema56);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema56.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test00470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00470");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setMaxItems((java.lang.Integer) 100);
        schema7.setDeprecated((java.lang.Boolean) true);
        schema7.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test00471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00471");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal32 = schema29.getMultipleOf();
        schema29.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
    }

    @Test
    public void test00472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00472");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        objSchema8.addExtension("", (java.lang.Object) objSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema12.setExternalDocs(externalDocumentation18);
        java.lang.String str20 = objSchema12.getName();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.title(",");
        java.lang.Integer int27 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema30 = schema26.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        schema26.setMultipleOf(bigDecimal31);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test00473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00473");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        objSchema0.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = objSchema0.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator13 = objSchema0.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(discriminator13);
    }

    @Test
    public void test00474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00474");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema14.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.minimum(bigDecimal20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.lang.Integer int24 = schema23.getMinLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test00475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00475");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.setPattern("#/components/schemas/no description");
        java.lang.Boolean boolean16 = schema13.getUniqueItems();
        java.math.BigDecimal bigDecimal17 = schema13.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test00476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00476");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema40.getExtensions();
        schema23.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema44 = schema15.additionalProperties(schema23);
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        java.lang.String str46 = schema44.getFormat();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test00477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00477");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema18.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.name(",");
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema24.properties(strMap53);
        io.swagger.oas.models.media.Schema schema55 = schema23.properties(strMap53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema58.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.title("*/*");
        io.swagger.oas.models.media.Schema schema71 = schema55.example((java.lang.Object) schema70);
        java.lang.String str72 = schema70.getType();
        io.swagger.oas.models.media.Schema schema74 = schema70.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = schema9.example((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema77 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema9.description("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test00478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00478");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        java.math.BigDecimal bigDecimal57 = null;
        schema41.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema41.type("no description");
        java.lang.String str61 = schema60.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test00479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00479");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        java.lang.Object obj24 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMultipleOf(bigDecimal27);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test00480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00480");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        objSchema0.setDescription("");
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test00481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00481");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        java.lang.Integer int45 = schema44.getMaxLength();
        java.lang.Object obj46 = schema44.getDefault();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test00482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00482");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        java.lang.String str13 = schema10.getTitle();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test00483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00483");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        objSchema27.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = objSchema27.pattern("");
        io.swagger.oas.models.media.Schema schema35 = schema34.getNot();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
    }

    @Test
    public void test00484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00484");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema13.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = objSchema13.minItems((java.lang.Integer) 10);
        schema28.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test00485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00485");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Integer int24 = schema23.getMinLength();
        java.lang.String str25 = schema23.getPattern();
        schema23.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema23.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "no description" + "'", str25, "no description");
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test00486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00486");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = objSchema5.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = objSchema5.getExternalDocs();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
    }

    @Test
    public void test00487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00487");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = schema32.title("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        java.util.List<java.lang.String> strList54 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema34.addProperties("", schema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal68 = null;
        objSchema67.setMultipleOf(bigDecimal68);
        objSchema67.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int77 = objSchema72.getMinLength();
        objSchema67.addEnumItemObject((java.lang.Object) objSchema72);
        objSchema72.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int81 = objSchema72.getMaxLength();
        schema63.addExtension("no description", (java.lang.Object) objSchema72);
        io.swagger.oas.models.media.Schema schema84 = schema63.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema63.getExtensions();
        schema55.setExtensions(strMap85);
        schema24.setExtensions(strMap85);
        io.swagger.oas.models.media.Schema schema88 = objSchema0.example((java.lang.Object) strMap85);
        io.swagger.oas.models.media.Schema schema89 = schema88.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal90 = schema89.getMaximum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(schema89);
    }

    @Test
    public void test00488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00488");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        io.swagger.oas.models.media.Schema schema66 = schema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.String str72 = objSchema67.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        objSchema67.setProperties(strMap73);
        io.swagger.oas.models.media.Schema schema76 = objSchema67.deprecated((java.lang.Boolean) true);
        java.lang.Integer int77 = schema76.getMinProperties();
        schema76.setMaxLength((java.lang.Integer) 100);
        schema66.setExample((java.lang.Object) schema76);
        io.swagger.oas.models.media.Schema schema81 = schema66.getAdditionalProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(schema81);
    }

    @Test
    public void test00489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00489");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        objSchema31.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test00490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00490");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema40.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema40.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = objSchema51.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = objSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.title("*/*");
        java.lang.Boolean boolean67 = objSchema51.getExclusiveMinimum();
        objSchema51.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = objSchema51.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        objSchema51.setProperties(strMap72);
        objSchema51.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = objSchema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        objSchema78.setRequired((java.util.List<java.lang.String>) strList85);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = objSchema40.required((java.util.List<java.lang.String>) strList85);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList85);
        java.math.BigDecimal bigDecimal91 = null;
        objSchema27.setMinimum(bigDecimal91);
        io.swagger.oas.models.media.Schema schema93 = objSchema27.getAdditionalProperties();
        java.math.BigDecimal bigDecimal94 = objSchema27.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(schema93);
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test00491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00491");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        schema64.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test00492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00492");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        java.math.BigDecimal bigDecimal11 = schema9.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test00493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00493");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.addProperties("no description", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str17 = schema14.getName();
        java.math.BigDecimal bigDecimal18 = null;
        schema14.setMinimum(bigDecimal18);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test00494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00494");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.writeOnly((java.lang.Boolean) false);
        schema65.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema65.uniqueItems((java.lang.Boolean) false);
        schema65.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test00495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00495");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        objSchema8.addExtension("", (java.lang.Object) objSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema12.setExternalDocs(externalDocumentation18);
        java.lang.String str20 = objSchema12.getName();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.title(",");
        java.lang.Integer int27 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema30 = schema26.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        schema38.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = schema38.getNullable();
        schema30.setAdditionalProperties(schema38);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test00496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00496");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.minimum(bigDecimal21);
        schema22.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test00497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00497");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema8.getMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
    }

    @Test
    public void test00498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00498");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        schema52.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean59 = schema52.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema52.deprecated((java.lang.Boolean) false);
        java.lang.String str62 = schema61.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema63.addProperties("*/*", schema69);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = schema70.getExtensions();
        io.swagger.oas.models.media.Schema schema73 = schema70.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.xml(xML74);
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema73.xml(xML76);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema82.setPattern("no description");
        objSchema82.setReadOnly((java.lang.Boolean) false);
        objSchema78.addExtension("", (java.lang.Object) objSchema82);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = null;
        objSchema82.setExternalDocs(externalDocumentation88);
        io.swagger.oas.models.media.Schema schema91 = objSchema82.addRequiredItem(",");
        schema91.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj94 = schema91.getExample();
        java.util.List<java.lang.String> strList95 = schema91.getRequired();
        io.swagger.oas.models.media.Schema schema96 = schema77.required(strList95);
        io.swagger.oas.models.media.Schema schema97 = schema61.required(strList95);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str62, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test00499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00499");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test00500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00500");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.$ref("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        objSchema48.addExtension("", (java.lang.Object) objSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        objSchema52.setExternalDocs(externalDocumentation58);
        java.lang.String str60 = objSchema52.getName();
        io.swagger.oas.models.media.Schema schema62 = objSchema52.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema62.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema64.title(",");
        java.lang.Integer int67 = schema66.getMaxItems();
        io.swagger.oas.models.media.Schema schema68 = objSchema40.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema69 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema40);
        java.math.BigDecimal bigDecimal70 = null;
        schema69.setMaximum(bigDecimal70);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }
}

