import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test01001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01001");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setMaxItems((java.lang.Integer) (-1));
        java.lang.Object obj12 = schema9.getDefault();
        schema9.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test01002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01002");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        schema21.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema25);
        java.lang.Boolean boolean32 = schema21.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema34.properties(strMap63);
        java.lang.Object obj65 = schema64.getDefault();
        io.swagger.oas.models.media.Schema schema66 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema21.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema10.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema10.discriminator(discriminator69);
        java.lang.Boolean boolean71 = schema10.getReadOnly();
        io.swagger.oas.models.media.XML xML72 = null;
        schema10.setXml(xML72);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + false + "'", boolean71, false);
    }

    @Test
    public void test01003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01003");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        io.swagger.oas.annotations.Parameter parameter19 = null;
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.parameters.Parameter> parameterOptional21 = io.swagger.jaxrs2.OperationParser.getParameter(parameter19, components20);
        io.swagger.oas.models.media.Schema schema22 = schema18.example((java.lang.Object) parameterOptional21);
        schema22.setFormat("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema22.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass31 = schema30.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(parameterOptional21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test01004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01004");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema78 = schema74.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = schema78.$ref(",");
        java.lang.String str81 = schema80.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "no description" + "'", str81, "no description");
    }

    @Test
    public void test01005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01005");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        java.lang.Boolean boolean31 = schema30.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.Schema schema66 = objSchema57.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema57.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = objSchema57.deprecated((java.lang.Boolean) false);
        schema70.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema32.setNot(schema74);
        io.swagger.oas.models.media.Schema schema77 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema30.example((java.lang.Object) schema77);
        java.lang.String str79 = schema78.getDescription();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test01006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01006");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.maximum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema10.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
    }

    @Test
    public void test01007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01007");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML39 = null;
        schema26.setXml(xML39);
        java.lang.Integer int41 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal42 = null;
        schema26.setMaximum(bigDecimal42);
        java.lang.Object obj44 = schema26.getDefault();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test01008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01008");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        schema54.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01009");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema19.set$ref("no description");
        objSchema19.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema19.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str43 = objSchema19.getType();
        io.swagger.oas.models.media.Schema schema45 = objSchema19.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        io.swagger.oas.models.media.Schema schema56 = schema53.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema58 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        io.swagger.oas.models.media.Schema schema69 = objSchema59.name(",");
        objSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        io.swagger.oas.models.media.XML xML80 = null;
        schema79.setXml(xML80);
        schema79.setTitle("*/*");
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema79.xml(xML84);
        io.swagger.oas.models.media.Schema schema87 = schema79.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema87.getProperties();
        io.swagger.oas.models.media.Schema schema89 = objSchema59.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema58.properties(strMap88);
        objSchema19.setProperties(strMap88);
        io.swagger.oas.models.media.Schema schema92 = schema18.properties(strMap88);
        io.swagger.oas.models.media.Discriminator discriminator93 = schema92.getDiscriminator();
        java.lang.String str94 = schema92.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema92.externalDocs(externalDocumentation95);
        java.lang.String str97 = schema96.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(discriminator93);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test01010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01010");
        io.swagger.oas.models.media.Schema<java.lang.String[]> strArraySchema0 = new io.swagger.oas.models.media.Schema<java.lang.String[]>();
    }

    @Test
    public void test01011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01011");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema24.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test01012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01012");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01013");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        java.math.BigDecimal bigDecimal55 = objSchema50.getMaximum();
        objSchema50.setMinLength((java.lang.Integer) 0);
        objSchema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str61 = schema12.getName();
        io.swagger.oas.models.media.Schema schema63 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        java.lang.String str69 = objSchema64.getName();
        objSchema64.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema64.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = objSchema64.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = objSchema64.deprecated((java.lang.Boolean) true);
        schema12.setDefault((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test01014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01014");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema3.setPattern("no description");
        objSchema3.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = null;
        io.swagger.oas.models.media.Schema schema10 = objSchema3.addProperties("*/*", schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema14.getMinLength();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema14);
        schema10.setMinProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema10);
        java.lang.Boolean boolean26 = schema25.getDeprecated();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.maximum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.maximum(bigDecimal29);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01015");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        io.swagger.oas.models.media.Schema schema37 = schema32.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01016");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        java.math.BigDecimal bigDecimal25 = null;
        schema18.setMultipleOf(bigDecimal25);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test01017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01017");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01018");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        java.lang.Boolean boolean37 = objSchema31.getNullable();
        schema14.setExample((java.lang.Object) boolean37);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test01019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01019");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        java.lang.String str16 = schema12.toString();
        java.lang.String str17 = schema12.getTitle();
        java.lang.String str18 = schema12.getType();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "*/*" + "'", str17, "*/*");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test01020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01020");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("hi!");
        schema24.setMaxLength((java.lang.Integer) 10);
        objSchema0.setDefault((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal32 = null;
        objSchema0.setMinimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01021");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList21 = null;
        schema20.setRequired(strList21);
        java.lang.String str23 = schema20.getTitle();
        schema20.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01022");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = schema14.getMinimum();
        schema14.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test01023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01023");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setName("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01024");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Boolean boolean24 = schema18.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema18.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.maximum(bigDecimal27);
        schema28.setDescription("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01025");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        java.util.List<java.lang.Object> objList10 = objSchema0.getEnum();
        org.junit.Assert.assertNull(objList10);
    }

    @Test
    public void test01026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01026");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("");
        io.swagger.oas.models.media.Schema schema40 = schema36.description("");
        io.swagger.oas.models.media.Schema schema41 = objSchema0.example((java.lang.Object) schema36);
        java.lang.Integer int42 = schema41.getMinProperties();
        io.swagger.oas.models.media.Schema schema43 = null;
        schema41.setNot(schema43);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test01027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01027");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        objSchema0.setMinProperties((java.lang.Integer) 10);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = objSchema0.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test01028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01028");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        objSchema0.setMaximum(bigDecimal25);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01029");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        java.lang.String str10 = objSchema4.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01030");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01031");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema schema21 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = schema9.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01032");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        java.lang.Boolean boolean30 = objSchema14.getExclusiveMinimum();
        objSchema14.setNullable((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema34.properties(strMap63);
        java.lang.Object obj65 = schema64.getDefault();
        io.swagger.oas.models.media.Schema schema66 = objSchema14.additionalProperties(schema64);
        java.lang.String str67 = schema64.getType();
        schema64.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal71 = null;
        objSchema70.setMultipleOf(bigDecimal71);
        objSchema70.setType("");
        java.math.BigDecimal bigDecimal75 = objSchema70.getMaximum();
        io.swagger.oas.models.media.Schema schema77 = objSchema70.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int78 = objSchema70.getMinProperties();
        io.swagger.oas.models.media.Schema schema79 = schema64.not((io.swagger.oas.models.media.Schema) objSchema70);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema79);
        java.lang.String str81 = schema12.getPattern();
        java.util.List<java.lang.Object> objList82 = schema12.getEnum();
        java.lang.Object obj83 = schema12.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "no description" + "'", str81, "no description");
        org.junit.Assert.assertNull(objList82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test01033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01033");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        io.swagger.oas.models.media.Schema schema14 = schema11.minProperties((java.lang.Integer) 0);
        java.lang.String str15 = schema11.getName();
        java.lang.String str16 = schema11.getTitle();
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        objSchema19.setRequired((java.util.List<java.lang.String>) strList26);
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema19.getType();
        io.swagger.oas.models.media.Schema schema33 = objSchema19.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = objSchema34.addRequiredItem("#/components/schemas/");
        java.lang.Object obj44 = objSchema34.getDefault();
        io.swagger.oas.models.media.Schema schema46 = objSchema34.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema47.getNot();
        java.lang.Integer int53 = objSchema47.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int64 = objSchema59.getMinLength();
        objSchema54.addEnumItemObject((java.lang.Object) objSchema59);
        objSchema54.setMinProperties((java.lang.Integer) 100);
        objSchema54.setPattern("");
        java.math.BigDecimal bigDecimal70 = objSchema54.getMultipleOf();
        java.lang.String[] strArray88 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = objSchema54.required((java.util.List<java.lang.String>) strList89);
        java.util.List<java.lang.Object> objList92 = schema91.getEnum();
        objSchema47.setEnum(objList92);
        schema46.setEnum(objList92);
        schema33.setEnum(objList92);
        schema11.setEnum(objList92);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(objList92);
    }

    @Test
    public void test01034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01034");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj23 = schema13.getExample();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test01035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01035");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01036");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        objSchema16.addExtension("", (java.lang.Object) objSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        objSchema20.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.addRequiredItem(",");
        schema29.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema15.additionalProperties(schema29);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMaximum(bigDecimal34);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01037");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        schema14.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema14.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema37.minLength((java.lang.Integer) 0);
        java.lang.Integer int40 = schema37.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test01038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01038");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML14 = null;
        schema13.setXml(xML14);
        java.lang.Object obj16 = schema13.getDefault();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test01039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01039");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = objSchema0.getExclusiveMinimum();
        objSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema23 = objSchema0.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01040");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("hi!");
        java.lang.String[] strArray18 = new java.lang.String[] { "*/*", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray18);
        schema10.addExtension("hi!", (java.lang.Object) strArray18);
        java.lang.String str21 = schema10.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(tagSetOptional19);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01041");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = schema24.getDefault();
        io.swagger.oas.models.media.XML xML26 = schema24.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema34.setRequired((java.util.List<java.lang.String>) strList46);
        schema24.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema14.required((java.util.List<java.lang.String>) strList46);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema14.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal54 = null;
        objSchema53.setMultipleOf(bigDecimal54);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        objSchema53.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema64 = objSchema53.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = objSchema53.getExtensions();
        objSchema53.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML68 = objSchema53.getXml();
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        objSchema53.setDiscriminator(discriminator69);
        schema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema53);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(xML68);
    }

    @Test
    public void test01042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01042");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.Parameter[]> parameterArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.Parameter[]>();
    }

    @Test
    public void test01043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01043");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.xml(xML19);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal45 = null;
        schema41.setMinimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema41.maxLength((java.lang.Integer) 10);
        schema33.addEnumItemObject((java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.name("");
        io.swagger.oas.models.media.Schema schema53 = schema48.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = schema53.getExternalDocs();
        schema20.setAdditionalProperties(schema53);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation54);
    }

    @Test
    public void test01044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01044");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema32.maxProperties((java.lang.Integer) 0);
        objSchema32.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = objSchema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema32.type(",");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema32.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema57 = schema50.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema57.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema57.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test01045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01045");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        schema22.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01046");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        schema9.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema9.maxLength((java.lang.Integer) 100);
        schema14.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01047");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema13.setDiscriminator(discriminator16);
        schema13.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01048");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.minimum(bigDecimal21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema7.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
    }

    @Test
    public void test01049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01049");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        java.lang.Integer int31 = schema12.getMinProperties();
        java.lang.Integer int32 = schema12.getMinItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test01050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01050");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        java.lang.Integer int10 = objSchema4.getMinProperties();
        java.math.BigDecimal bigDecimal11 = objSchema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = objSchema12.getExternalDocs();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema12.xml(xML26);
        java.util.List<java.lang.Object> objList28 = objSchema12.getEnum();
        objSchema12.setUniqueItems((java.lang.Boolean) false);
        objSchema4.setExample((java.lang.Object) false);
        objSchema4.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(objList28);
    }

    @Test
    public void test01051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01051");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema55.title("hi!");
        java.lang.Object obj62 = null;
        objSchema55.addEnumItemObject(obj62);
        io.swagger.oas.models.media.Schema schema65 = objSchema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema55.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema52.additionalProperties(schema67);
        java.lang.Object obj69 = schema67.getDefault();
        io.swagger.oas.models.media.Schema schema71 = schema67.minLength((java.lang.Integer) 0);
        java.lang.String str72 = schema67.get$ref();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test01052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01052");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        io.swagger.oas.models.media.Schema schema66 = schema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema66.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        java.lang.String str75 = objSchema70.getName();
        objSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = objSchema70.addRequiredItem("#/components/schemas/");
        java.lang.Object obj80 = schema79.getDefault();
        schema79.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema84 = schema79.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal85 = null;
        schema79.setMultipleOf(bigDecimal85);
        io.swagger.oas.models.media.Schema schema87 = schema66.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test01053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01053");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = schema17.deprecated((java.lang.Boolean) true);
        schema17.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01054");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema12.setMultipleOf(bigDecimal13);
        objSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = objSchema12.title("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema20.$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean25 = schema24.getDeprecated();
        objSchema0.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema28 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.maximum(bigDecimal31);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01055");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = objSchema5.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        objSchema46.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema46.properties(strMap53);
        schema54.setExclusiveMinimum((java.lang.Boolean) true);
        schema44.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str58 = schema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema59.addProperties("*/*", schema65);
        io.swagger.oas.models.media.XML xML67 = null;
        schema66.setXml(xML67);
        schema66.setTitle("*/*");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        schema66.setRequired((java.util.List<java.lang.String>) strList78);
        schema44.setRequired((java.util.List<java.lang.String>) strList78);
        schema29.setRequired((java.util.List<java.lang.String>) strList78);
        schema29.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test01056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01056");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.multipleOf(bigDecimal26);
        java.lang.Integer int28 = schema27.getMaxLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test01057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01057");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.name(",");
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema23.properties(strMap52);
        io.swagger.oas.models.media.Schema schema54 = schema20.properties(strMap52);
        io.swagger.oas.models.media.Schema schema56 = schema20.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test01058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01058");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        java.lang.Integer int66 = schema65.getMinItems();
        java.lang.String str67 = schema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        java.lang.String str74 = objSchema69.getName();
        objSchema69.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList77 = objSchema69.getEnum();
        io.swagger.oas.models.media.Schema schema79 = objSchema69.name(",");
        objSchema69.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = objSchema69.deprecated((java.lang.Boolean) false);
        schema65.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema83);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(objList77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test01059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01059");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        schema12.setMaxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList15 = schema12.getRequired();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test01060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01060");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema19.example((java.lang.Object) 1);
        io.swagger.oas.models.media.Schema schema33 = schema19.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        io.swagger.oas.models.media.XML xML35 = schema33.getXml();
        java.lang.Boolean boolean36 = schema33.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(xML35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test01061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01061");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean26 = schema25.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test01062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01062");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.xml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.String str14 = objSchema9.getName();
        objSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList17 = objSchema9.getEnum();
        io.swagger.oas.models.media.Schema schema19 = objSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = objSchema9.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = objSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema24 = objSchema9.title("*/*");
        java.lang.Boolean boolean25 = objSchema9.getExclusiveMinimum();
        objSchema9.setNullable((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema9.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema59 = objSchema29.properties(strMap58);
        java.lang.Object obj60 = schema59.getDefault();
        io.swagger.oas.models.media.Schema schema61 = objSchema9.additionalProperties(schema59);
        java.lang.Boolean boolean62 = objSchema9.getNullable();
        boolean boolean64 = objSchema9.equals((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema9);
        java.lang.Integer int66 = schema65.getMaxItems();
        io.swagger.oas.models.media.Schema schema68 = schema65.title("hi!");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(objList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01063");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.Object obj11 = schema10.getDefault();
        io.swagger.oas.models.media.Schema schema13 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01064");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        schema15.setType(",");
        java.lang.Boolean boolean18 = schema15.getExclusiveMaximum();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01065");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        objSchema12.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = objSchema12.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema20.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test01066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01066");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema13.setExternalDocs(externalDocumentation17);
        java.util.List<java.lang.String> strList19 = schema13.getRequired();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test01067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01067");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01068");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        io.swagger.oas.models.media.Schema schema58 = schema25.exclusiveMaximum((java.lang.Boolean) false);
        schema58.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal61 = schema58.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema58.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNull(strMap62);
    }

    @Test
    public void test01069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01069");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01070");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        java.math.BigDecimal bigDecimal3 = null;
        objSchema0.setMinimum(bigDecimal3);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = objSchema0.getMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
    }

    @Test
    public void test01071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01071");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema24.properties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema32.type("");
        io.swagger.oas.models.media.Schema schema36 = schema32.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema38.$ref("");
        io.swagger.oas.models.media.Schema schema42 = schema38.description("");
        objSchema0.setExample((java.lang.Object) schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema0.xml(xML44);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        io.swagger.oas.models.media.Schema schema55 = objSchema46.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema46.xml(xML56);
        io.swagger.oas.models.media.Schema schema59 = objSchema46.deprecated((java.lang.Boolean) false);
        schema59.set$ref("*/*");
        io.swagger.oas.models.media.XML xML62 = null;
        schema59.setXml(xML62);
        schema59.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = objSchema66.title("hi!");
        io.swagger.oas.models.media.XML xML73 = objSchema66.getXml();
        io.swagger.oas.models.media.Schema schema74 = schema59.additionalProperties((io.swagger.oas.models.media.Schema) objSchema66);
        java.math.BigDecimal bigDecimal75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.multipleOf(bigDecimal75);
        objSchema0.addEnumItemObject((java.lang.Object) bigDecimal75);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(xML73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test01072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01072");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        java.lang.Integer int15 = schema14.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01073");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Object obj22 = schema21.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test01074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01074");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        objSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema6.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema31 = schema16.not(schema24);
        java.util.List<java.lang.Object> objList32 = schema24.getEnum();
        java.util.List<java.lang.String> strList33 = schema24.getRequired();
        io.swagger.oas.models.media.Schema schema34 = objSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema36 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema34.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
    }

    @Test
    public void test01075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01075");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        io.swagger.oas.models.media.Schema schema15 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setType("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01076");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema11.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.getAdditionalProperties();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema11.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        schema33.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema33.minItems((java.lang.Integer) (-1));
        java.lang.Object obj38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.example(obj38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema40.addProperties("*/*", schema46);
        io.swagger.oas.models.media.Schema schema49 = objSchema40.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal50 = schema49.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("*/*");
        io.swagger.oas.models.media.Schema schema63 = schema49.additionalProperties(schema58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = schema49.getProperties();
        io.swagger.oas.models.media.Schema schema65 = schema39.properties(strMap64);
        io.swagger.oas.models.media.Schema schema66 = objSchema11.properties(strMap64);
        objSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test01077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01077");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        java.lang.String str32 = schema30.getName();
        java.lang.String str33 = schema30.getType();
        io.swagger.oas.models.media.Schema schema35 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.String str48 = objSchema43.getName();
        objSchema43.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList51 = objSchema43.getEnum();
        io.swagger.oas.models.media.Schema schema53 = objSchema43.name(",");
        objSchema43.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema57 = objSchema43.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = schema57.getEnum();
        io.swagger.oas.models.media.Schema schema60 = schema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema36.additionalProperties(schema60);
        java.math.BigDecimal bigDecimal62 = objSchema36.getMultipleOf();
        io.swagger.oas.models.media.XML xML63 = null;
        objSchema36.setXml(xML63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        objSchema66.addExtension("", (java.lang.Object) objSchema70);
        io.swagger.oas.models.media.Schema schema77 = objSchema66.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        schema77.setProperties(strMap78);
        io.swagger.oas.models.media.Discriminator discriminator80 = schema77.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema81.setPattern("no description");
        objSchema81.setReadOnly((java.lang.Boolean) false);
        java.lang.String str86 = objSchema81.getName();
        objSchema81.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList89 = objSchema81.getEnum();
        io.swagger.oas.models.media.Schema schema91 = objSchema81.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator92 = objSchema81.getDiscriminator();
        io.swagger.oas.models.media.Schema schema93 = schema77.additionalProperties((io.swagger.oas.models.media.Schema) objSchema81);
        io.swagger.oas.models.media.Schema schema95 = schema93.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema96 = objSchema36.addProperties("hi!", schema93);
        io.swagger.oas.models.media.Discriminator discriminator97 = null;
        io.swagger.oas.models.media.Schema schema98 = objSchema36.discriminator(discriminator97);
        schema35.setNot(schema98);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "," + "'", str32, ",");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(objList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(discriminator80);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(objList89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(discriminator92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test01078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01078");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.maxLength((java.lang.Integer) (-1));
        objSchema0.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int19 = objSchema0.getMinProperties();
        objSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test01079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01079");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.XML xML8 = null;
        objSchema0.setXml(xML8);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test01080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01080");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = schema14.getMinimum();
        schema14.setType("no description");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.multipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema14.minLength((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass23 = schema22.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01081");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        schema12.setTitle("hi!");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema12.getDiscriminator();
        java.lang.Object obj16 = schema12.getDefault();
        schema12.setType(",");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test01082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01082");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = schema13.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01083");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setTitle(",");
        java.lang.Integer int15 = objSchema0.getMinLength();
        objSchema0.setType("#/components/schemas/");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01084");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList19 = schema18.getRequired();
        io.swagger.oas.models.media.Schema schema21 = schema18.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = schema21.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
    }

    @Test
    public void test01085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01085");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema9.addProperties("", schema27);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = objSchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema33.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = objSchema33.maxProperties((java.lang.Integer) 1);
        schema32.setExample((java.lang.Object) 1);
        schema32.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01086");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        objSchema12.setProperties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int24 = objSchema12.getMaxItems();
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = objSchema31.maxProperties((java.lang.Integer) 0);
        java.lang.String str42 = objSchema31.getType();
        java.lang.Object obj43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema31.example(obj43);
        boolean boolean45 = objSchema12.equals(obj43);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test01087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01087");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        java.util.List<java.lang.String> strList13 = schema9.getRequired();
        java.lang.String str14 = schema9.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test01088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01088");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        java.lang.Integer int15 = schema14.getMinLength();
        schema14.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01089");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema55.title("hi!");
        java.lang.Object obj62 = null;
        objSchema55.addEnumItemObject(obj62);
        io.swagger.oas.models.media.Schema schema65 = objSchema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema55.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema52.additionalProperties(schema67);
        schema52.setNullable((java.lang.Boolean) true);
        schema52.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01090");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        io.swagger.oas.models.media.Schema schema76 = schema74.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal77 = null;
        schema74.setMultipleOf(bigDecimal77);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test01091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01091");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema10.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01092");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema23.setType("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList26 = schema23.getRequired();
        io.swagger.oas.models.media.Schema schema28 = schema23.maxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema28.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test01093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01093");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema23);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        schema19.setType(",");
        io.swagger.oas.models.media.Schema schema35 = schema19.deprecated((java.lang.Boolean) false);
        java.lang.Integer int36 = schema19.getMaxProperties();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema19.xml(xML37);
        io.swagger.oas.models.media.Schema schema39 = objSchema4.additionalProperties(schema38);
        io.swagger.oas.models.media.Schema schema41 = schema38.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        schema41.setMultipleOf(bigDecimal42);
        java.lang.Integer int44 = schema41.getMaxItems();
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int44);
    }

    @Test
    public void test01094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01094");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) true);
        java.lang.String str17 = schema16.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01095");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.maximum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema56.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.additionalProperties(schema59);
        java.lang.Integer int61 = schema60.getMinLength();
        schema60.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema60.getExtensions();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(strMap64);
    }

    @Test
    public void test01096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01096");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema23.uniqueItems((java.lang.Boolean) false);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01097");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.lang.Boolean boolean10 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        java.lang.String str15 = schema12.toString();
        schema12.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema12.pattern("");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01098");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema21 = schema12.getNot();
        java.lang.String str22 = schema12.getPattern();
        java.lang.Boolean boolean23 = schema12.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.Schema schema35 = objSchema26.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal36 = schema35.getMinimum();
        java.math.BigDecimal bigDecimal37 = null;
        schema35.setMultipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.Schema schema48 = objSchema39.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema39.xml(xML49);
        java.math.BigDecimal bigDecimal51 = schema50.getMultipleOf();
        io.swagger.oas.models.media.Schema schema52 = schema35.additionalProperties(schema50);
        java.lang.Object obj53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema35.example(obj53);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setType("");
        java.math.BigDecimal bigDecimal60 = objSchema55.getMaximum();
        java.lang.Boolean boolean61 = objSchema55.getExclusiveMinimum();
        objSchema55.setExclusiveMinimum((java.lang.Boolean) true);
        schema35.setDefault((java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema schema66 = schema35.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.String str72 = objSchema67.getName();
        objSchema67.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList75 = objSchema67.getEnum();
        java.lang.Boolean boolean76 = objSchema67.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = null;
        objSchema67.setExtensions(strMap77);
        io.swagger.oas.models.media.Schema schema80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema67.addProperties("no description", schema80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = objSchema67.getProperties();
        schema66.setProperties(strMap82);
        schema25.setProperties(strMap82);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "no description" + "'", str22, "no description");
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(objList75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test01099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01099");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        schema7.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01100");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.String str12 = schema8.getName();
        schema8.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMaximum(bigDecimal15);
        java.lang.Object obj17 = schema8.getDefault();
        io.swagger.oas.models.media.XML xML18 = null;
        schema8.setXml(xML18);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test01101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01101");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema9.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = schema35.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = objSchema39.getMinLength();
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema39);
        java.lang.Boolean boolean46 = schema35.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.String str53 = objSchema48.getName();
        objSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList56 = objSchema48.getEnum();
        io.swagger.oas.models.media.Schema schema58 = objSchema48.name(",");
        objSchema48.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        schema68.setTitle("*/*");
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema68.xml(xML73);
        io.swagger.oas.models.media.Schema schema76 = schema68.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema76.getProperties();
        io.swagger.oas.models.media.Schema schema78 = objSchema48.properties(strMap77);
        java.lang.Object obj79 = schema78.getDefault();
        io.swagger.oas.models.media.Schema schema80 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema83 = schema35.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = schema9.not(schema83);
        io.swagger.oas.models.media.Schema schema86 = schema84.minLength((java.lang.Integer) (-1));
        schema84.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(objList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test01102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01102");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema13.setDiscriminator(discriminator16);
        schema13.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01103");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 100);
        schema7.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML24 = null;
        schema7.setXml(xML24);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test01104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01104");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        objSchema27.setProperties(strMap40);
        objSchema27.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test01105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01105");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.example(obj15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema26.additionalProperties(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema26.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema16.properties(strMap41);
        java.lang.Boolean boolean43 = schema16.getReadOnly();
        schema16.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
    }

    @Test
    public void test01106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01106");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML32 = null;
        schema8.setXml(xML32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        io.swagger.oas.models.media.Schema schema43 = objSchema34.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = schema43.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("*/*");
        io.swagger.oas.models.media.Schema schema57 = schema43.additionalProperties(schema52);
        java.lang.String str58 = schema52.getName();
        io.swagger.oas.models.media.Schema schema60 = schema52.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal62 = null;
        objSchema61.setMultipleOf(bigDecimal62);
        objSchema61.setType("");
        java.math.BigDecimal bigDecimal66 = objSchema61.getMaximum();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema61.setMultipleOf(bigDecimal67);
        java.math.BigDecimal bigDecimal69 = objSchema61.getMaximum();
        objSchema61.setDescription("*/*");
        schema60.setNot((io.swagger.oas.models.media.Schema) objSchema61);
        java.util.List<java.lang.String> strList73 = schema60.getRequired();
        java.lang.Integer int74 = schema60.getMaxProperties();
        boolean boolean75 = schema8.equals((java.lang.Object) schema60);
        schema8.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema79 = schema8.nullable((java.lang.Boolean) false);
        schema8.setTitle("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test01107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01107");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getNot();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema0.minimum(bigDecimal15);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01108");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = objSchema0.getNot();
        java.lang.Integer int6 = objSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema8 = objSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        objSchema0.setMaximum(bigDecimal9);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01109");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        schema18.setNot(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        objSchema37.setExternalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema37.multipleOf(bigDecimal44);
        objSchema37.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.xml(xML59);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.minimum(bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        objSchema63.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema63.properties(strMap70);
        io.swagger.oas.models.media.Schema schema73 = schema71.type("");
        io.swagger.oas.models.media.Schema schema75 = schema73.title("*/*");
        io.swagger.oas.models.media.Schema schema77 = schema75.description(",");
        java.lang.String[] strArray80 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        io.swagger.oas.models.media.Schema schema83 = schema75.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = schema58.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = objSchema37.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema18.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema88 = schema18.readOnly((java.lang.Boolean) false);
        java.lang.Object obj89 = schema18.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test01110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01110");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema60 = schema44.example((java.lang.Object) schema59);
        java.math.BigDecimal bigDecimal61 = schema59.getMinimum();
        io.swagger.oas.models.media.Schema schema63 = schema59.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema59.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = schema73.getExtensions();
        io.swagger.oas.models.media.Schema schema76 = schema73.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal77 = null;
        schema73.setMinimum(bigDecimal77);
        io.swagger.oas.models.media.Schema schema80 = schema73.maxLength((java.lang.Integer) 10);
        schema59.setDefault((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test01111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01111");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        objSchema5.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        io.swagger.oas.models.media.Schema schema25 = objSchema16.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = schema25.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        schema25.addExtension("#/components/schemas/", (java.lang.Object) objSchema28);
        io.swagger.jaxrs2.OperationParser operationParser34 = new io.swagger.jaxrs2.OperationParser();
        schema25.addEnumItemObject((java.lang.Object) operationParser34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        io.swagger.oas.models.media.Schema schema46 = schema43.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema48 = schema43.exclusiveMaximum((java.lang.Boolean) false);
        schema25.setAdditionalProperties(schema43);
        schema25.setWriteOnly((java.lang.Boolean) false);
        objSchema5.setDefault((java.lang.Object) false);
        java.math.BigDecimal bigDecimal53 = null;
        objSchema5.setMaximum(bigDecimal53);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01112");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        java.lang.Integer int27 = objSchema0.getMinProperties();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test01113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01113");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema40.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema40.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = objSchema51.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = objSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.title("*/*");
        java.lang.Boolean boolean67 = objSchema51.getExclusiveMinimum();
        objSchema51.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = objSchema51.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        objSchema51.setProperties(strMap72);
        objSchema51.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = objSchema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        objSchema78.setRequired((java.util.List<java.lang.String>) strList85);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = objSchema40.required((java.util.List<java.lang.String>) strList85);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList85);
        java.math.BigDecimal bigDecimal91 = null;
        objSchema27.setMinimum(bigDecimal91);
        objSchema27.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test01114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01114");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        objSchema0.setDefault((java.lang.Object) "*/*");
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        objSchema0.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.Schema schema35 = objSchema26.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal36 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema35.additionalProperties(schema44);
        java.lang.Integer int50 = schema49.getMinLength();
        java.lang.String str51 = schema49.getPattern();
        schema49.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = objSchema0.additionalProperties(schema49);
        schema49.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "no description" + "'", str51, "no description");
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01115");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        objSchema5.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema5.minimum(bigDecimal18);
        java.math.BigDecimal bigDecimal20 = objSchema5.getMaximum();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test01116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01116");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        java.lang.Object obj16 = schema7.getDefault();
        io.swagger.oas.models.media.Schema schema18 = schema7.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        schema18.setNot(schema33);
        schema18.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML39 = null;
        schema18.setXml(xML39);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01117");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema9.multipleOf(bigDecimal17);
        java.lang.String str19 = schema9.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01118");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema9.setExternalDocs(externalDocumentation18);
        java.lang.Class<?> wildcardClass20 = schema9.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01119");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema35 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal40 = null;
        objSchema39.setMultipleOf(bigDecimal40);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        objSchema39.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = schema37.example((java.lang.Object) objSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = objSchema50.title("hi!");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = schema56.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.maximum(bigDecimal61);
        schema37.setAdditionalProperties(schema56);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test01120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01120");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        java.lang.String str32 = schema30.getName();
        java.lang.String str33 = schema30.getType();
        io.swagger.oas.models.media.Schema schema35 = schema30.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList36 = schema35.getRequired();
        java.lang.String str37 = schema35.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "," + "'", str32, ",");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "," + "'", str37, ",");
    }

    @Test
    public void test01121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01121");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.String str69 = schema68.getName();
        java.lang.String str70 = schema68.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test01122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01122");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        objSchema12.setProperties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int24 = objSchema12.getMaxItems();
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema12);
        java.lang.String str26 = objSchema0.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema0.externalDocs(externalDocumentation27);
        java.lang.Class<?> wildcardClass29 = schema28.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test01123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01123");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        schema11.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01124");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        java.lang.String str32 = schema30.getName();
        java.lang.String str33 = schema30.getType();
        io.swagger.oas.models.media.Schema schema35 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema37.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = objSchema37.getExternalDocs();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema37.xml(xML51);
        java.lang.Boolean boolean53 = schema52.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = objSchema54.title("hi!");
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema60.minProperties((java.lang.Integer) (-1));
        schema52.setDefault((java.lang.Object) schema60);
        schema52.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.math.BigDecimal bigDecimal69 = null;
        schema52.setMultipleOf(bigDecimal69);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "," + "'", str32, ",");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01125");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        java.lang.String str35 = schema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema36.addExtension("", (java.lang.Object) objSchema40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        objSchema40.setExternalDocs(externalDocumentation46);
        java.lang.String str48 = objSchema40.getName();
        java.lang.Object obj49 = objSchema40.getDefault();
        io.swagger.oas.models.media.Schema schema51 = objSchema40.uniqueItems((java.lang.Boolean) false);
        schema51.setType(",");
        java.lang.Integer int54 = schema51.getMinItems();
        io.swagger.oas.models.media.Schema schema56 = schema51.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal57 = schema56.getMinimum();
        io.swagger.oas.models.media.Schema schema58 = schema7.not(schema56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        objSchema59.addExtension("", (java.lang.Object) objSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        objSchema69.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema69.properties(strMap76);
        io.swagger.oas.models.media.Schema schema79 = schema77.type("");
        io.swagger.oas.models.media.Schema schema80 = objSchema59.additionalProperties(schema77);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema81.setPattern("no description");
        objSchema81.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = null;
        io.swagger.oas.models.media.Schema schema88 = objSchema81.addProperties("*/*", schema87);
        io.swagger.oas.models.media.Schema schema90 = objSchema81.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML91 = null;
        io.swagger.oas.models.media.Schema schema92 = objSchema81.xml(xML91);
        io.swagger.oas.models.media.Schema schema94 = objSchema81.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal95 = objSchema81.getMultipleOf();
        objSchema81.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema98 = objSchema59.additionalProperties((io.swagger.oas.models.media.Schema) objSchema81);
        schema7.setExample((java.lang.Object) objSchema81);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(bigDecimal95);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test01126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01126");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = objSchema0.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01127");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.xml(xML18);
        java.lang.String str20 = schema19.get$ref();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01128");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        java.lang.Integer int13 = schema9.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test01129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01129");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.String str12 = objSchema7.getName();
        objSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = objSchema7.getEnum();
        io.swagger.oas.models.media.Schema schema17 = objSchema7.name(",");
        objSchema7.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema7.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties(schema24);
        java.math.BigDecimal bigDecimal26 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.XML xML27 = null;
        objSchema0.setXml(xML27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        objSchema30.addExtension("", (java.lang.Object) objSchema34);
        io.swagger.oas.models.media.Schema schema41 = objSchema30.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        schema41.setProperties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        java.lang.String str50 = objSchema45.getName();
        objSchema45.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList53 = objSchema45.getEnum();
        io.swagger.oas.models.media.Schema schema55 = objSchema45.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = objSchema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = schema41.additionalProperties((io.swagger.oas.models.media.Schema) objSchema45);
        io.swagger.oas.models.media.Schema schema59 = schema57.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = objSchema0.addProperties("hi!", schema57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema63 = objSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal64 = objSchema0.getMaximum();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(objList53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
    }

    @Test
    public void test01130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01130");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        java.lang.String str18 = schema16.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        schema27.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.minItems((java.lang.Integer) 100);
        java.lang.String str32 = schema31.get$ref();
        java.lang.Boolean boolean33 = schema31.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema34.set$ref("no description");
        objSchema34.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList52 = objSchema44.getEnum();
        io.swagger.oas.models.media.Schema schema54 = objSchema44.name(",");
        objSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema34.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str58 = objSchema34.getType();
        io.swagger.oas.models.media.Schema schema60 = objSchema34.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = objSchema67.maxProperties((java.lang.Integer) 0);
        objSchema67.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema81 = objSchema67.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = objSchema67.type(",");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema67.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = objSchema67.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema60.additionalProperties(schema87);
        java.lang.String str89 = schema88.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema88.discriminator(discriminator90);
        io.swagger.oas.models.media.Schema schema92 = schema16.not(schema91);
        io.swagger.oas.models.media.Schema schema94 = schema16.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal97 = null;
        schema16.setMinimum(bigDecimal97);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(objList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#/components/schemas/no description" + "'", str89, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test01131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01131");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema34.minLength((java.lang.Integer) 0);
        java.lang.Integer int37 = schema34.getMinProperties();
        java.lang.String str38 = schema34.get$ref();
        java.lang.String str39 = schema34.toString();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str39, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01132");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema37 = schema34.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01133");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal32 = schema29.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = schema29.minProperties((java.lang.Integer) 10);
        schema34.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01134");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema11.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = objSchema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = objSchema11.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Object obj23 = schema22.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test01135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01135");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.description("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("hi!");
        java.lang.Object obj42 = schema41.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        schema51.setXml(xML52);
        schema51.setTitle("*/*");
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema51.xml(xML56);
        io.swagger.oas.models.media.Schema schema59 = schema51.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = schema59.getProperties();
        java.util.List<java.lang.String> strList61 = schema59.getRequired();
        io.swagger.oas.models.media.Schema schema62 = schema41.addProperties("", schema59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema63.addProperties("*/*", schema69);
        io.swagger.oas.models.media.XML xML71 = null;
        schema70.setXml(xML71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal75 = null;
        objSchema74.setMultipleOf(bigDecimal75);
        objSchema74.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema79.setPattern("no description");
        objSchema79.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int84 = objSchema79.getMinLength();
        objSchema74.addEnumItemObject((java.lang.Object) objSchema79);
        objSchema79.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int88 = objSchema79.getMaxLength();
        schema70.addExtension("no description", (java.lang.Object) objSchema79);
        io.swagger.oas.models.media.Schema schema91 = schema70.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = schema70.getExtensions();
        schema62.setExtensions(strMap92);
        objSchema24.setExtensions(strMap92);
        java.math.BigDecimal bigDecimal95 = objSchema24.getMaximum();
        java.math.BigDecimal bigDecimal96 = null;
        io.swagger.oas.models.media.Schema schema97 = objSchema24.maximum(bigDecimal96);
        objSchema0.setExample((java.lang.Object) schema97);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(bigDecimal95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01136");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.lang.String str12 = schema9.toString();
        schema9.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        objSchema15.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.XML xML30 = null;
        schema29.setXml(xML30);
        schema29.setTitle("*/*");
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.xml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema29.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        io.swagger.oas.models.media.Schema schema39 = objSchema15.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal41 = null;
        objSchema40.setMultipleOf(bigDecimal41);
        objSchema40.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        objSchema40.setExternalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema40.properties(strMap63);
        schema39.setProperties(strMap63);
        io.swagger.oas.models.media.Schema schema67 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema67.title("");
        io.swagger.oas.models.media.Schema schema71 = schema69.type("");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = schema73.deprecated((java.lang.Boolean) true);
        boolean boolean76 = schema9.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test01137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01137");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.maximum(bigDecimal11);
        schema12.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01138");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = objSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        objSchema35.addExtension("", (java.lang.Object) objSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        objSchema39.setExternalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = objSchema39.addRequiredItem(",");
        schema48.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema48.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema54.type("#/components/schemas/");
        java.lang.String str57 = schema56.getFormat();
        schema34.setExample((java.lang.Object) schema56);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test01139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01139");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator48 = objSchema15.getDiscriminator();
        schema13.addExtension("*/*", (java.lang.Object) objSchema15);
        java.lang.Object obj50 = schema13.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = schema13.getProperties();
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str54 = schema13.getPattern();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "no description" + "'", str54, "no description");
    }

    @Test
    public void test01140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01140");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema0.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test01141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01141");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema8.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        java.lang.Boolean boolean21 = objSchema12.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        objSchema12.setExtensions(strMap22);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema12.addProperties("no description", schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = objSchema12.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = schema35.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal39 = null;
        schema35.setMinimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema35.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        objSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema44.properties(strMap51);
        schema52.setExclusiveMinimum((java.lang.Boolean) true);
        schema42.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str56 = schema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.XML xML65 = null;
        schema64.setXml(xML65);
        schema64.setTitle("*/*");
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema64.setRequired((java.util.List<java.lang.String>) strList76);
        schema42.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema80 = objSchema12.required((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema81 = schema8.required((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema83 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal84 = null;
        schema8.setMaximum(bigDecimal84);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test01142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01142");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        schema23.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema23.getExternalDocs();
        java.lang.Integer int39 = schema23.getMaxLength();
        io.swagger.oas.models.media.Schema schema40 = objSchema4.example((java.lang.Object) schema23);
        schema23.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = schema44.getExternalDocs();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
    }

    @Test
    public void test01143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01143");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema0.externalDocs(externalDocumentation30);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01144");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        objSchema0.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01145");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        schema16.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01146");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        schema18.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema18.multipleOf(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema18.minimum(bigDecimal27);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01147");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        objSchema69.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = null;
        io.swagger.oas.models.media.Schema schema76 = objSchema69.addProperties("*/*", schema75);
        io.swagger.oas.models.media.Schema schema78 = schema76.title("hi!");
        io.swagger.oas.models.media.Schema schema80 = schema78.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal81 = null;
        schema80.setMaximum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = schema80.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema86 = schema80.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int87 = schema86.getMinItems();
        schema14.setNot(schema86);
        java.lang.String str89 = schema86.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test01148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01148");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal5 = objSchema0.getMinimum();
        java.util.List<java.lang.Object> objList6 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal8 = null;
        objSchema7.setMultipleOf(bigDecimal8);
        objSchema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = objSchema12.getMinLength();
        objSchema7.addEnumItemObject((java.lang.Object) objSchema12);
        objSchema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int21 = objSchema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = objSchema12.maxLength((java.lang.Integer) 100);
        objSchema0.setAdditionalProperties(schema23);
        schema23.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(objList6);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01149");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        schema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema32.title("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.description(",");
        java.lang.String[] strArray39 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema34.required((java.util.List<java.lang.String>) strList40);
        schema21.setRequired((java.util.List<java.lang.String>) strList40);
        schema21.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test01150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01150");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema10.getProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.addRequiredItem("#/components/schemas/");
        schema23.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        schema34.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema23.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.nullable((java.lang.Boolean) false);
        schema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        objSchema48.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = objSchema53.getMinLength();
        objSchema48.addEnumItemObject((java.lang.Object) objSchema53);
        objSchema53.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int62 = objSchema53.getMaxLength();
        io.swagger.oas.models.media.Schema schema64 = objSchema53.maxLength((java.lang.Integer) 100);
        schema45.setNot((io.swagger.oas.models.media.Schema) objSchema53);
        schema13.addEnumItemObject((java.lang.Object) schema45);
        java.lang.Boolean boolean67 = schema45.getReadOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + false + "'", boolean67, false);
    }

    @Test
    public void test01151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01151");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01152");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.Integer int43 = schema39.getMinLength();
        java.lang.String str44 = schema39.get$ref();
        java.lang.Integer int45 = schema39.getMinProperties();
        java.lang.String str46 = schema39.getType();
        io.swagger.oas.models.media.Schema schema48 = schema39.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean49 = schema39.getUniqueItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test01153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01153");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        java.lang.String str23 = schema12.getDescription();
        schema12.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "," + "'", str23, ",");
    }

    @Test
    public void test01154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01154");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int34 = schema8.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test01155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01155");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        schema18.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01156");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.writeOnly((java.lang.Boolean) false);
        schema65.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema65.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int72 = schema65.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
    }

    @Test
    public void test01157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01157");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = schema8.pattern("*/*");
        schema8.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML17 = schema8.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test01158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01158");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        objSchema0.setPattern("*/*");
        java.lang.Object obj10 = null;
        boolean boolean11 = objSchema0.equals(obj10);
        java.math.BigDecimal bigDecimal12 = objSchema0.getMultipleOf();
        objSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test01159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01159");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = objSchema4.getExclusiveMinimum();
        java.lang.Integer int17 = objSchema4.getMinLength();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test01160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01160");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int17 = schema16.getMinItems();
        schema16.setNullable((java.lang.Boolean) false);
        java.lang.String str20 = schema16.getName();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01161");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        objSchema18.addEnumItemObject((java.lang.Object) objSchema23);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = objSchema23.maxProperties((java.lang.Integer) 0);
        objSchema23.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal47 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        schema46.addExtension("#/components/schemas/", (java.lang.Object) objSchema49);
        io.swagger.jaxrs2.OperationParser operationParser55 = new io.swagger.jaxrs2.OperationParser();
        schema46.addEnumItemObject((java.lang.Object) operationParser55);
        io.swagger.oas.models.media.Schema schema57 = objSchema23.addProperties("no description", schema46);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema schema62 = objSchema5.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal64 = null;
        objSchema63.setMultipleOf(bigDecimal64);
        objSchema63.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema63.set$ref("no description");
        java.util.List<java.lang.Object> objList70 = objSchema63.getEnum();
        objSchema63.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema62.additionalProperties((io.swagger.oas.models.media.Schema) objSchema63);
        java.lang.Integer int74 = schema62.getMinProperties();
        io.swagger.oas.models.media.Schema schema76 = schema62.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test01162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01162");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema13.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal25 = schema13.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema13.setDiscriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test01163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01163");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getTitle();
        io.swagger.oas.models.media.XML xML19 = null;
        schema17.setXml(xML19);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01164");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj25 = objSchema0.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test01165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01165");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        io.swagger.oas.models.media.Schema schema67 = schema64.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = schema67.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal70 = schema69.getMultipleOf();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
    }

    @Test
    public void test01166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01166");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        schema8.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01167");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMultipleOf();
        java.lang.Integer int9 = objSchema0.getMaxProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test01168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01168");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.xml(xML18);
        io.swagger.oas.models.media.Schema schema20 = null;
        schema19.setAdditionalProperties(schema20);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01169");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) (-1));
        schema31.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = schema31.getMinProperties();
        schema31.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema31.maximum(bigDecimal37);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test01170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01170");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        objSchema23.addEnumItemObject((java.lang.Object) objSchema28);
        objSchema28.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = objSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema28.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        objSchema41.addEnumItemObject((java.lang.Object) objSchema46);
        objSchema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = objSchema46.maxProperties((java.lang.Integer) 0);
        objSchema46.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.Schema schema69 = objSchema60.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal70 = schema69.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        schema69.addExtension("#/components/schemas/", (java.lang.Object) objSchema72);
        io.swagger.jaxrs2.OperationParser operationParser78 = new io.swagger.jaxrs2.OperationParser();
        schema69.addEnumItemObject((java.lang.Object) operationParser78);
        io.swagger.oas.models.media.Schema schema80 = objSchema46.addProperties("no description", schema69);
        schema80.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema85 = objSchema28.example((java.lang.Object) schema84);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema86 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal87 = null;
        objSchema86.setMultipleOf(bigDecimal87);
        objSchema86.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema86.set$ref("no description");
        java.util.List<java.lang.Object> objList93 = objSchema86.getEnum();
        objSchema86.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema96 = schema85.additionalProperties((io.swagger.oas.models.media.Schema) objSchema86);
        java.math.BigDecimal bigDecimal97 = objSchema86.getMaximum();
        io.swagger.oas.models.media.Schema schema98 = schema22.not((io.swagger.oas.models.media.Schema) objSchema86);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation99 = objSchema86.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(objList93);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(bigDecimal97);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(externalDocumentation99);
    }

    @Test
    public void test01171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01171");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        java.lang.String str18 = schema16.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        schema27.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.minItems((java.lang.Integer) 100);
        java.lang.String str32 = schema31.get$ref();
        java.lang.Boolean boolean33 = schema31.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema34.set$ref("no description");
        objSchema34.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.String str49 = objSchema44.getName();
        objSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList52 = objSchema44.getEnum();
        io.swagger.oas.models.media.Schema schema54 = objSchema44.name(",");
        objSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema34.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str58 = objSchema34.getType();
        io.swagger.oas.models.media.Schema schema60 = objSchema34.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = objSchema67.maxProperties((java.lang.Integer) 0);
        objSchema67.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema81 = objSchema67.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = objSchema67.type(",");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema67.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = objSchema67.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema60.additionalProperties(schema87);
        java.lang.String str89 = schema88.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema88.discriminator(discriminator90);
        io.swagger.oas.models.media.Schema schema92 = schema16.not(schema91);
        io.swagger.oas.models.media.Schema schema94 = schema16.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(objList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#/components/schemas/no description" + "'", str89, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test01172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01172");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema58 = schema41.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema60.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema61.setReadOnly((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(schema61);
    }

    @Test
    public void test01173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01173");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setType(",");
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema12.minItems((java.lang.Integer) 10);
        java.lang.String str26 = schema12.getPattern();
        java.lang.String str27 = schema12.get$ref();
        java.lang.Object obj28 = schema12.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "no description" + "'", str26, "no description");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test01174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01174");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        java.lang.Boolean boolean18 = schema17.getNullable();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01175");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        schema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01176");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        objSchema0.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema18.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        objSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema26.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.title("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema38.description(",");
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        io.swagger.oas.models.media.Schema schema46 = schema38.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = schema21.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema48 = objSchema0.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        schema48.setDiscriminator(discriminator49);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema schema60 = objSchema51.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal61 = schema60.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        io.swagger.oas.models.media.XML xML70 = null;
        schema69.setXml(xML70);
        io.swagger.oas.models.media.Schema schema73 = schema69.pattern("*/*");
        io.swagger.oas.models.media.Schema schema74 = schema60.additionalProperties(schema69);
        java.lang.Integer int75 = schema74.getMinLength();
        io.swagger.oas.models.media.Schema schema77 = schema74.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema79 = schema74.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema48.additionalProperties(schema74);
        java.lang.String str81 = schema80.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        schema80.setExternalDocs(externalDocumentation82);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test01177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01177");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal5 = objSchema0.getMinimum();
        java.lang.Boolean boolean6 = objSchema0.getNullable();
        java.lang.String str7 = objSchema0.getType();
        java.lang.Integer int8 = objSchema0.getMinProperties();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test01178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01178");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        schema23.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean28 = schema23.getUniqueItems();
        schema23.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test01179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01179");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean30 = objSchema29.getDeprecated();
        java.lang.Boolean boolean31 = objSchema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = objSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema27.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean43 = schema40.getUniqueItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
    }

    @Test
    public void test01180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01180");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        java.lang.Integer int15 = schema9.getMinLength();
        java.util.List<java.lang.String> strList16 = schema9.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        java.lang.Integer int29 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.title("hi!");
        java.lang.Object obj40 = schema39.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        java.util.List<java.lang.String> strList59 = schema57.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema39.addProperties("", schema57);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal73 = null;
        objSchema72.setMultipleOf(bigDecimal73);
        objSchema72.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int82 = objSchema77.getMinLength();
        objSchema72.addEnumItemObject((java.lang.Object) objSchema77);
        objSchema77.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int86 = objSchema77.getMaxLength();
        schema68.addExtension("no description", (java.lang.Object) objSchema77);
        io.swagger.oas.models.media.Schema schema89 = schema68.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema68.getExtensions();
        schema60.setExtensions(strMap90);
        schema27.setExtensions(strMap90);
        schema9.setExtensions(strMap90);
        schema9.setDeprecated((java.lang.Boolean) false);
        java.lang.Integer int96 = schema9.getMaxProperties();
        schema9.setMinProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean99 = schema9.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(int96);
        org.junit.Assert.assertNull(boolean99);
    }

    @Test
    public void test01181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01181");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal19 = objSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test01182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01182");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        java.lang.String str12 = objSchema0.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.addRequiredItem("#/components/schemas/");
        schema22.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator25 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema22.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.Schema schema54 = objSchema45.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal55 = schema54.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.XML xML64 = null;
        schema63.setXml(xML64);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("*/*");
        io.swagger.oas.models.media.Schema schema68 = schema54.additionalProperties(schema63);
        schema42.addEnumItemObject((java.lang.Object) schema54);
        io.swagger.oas.models.media.Schema schema71 = schema54.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = objSchema0.not(schema71);
        schema71.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal75 = null;
        schema71.setMaximum(bigDecimal75);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "no description" + "'", str12, "no description");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test01183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01183");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        schema27.setDiscriminator(discriminator28);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01184");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = objSchema5.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setType("");
        java.math.BigDecimal bigDecimal20 = objSchema15.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = objSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = objSchema34.title("*/*");
        java.lang.Boolean boolean50 = objSchema34.getExclusiveMinimum();
        objSchema34.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = objSchema34.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        objSchema34.setProperties(strMap55);
        objSchema34.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = objSchema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal62 = null;
        objSchema61.setMultipleOf(bigDecimal62);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        objSchema61.setRequired((java.util.List<java.lang.String>) strList68);
        objSchema34.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = objSchema23.required((java.util.List<java.lang.String>) strList68);
        objSchema15.setRequired((java.util.List<java.lang.String>) strList68);
        objSchema5.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema75 = objSchema5.getNot();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema75);
    }

    @Test
    public void test01185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01185");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01186");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        objSchema0.setMultipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minLength((java.lang.Integer) 10);
        schema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test01187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01187");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        objSchema18.setRequired((java.util.List<java.lang.String>) strList25);
        objSchema18.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = objSchema18.getExclusiveMinimum();
        schema13.addEnumItemObject((java.lang.Object) boolean30);
        io.swagger.oas.models.media.Schema schema33 = schema13.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema34.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = schema42.type("");
        io.swagger.oas.models.media.Schema schema46 = schema44.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema57 = schema54.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal58 = null;
        schema54.setMinimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = schema54.maxLength((java.lang.Integer) 10);
        schema46.addEnumItemObject((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema64 = schema61.name("");
        java.lang.Boolean boolean65 = schema64.getReadOnly();
        schema64.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str68 = schema64.getPattern();
        schema33.addEnumItemObject((java.lang.Object) str68);
        java.lang.Boolean boolean70 = schema33.getDeprecated();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "no description" + "'", str68, "no description");
        org.junit.Assert.assertNull(boolean70);
    }

    @Test
    public void test01188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01188");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.String str27 = objSchema22.getName();
        objSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema22.getEnum();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) false);
        schema32.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str35 = schema32.get$ref();
        io.swagger.oas.models.media.Schema schema37 = schema32.maxProperties((java.lang.Integer) 1);
        java.lang.String str38 = schema37.toString();
        schema37.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean41 = schema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = schema37.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema21.not(schema37);
        io.swagger.oas.models.media.XML xML45 = schema37.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str38, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
    }

    @Test
    public void test01189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01189");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal9 = null;
        objSchema8.setMultipleOf(bigDecimal9);
        objSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema8.set$ref("no description");
        objSchema8.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.name(",");
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema8.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str32 = objSchema8.getType();
        io.swagger.oas.models.media.Schema schema34 = objSchema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = objSchema35.getName();
        objSchema35.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList43 = objSchema35.getEnum();
        io.swagger.oas.models.media.Schema schema45 = objSchema35.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = objSchema35.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = objSchema35.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema63.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = schema63.addRequiredItem("#/components/schemas/");
        objSchema50.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = objSchema35.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema50);
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 1);
        schema68.setDeprecated((java.lang.Boolean) false);
        java.lang.String str73 = schema68.getType();
        objSchema8.addEnumItemObject((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema75 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema8);
        java.lang.Integer int76 = objSchema0.getMinLength();
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(objList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test01190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01190");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.Boolean boolean69 = schema14.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test01191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01191");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        java.lang.String str16 = schema15.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01192");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        io.swagger.oas.models.media.Schema schema22 = schema9.getNot();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test01193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01193");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML17 = objSchema5.getXml();
        io.swagger.oas.models.media.Schema schema18 = objSchema5.getAdditionalProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test01194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01194");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        java.lang.Integer int42 = schema40.getMinItems();
        schema40.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test01195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01195");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema22.getExternalDocs();
        schema22.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
    }

    @Test
    public void test01196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01196");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML30 = schema27.getXml();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
    }

    @Test
    public void test01197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01197");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        objSchema0.setMinItems((java.lang.Integer) (-1));
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema0.maximum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = objSchema0.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01198");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = objSchema21.getMinLength();
        objSchema16.addEnumItemObject((java.lang.Object) objSchema21);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = objSchema21.maxProperties((java.lang.Integer) 0);
        objSchema21.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema35 = objSchema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = objSchema21.type(",");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        java.lang.Integer int39 = schema37.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema10.example((java.lang.Object) schema37);
        java.lang.Boolean boolean41 = schema37.getUniqueItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test01199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01199");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal8 = null;
        objSchema0.setMultipleOf(bigDecimal8);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test01200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01200");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.externalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01201");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema19.set$ref("no description");
        objSchema19.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.name(",");
        objSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema19.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str43 = objSchema19.getType();
        io.swagger.oas.models.media.Schema schema45 = objSchema19.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        io.swagger.oas.models.media.Schema schema56 = schema53.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema58 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        io.swagger.oas.models.media.Schema schema69 = objSchema59.name(",");
        objSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        io.swagger.oas.models.media.XML xML80 = null;
        schema79.setXml(xML80);
        schema79.setTitle("*/*");
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema79.xml(xML84);
        io.swagger.oas.models.media.Schema schema87 = schema79.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema87.getProperties();
        io.swagger.oas.models.media.Schema schema89 = objSchema59.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema58.properties(strMap88);
        objSchema19.setProperties(strMap88);
        io.swagger.oas.models.media.Schema schema92 = schema18.properties(strMap88);
        io.swagger.oas.models.media.Discriminator discriminator93 = schema92.getDiscriminator();
        schema92.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema97 = schema92.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(discriminator93);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01202");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.util.List<java.lang.Object> objList43 = schema39.getEnum();
        io.swagger.oas.models.media.Schema schema45 = schema39.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(objList43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01203");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setName("#/components/schemas/");
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01204");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        java.lang.Boolean boolean18 = schema16.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01205");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.addRequiredItem("#/components/schemas/");
        java.lang.Object obj28 = schema27.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema27.getExtensions();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema39.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = objSchema43.getMinLength();
        schema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema43);
        java.lang.Boolean boolean50 = schema39.getNullable();
        io.swagger.oas.models.media.Schema schema52 = schema39.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema27.additionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema54 = objSchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        java.math.BigDecimal bigDecimal55 = schema54.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        objSchema56.setExternalDocs(externalDocumentation61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema56.multipleOf(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema65.addProperties("*/*", schema71);
        io.swagger.oas.models.media.XML xML73 = null;
        schema72.setXml(xML73);
        schema72.setTitle("*/*");
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema72.xml(xML77);
        java.lang.Boolean boolean79 = schema72.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema80 = schema64.example((java.lang.Object) boolean79);
        java.math.BigDecimal bigDecimal81 = schema64.getMaximum();
        io.swagger.oas.models.media.Schema schema82 = schema54.not(schema64);
        java.lang.String str83 = schema54.getTitle();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test01206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01206");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema23.setXml(xML26);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01207");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.String str11 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema10.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema10.format("no description");
        schema15.setFormat("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.discriminator(discriminator31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = objSchema38.getMinLength();
        objSchema33.addEnumItemObject((java.lang.Object) objSchema38);
        objSchema33.setMinProperties((java.lang.Integer) 100);
        objSchema33.setPattern("");
        java.math.BigDecimal bigDecimal49 = objSchema33.getMultipleOf();
        java.lang.String[] strArray67 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        io.swagger.oas.models.media.Schema schema70 = objSchema33.required((java.util.List<java.lang.String>) strList68);
        schema32.setRequired((java.util.List<java.lang.String>) strList68);
        schema15.setRequired((java.util.List<java.lang.String>) strList68);
        java.lang.String str73 = schema15.getPattern();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "no description" + "'", str73, "no description");
    }

    @Test
    public void test01208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01208");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        objSchema4.setFormat("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01209");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        schema33.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int38 = schema33.getMinLength();
        schema33.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test01210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01210");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.String str27 = objSchema22.getName();
        objSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema22.getEnum();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.name(",");
        objSchema22.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = objSchema22.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema39 = schema36.uniqueItems((java.lang.Boolean) true);
        schema21.setAdditionalProperties(schema36);
        schema36.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema36.setMinProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList45 = schema36.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test01211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01211");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal22 = null;
        schema7.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema7.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML26 = schema25.getXml();
        java.lang.String str27 = schema25.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test01212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01212");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema54 = schema50.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01213");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML36 = schema33.getXml();
        schema33.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema33.minLength((java.lang.Integer) 0);
        schema40.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01214");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema10.getExtensions();
        java.lang.String str15 = schema10.toString();
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01215");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema24.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = schema16.required((java.util.List<java.lang.String>) strList36);
        schema16.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema16.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema43.getExternalDocs();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation44);
    }

    @Test
    public void test01216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01216");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.discriminator(discriminator53);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01217");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal5 = objSchema0.getMinimum();
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(bigDecimal5);
    }

    @Test
    public void test01218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01218");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        schema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = objSchema39.getMinLength();
        objSchema34.addEnumItemObject((java.lang.Object) objSchema39);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int48 = objSchema39.getMaxLength();
        io.swagger.oas.models.media.Schema schema50 = objSchema39.maxLength((java.lang.Integer) 100);
        schema31.setNot((io.swagger.oas.models.media.Schema) objSchema39);
        java.lang.String str52 = schema31.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator53 = schema31.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema31.discriminator(discriminator54);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01219");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str10 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema13.properties(strMap20);
        schema21.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 100);
        java.lang.String str26 = schema25.get$ref();
        java.lang.Boolean boolean27 = schema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal29 = null;
        objSchema28.setMultipleOf(bigDecimal29);
        objSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema28.set$ref("no description");
        objSchema28.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.name(",");
        objSchema38.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema28.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str52 = objSchema28.getType();
        io.swagger.oas.models.media.Schema schema54 = objSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema25.additionalProperties(schema54);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        java.lang.String str61 = objSchema56.getName();
        objSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList64 = objSchema56.getEnum();
        io.swagger.oas.models.media.Schema schema66 = objSchema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = objSchema56.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        objSchema71.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = null;
        io.swagger.oas.models.media.Schema schema84 = objSchema77.addProperties("*/*", schema83);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema84.getExtensions();
        io.swagger.oas.models.media.Schema schema87 = schema84.addRequiredItem("#/components/schemas/");
        objSchema71.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = objSchema56.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema71);
        io.swagger.oas.models.media.Schema schema91 = schema89.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema93 = schema89.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema95 = schema54.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema12.properties(strMap94);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + true + "'", boolean27, true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(objList64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test01220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01220");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema22.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test01221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01221");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema30.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        schema44.setName("#/components/schemas/");
        java.lang.Object obj53 = schema44.getDefault();
        io.swagger.oas.models.media.Schema schema55 = schema44.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        io.swagger.oas.models.media.Schema schema65 = objSchema56.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal66 = schema65.getMinimum();
        java.math.BigDecimal bigDecimal67 = null;
        schema65.setMultipleOf(bigDecimal67);
        io.swagger.oas.models.media.Schema schema70 = schema65.$ref("*/*");
        io.swagger.oas.models.media.Schema schema72 = schema70.uniqueItems((java.lang.Boolean) false);
        schema55.setNot(schema70);
        schema55.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = schema55.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema77.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = schema30.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = schema80.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(externalDocumentation81);
    }

    @Test
    public void test01222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01222");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema11.setDiscriminator(discriminator13);
        schema11.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test01223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01223");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema7.setExternalDocs(externalDocumentation17);
        java.lang.Integer int19 = schema7.getMinLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test01224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01224");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        schema31.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01225");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema19.example((java.lang.Object) 1);
        io.swagger.oas.models.media.Schema schema33 = schema19.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema19.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01226");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str9 = schema6.getPattern();
        schema6.setDescription("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "no description" + "'", str9, "no description");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01227");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean30 = objSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
    }

    @Test
    public void test01228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01228");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal20 = schema15.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema15.setDiscriminator(discriminator21);
        java.lang.Class<?> wildcardClass23 = schema15.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01229");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        schema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = objSchema32.maxProperties((java.lang.Integer) 0);
        objSchema32.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = objSchema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema32.type(",");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema32.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema56.getEnum();
        java.lang.Boolean boolean64 = objSchema56.getWriteOnly();
        java.lang.Boolean boolean65 = objSchema56.getWriteOnly();
        boolean boolean66 = schema50.equals((java.lang.Object) objSchema56);
        io.swagger.oas.models.media.Schema schema68 = objSchema56.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema68.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01230");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        java.math.BigDecimal bigDecimal16 = objSchema0.getMultipleOf();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean40 = objSchema0.getDeprecated();
        java.lang.String str41 = objSchema0.getTitle();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test01231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01231");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = objSchema13.getNot();
        java.lang.Integer int19 = objSchema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema21 = objSchema13.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = null;
        objSchema13.setMaximum(bigDecimal22);
        objSchema13.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema12.example((java.lang.Object) (-1));
        java.lang.String str27 = schema26.getTitle();
        io.swagger.oas.models.media.Schema schema29 = schema26.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01232");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator33 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator34 = objSchema0.getDiscriminator();
        java.lang.Integer int35 = objSchema0.getMinLength();
        objSchema0.setMinItems((java.lang.Integer) 1);
        objSchema0.setType("");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test01233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01233");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.maximum(bigDecimal25);
        java.lang.Integer int27 = schema23.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test01234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01234");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal13 = null;
        schema8.setMinimum(bigDecimal13);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01235");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.title("hi!");
        java.lang.Object obj39 = schema38.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        io.swagger.oas.models.media.XML xML49 = null;
        schema48.setXml(xML49);
        schema48.setTitle("*/*");
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema48.xml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema48.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        java.util.List<java.lang.String> strList58 = schema56.getRequired();
        io.swagger.oas.models.media.Schema schema59 = schema38.addProperties("", schema56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        objSchema71.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int81 = objSchema76.getMinLength();
        objSchema71.addEnumItemObject((java.lang.Object) objSchema76);
        objSchema76.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int85 = objSchema76.getMaxLength();
        schema67.addExtension("no description", (java.lang.Object) objSchema76);
        io.swagger.oas.models.media.Schema schema88 = schema67.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema67.getExtensions();
        schema59.setExtensions(strMap89);
        schema28.setExtensions(strMap89);
        schema18.setExtensions(strMap89);
        java.util.List<java.lang.Object> objList93 = schema18.getEnum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(objList93);
    }

    @Test
    public void test01236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01236");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        java.lang.Integer int10 = objSchema0.getMinLength();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test01237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01237");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema schema56 = schema54.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        schema54.setExternalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema schema59 = schema54.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML60 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema61 = schema59.xml(xML60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema59);
    }

    @Test
    public void test01238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01238");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = schema74.getMultipleOf();
        java.lang.Boolean boolean78 = schema74.getExclusiveMaximum();
        java.lang.String str79 = schema74.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test01239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01239");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        schema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema27.minItems((java.lang.Integer) (-1));
        java.lang.Integer int33 = schema27.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test01240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01240");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setTitle("#/components/schemas/");
        java.lang.Integer int20 = schema15.getMinItems();
        schema15.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test01241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01241");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = null;
        objSchema0.addEnumItemObject(obj31);
        objSchema0.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01242");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.XML xML30 = schema9.getXml();
        io.swagger.oas.models.media.Schema schema32 = schema9.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = null;
        schema9.setMinimum(bigDecimal33);
        java.lang.Boolean boolean35 = schema9.getReadOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test01243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01243");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = objSchema21.getMinLength();
        objSchema16.addEnumItemObject((java.lang.Object) objSchema21);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = objSchema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int32 = schema31.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = objSchema44.getMinLength();
        schema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.Boolean boolean51 = schema40.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.String str58 = objSchema53.getName();
        objSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList61 = objSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name(",");
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema53.properties(strMap82);
        java.lang.Object obj84 = schema83.getDefault();
        io.swagger.oas.models.media.Schema schema85 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema31.properties(strMap86);
        schema15.setProperties(strMap86);
        java.lang.Boolean boolean89 = schema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema91 = schema15.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass92 = schema91.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(objList61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test01244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01244");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = schema10.getXml();
        io.swagger.oas.models.media.Schema schema17 = schema10.minProperties((java.lang.Integer) 1);
        java.lang.String str18 = schema17.getType();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01245");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        java.lang.Integer int40 = schema26.getMaxProperties();
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList43 = null;
        schema26.setRequired(strList43);
        io.swagger.oas.models.media.Schema schema46 = schema26.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema46.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str49 = schema48.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test01246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01246");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema15.setDiscriminator(discriminator20);
        schema15.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01247");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema61 = schema59.description(",");
        java.lang.String[] strArray64 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema59.required((java.util.List<java.lang.String>) strList65);
        schema59.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema70 = schema59.getNot();
        java.lang.Integer int71 = schema59.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = schema59.getExternalDocs();
        io.swagger.oas.models.media.Schema schema74 = schema59.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = schema59.getExternalDocs();
        schema44.setNot(schema59);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = null;
        io.swagger.oas.models.media.Schema schema84 = objSchema77.addProperties("*/*", schema83);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema84.getExtensions();
        io.swagger.oas.models.media.Schema schema87 = schema84.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema88 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema88.setPattern("no description");
        objSchema88.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int93 = objSchema88.getMinLength();
        schema84.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema88);
        java.math.BigDecimal bigDecimal95 = objSchema88.getMultipleOf();
        io.swagger.oas.models.media.Schema schema97 = objSchema88.pattern("#/components/schemas/");
        java.util.List<java.lang.Object> objList98 = objSchema88.getEnum();
        boolean boolean99 = schema44.equals((java.lang.Object) objSchema88);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(externalDocumentation75);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int93);
        org.junit.Assert.assertNull(bigDecimal95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(objList98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test01248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01248");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setName("#/components/schemas/");
        objSchema0.setMinItems((java.lang.Integer) 100);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01249");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        io.swagger.oas.models.media.Schema schema58 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) false);
        schema58.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        schema58.setProperties(strMap63);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test01250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01250");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setType(",");
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        java.lang.Integer int24 = schema12.getMinProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test01251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01251");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        io.swagger.oas.models.media.Schema schema37 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        objSchema38.setProperties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = objSchema38.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.Schema schema57 = objSchema48.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = objSchema48.xml(xML58);
        io.swagger.oas.models.media.Schema schema61 = objSchema48.deprecated((java.lang.Boolean) false);
        schema61.set$ref("*/*");
        io.swagger.oas.models.media.XML xML64 = null;
        schema61.setXml(xML64);
        io.swagger.oas.models.media.Schema schema67 = schema61.nullable((java.lang.Boolean) false);
        boolean boolean68 = objSchema38.equals((java.lang.Object) schema67);
        schema10.setDefault((java.lang.Object) objSchema38);
        java.lang.Integer int70 = objSchema38.getMaxItems();
        java.lang.Boolean boolean71 = objSchema38.getDeprecated();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + true + "'", boolean71, true);
    }

    @Test
    public void test01252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01252");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        objSchema12.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema12.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema21.getMultipleOf();
        java.math.BigDecimal bigDecimal23 = null;
        schema21.setMinimum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test01253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01253");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01254");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.title("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        schema42.setXml(xML43);
        schema42.setTitle("*/*");
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema42.xml(xML47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema42.externalDocs(externalDocumentation49);
        schema34.addEnumItemObject((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = schema34.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        schema34.setExample((java.lang.Object) schema69);
        schema21.setAdditionalProperties(schema69);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test01255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01255");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMinimum();
        schema27.setType("#/components/schemas/no description");
        java.lang.String str32 = schema27.getName();
        io.swagger.oas.models.media.XML xML33 = schema27.getXml();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(xML33);
    }

    @Test
    public void test01256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01256");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema19.example((java.lang.Object) 1);
        java.util.List<java.lang.Object> objList32 = schema19.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(objList32);
    }

    @Test
    public void test01257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01257");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.$ref("*/*");
        io.swagger.oas.models.media.Schema schema31 = schema24.$ref("");
        io.swagger.oas.models.media.Schema schema33 = schema31.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema34.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test01258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01258");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        objSchema29.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema29.properties(strMap52);
        objSchema0.setProperties(strMap52);
        io.swagger.oas.models.media.Schema schema56 = objSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema56.uniqueItems((java.lang.Boolean) false);
        schema56.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test01259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01259");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal27 = schema26.getMaximum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test01260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01260");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setType(",");
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = objSchema24.minLength((java.lang.Integer) 0);
        java.lang.String str36 = objSchema24.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList45 = objSchema37.getEnum();
        io.swagger.oas.models.media.Schema schema47 = objSchema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = objSchema37.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = objSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema52.setMultipleOf(bigDecimal53);
        objSchema52.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = schema65.getExtensions();
        io.swagger.oas.models.media.Schema schema68 = schema65.addRequiredItem("#/components/schemas/");
        objSchema52.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = objSchema37.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        objSchema71.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = schema70.required((java.util.List<java.lang.String>) strList78);
        objSchema24.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = schema12.required((java.util.List<java.lang.String>) strList78);
        java.lang.String str84 = schema83.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(objList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test01261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01261");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinProperties();
        java.math.BigDecimal bigDecimal11 = schema9.getMaximum();
        java.math.BigDecimal bigDecimal12 = null;
        schema9.setMultipleOf(bigDecimal12);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test01262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01262");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema8.addProperties("*/*", schema14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("hi!");
        java.lang.Object obj18 = schema17.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        java.util.List<java.lang.String> strList37 = schema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = schema17.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        objSchema50.addEnumItemObject((java.lang.Object) objSchema55);
        objSchema55.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema55.getMaxLength();
        schema46.addExtension("no description", (java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema schema67 = schema46.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = schema46.getExtensions();
        schema38.setExtensions(strMap68);
        objSchema0.setExtensions(strMap68);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        objSchema0.setDiscriminator(discriminator71);
        io.swagger.oas.models.media.XML xML73 = null;
        objSchema0.setXml(xML73);
        java.math.BigDecimal bigDecimal75 = objSchema0.getMaximum();
        java.lang.String str76 = objSchema0.getPattern();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "no description" + "'", str76, "no description");
    }

    @Test
    public void test01263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01263");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.List<java.lang.String> strList39 = schema26.getRequired();
        java.lang.Integer int40 = schema26.getMaxProperties();
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList43 = null;
        schema26.setRequired(strList43);
        io.swagger.oas.models.media.Schema schema46 = schema26.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema26.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        objSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema49.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("");
        java.lang.String str60 = schema57.getPattern();
        schema57.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema57.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.maximum(bigDecimal65);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.String str72 = objSchema67.getName();
        objSchema67.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList75 = objSchema67.getEnum();
        io.swagger.oas.models.media.Schema schema77 = objSchema67.name(",");
        objSchema67.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema81 = objSchema67.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean82 = objSchema67.getNullable();
        schema66.addEnumItemObject((java.lang.Object) boolean82);
        io.swagger.oas.models.media.Schema schema85 = schema66.minProperties((java.lang.Integer) (-1));
        boolean boolean86 = schema26.equals((java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "no description" + "'", str60, "no description");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(objList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test01264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01264");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = objSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int36 = objSchema15.getMaxLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test01265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01265");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.Object obj15 = schema12.getDefault();
        io.swagger.oas.models.media.Schema schema17 = schema12.minItems((java.lang.Integer) 1);
        schema17.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01266");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema17.getProperties();
        schema17.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema21.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema17.additionalProperties(schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01267");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        java.math.BigDecimal bigDecimal13 = null;
        schema11.setMinimum(bigDecimal13);
        schema11.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test01268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01268");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema8.additionalProperties(schema28);
        io.swagger.oas.models.media.XML xML30 = schema8.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
    }

    @Test
    public void test01269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01269");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        objSchema0.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = objSchema0.name("#/components/schemas/");
        objSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01270");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.Schema schema32 = schema27.minLength((java.lang.Integer) 1);
        java.lang.String str33 = schema27.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        io.swagger.oas.models.media.Schema schema43 = objSchema34.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema34.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = objSchema34.deprecated((java.lang.Boolean) false);
        schema47.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setExample((java.lang.Object) schema51);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01271");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        java.lang.Boolean boolean23 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema24 = schema8.example((java.lang.Object) boolean23);
        schema24.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema24.maxProperties((java.lang.Integer) 100);
        java.lang.String str29 = schema24.getTitle();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test01272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01272");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML32 = null;
        schema8.setXml(xML32);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema8.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMinimum(bigDecimal38);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01273");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema11.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.addRequiredItem("#/components/schemas/");
        schema22.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator25 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema22.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        // The following exception was thrown during execution in test generation
        try {
            schema12.addEnumItemObject((java.lang.Object) discriminator45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test01274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01274");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
    }

    @Test
    public void test01275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01275");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = schema11.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01276");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.Boolean boolean34 = schema33.getUniqueItems();
        java.lang.String str35 = schema33.getDescription();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.minimum(bigDecimal36);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01277");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Integer int16 = schema13.getMaxLength();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test01278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01278");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 1);
        schema25.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        objSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema30.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        schema40.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema40.readOnly((java.lang.Boolean) false);
        schema25.setAdditionalProperties(schema40);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01279");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema40.properties(strMap47);
        io.swagger.oas.models.media.Schema schema50 = schema48.type("");
        io.swagger.oas.models.media.Schema schema52 = schema50.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = objSchema53.addProperties("*/*", schema59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema60.getExtensions();
        io.swagger.oas.models.media.Schema schema63 = schema60.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal64 = null;
        schema60.setMinimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = schema60.maxLength((java.lang.Integer) 10);
        schema52.addEnumItemObject((java.lang.Object) schema67);
        schema28.setNot(schema67);
        io.swagger.oas.models.media.Schema schema71 = schema28.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test01280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01280");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema30.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema36.addExtension("", (java.lang.Object) objSchema40);
        objSchema36.set$ref("*/*");
        schema30.addEnumItemObject((java.lang.Object) objSchema36);
        java.lang.Integer int49 = schema30.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test01281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01281");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        schema18.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema18.getUniqueItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
    }

    @Test
    public void test01282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01282");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        schema8.setFormat("");
        schema8.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema26.additionalProperties(schema35);
        java.lang.String str41 = schema35.getName();
        io.swagger.oas.models.media.Schema schema43 = schema35.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal45 = null;
        objSchema44.setMultipleOf(bigDecimal45);
        objSchema44.setType("");
        java.math.BigDecimal bigDecimal49 = objSchema44.getMaximum();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema44.setMultipleOf(bigDecimal50);
        java.math.BigDecimal bigDecimal52 = objSchema44.getMaximum();
        objSchema44.setDescription("*/*");
        schema43.setNot((io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.XML xML56 = null;
        schema43.setXml(xML56);
        java.lang.Integer int58 = schema43.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = schema8.addProperties("no description", schema43);
        schema59.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.discriminator(discriminator62);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01283");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        objSchema5.setTitle("");
        java.lang.String str16 = objSchema5.getType();
        java.lang.String str17 = objSchema5.toString();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = schema27.getMinimum();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema27.getAdditionalProperties();
        java.math.BigDecimal bigDecimal32 = schema27.getMultipleOf();
        schema27.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema36 = objSchema5.properties(strMap35);
        java.lang.Class<?> wildcardClass37 = schema36.getClass();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test01284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01284");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.title("*/*");
        io.swagger.oas.models.media.Schema schema29 = schema27.description(",");
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema27.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema10.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = objSchema42.getMinLength();
        objSchema37.addEnumItemObject((java.lang.Object) objSchema42);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int51 = objSchema42.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = objSchema42.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = objSchema42.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.addRequiredItem(",");
        schema10.setDefault((java.lang.Object) schema57);
        schema57.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: #/components/schemas/\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema57.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema61);
    }

    @Test
    public void test01285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01285");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        objSchema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema34.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema44 = objSchema20.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.format(",");
        io.swagger.oas.models.media.Schema schema47 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema20);
        java.lang.Integer int48 = schema47.getMaxItems();
        java.lang.String str49 = schema47.getType();
        io.swagger.oas.models.media.Schema schema51 = schema47.maxLength((java.lang.Integer) 0);
        schema51.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01286");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema9.addProperties("", schema27);
        java.lang.Object obj31 = schema27.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema32.addExtension("", (java.lang.Object) objSchema36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        objSchema36.setExternalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.addRequiredItem(",");
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.discriminator(discriminator46);
        schema27.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal50 = null;
        objSchema49.setMultipleOf(bigDecimal50);
        objSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int59 = objSchema54.getMinLength();
        objSchema49.addEnumItemObject((java.lang.Object) objSchema54);
        objSchema49.setMinProperties((java.lang.Integer) 100);
        objSchema49.setPattern("");
        java.math.BigDecimal bigDecimal65 = objSchema49.getMultipleOf();
        java.lang.String[] strArray83 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        io.swagger.oas.models.media.Schema schema86 = objSchema49.required((java.util.List<java.lang.String>) strList84);
        java.util.List<java.lang.Object> objList87 = schema86.getEnum();
        schema45.addEnumItemObject((java.lang.Object) objList87);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(objList87);
    }

    @Test
    public void test01287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01287");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        schema21.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema21.$ref("*/*");
        schema21.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema30 = schema21.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setDefault((java.lang.Object) schema21);
        java.lang.Object obj32 = objSchema0.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test01288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01288");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        java.lang.String str23 = schema12.getDescription();
        java.math.BigDecimal bigDecimal24 = null;
        schema12.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "," + "'", str23, ",");
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test01289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01289");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.addProperties("no description", schema13);
        java.lang.Integer int15 = objSchema0.getMaxLength();
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = objSchema29.getMinLength();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema29);
        java.lang.Boolean boolean36 = schema25.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.name(",");
        objSchema38.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.XML xML59 = null;
        schema58.setXml(xML59);
        schema58.setTitle("*/*");
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema58.xml(xML63);
        io.swagger.oas.models.media.Schema schema66 = schema58.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema66.getProperties();
        io.swagger.oas.models.media.Schema schema68 = objSchema38.properties(strMap67);
        java.lang.Object obj69 = schema68.getDefault();
        io.swagger.oas.models.media.Schema schema70 = schema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        io.swagger.oas.models.media.Schema schema72 = schema70.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal74 = null;
        objSchema73.setMultipleOf(bigDecimal74);
        objSchema73.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = objSchema73.title("hi!");
        java.lang.Object obj80 = null;
        objSchema73.addEnumItemObject(obj80);
        io.swagger.oas.models.media.Schema schema83 = objSchema73.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = objSchema73.multipleOf(bigDecimal84);
        io.swagger.oas.models.media.Schema schema86 = schema70.additionalProperties(schema85);
        java.lang.String str87 = schema85.getName();
        java.util.List<java.lang.Object> objList88 = schema85.getEnum();
        objSchema0.setEnum(objList88);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(objList88);
    }

    @Test
    public void test01290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01290");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema0.setExternalDocs(externalDocumentation10);
        objSchema0.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        objSchema0.setMinimum(bigDecimal14);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01291");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema7.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema74.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema76.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test01292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01292");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) false);
        java.lang.String str28 = schema23.getTitle();
        schema23.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "*/*" + "'", str28, "*/*");
    }

    @Test
    public void test01293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01293");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        objSchema17.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema31.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema41 = objSchema17.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        schema41.setProperties(strMap65);
        io.swagger.oas.models.media.Schema schema69 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.title("");
        io.swagger.oas.models.media.Schema schema73 = schema71.type("");
        schema16.setExample((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema76 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str77 = schema16.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test01294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01294");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = schema8.pattern("*/*");
        schema8.setMaxLength((java.lang.Integer) 0);
        schema8.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01295");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema13.externalDocs(externalDocumentation20);
        java.lang.Integer int22 = schema13.getMinLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test01296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01296");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.externalDocs(externalDocumentation12);
        java.lang.String str14 = objSchema0.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = objSchema0.getExternalDocs();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test01297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01297");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal15 = null;
        objSchema14.setMultipleOf(bigDecimal15);
        objSchema14.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = objSchema19.getMinLength();
        objSchema14.addEnumItemObject((java.lang.Object) objSchema19);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = objSchema19.maxProperties((java.lang.Integer) 0);
        java.lang.String str30 = objSchema19.getType();
        schema13.setExample((java.lang.Object) str30);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test01298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01298");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema18.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.name(",");
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema24.properties(strMap53);
        io.swagger.oas.models.media.Schema schema55 = schema23.properties(strMap53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema58.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.title("*/*");
        io.swagger.oas.models.media.Schema schema71 = schema55.example((java.lang.Object) schema70);
        java.lang.String str72 = schema70.getType();
        io.swagger.oas.models.media.Schema schema74 = schema70.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = schema9.example((java.lang.Object) true);
        java.math.BigDecimal bigDecimal76 = null;
        schema9.setMultipleOf(bigDecimal76);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test01299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01299");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        java.lang.String str14 = schema11.getFormat();
        java.lang.Boolean boolean15 = schema11.getNullable();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test01300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01300");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.XML xML73 = null;
        schema7.setXml(xML73);
        schema7.set$ref("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema78 = schema7.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test01301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01301");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = objSchema34.title("*/*");
        java.lang.Boolean boolean50 = objSchema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema52 = objSchema34.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema52.addRequiredItem("*/*");
        schema9.setNot(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema9.readOnly((java.lang.Boolean) true);
        java.lang.String str58 = schema57.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test01302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01302");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        schema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.type("no description");
        java.lang.String str23 = schema15.getPattern();
        java.lang.String str24 = schema15.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "no description" + "'", str23, "no description");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str24, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01303");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        io.swagger.oas.models.media.Schema schema58 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) false);
        schema60.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.externalDocs(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01304");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema0.properties(strMap12);
        objSchema0.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01305");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        schema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema7.name("no description");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema7.maximum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01306");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        objSchema29.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema29.properties(strMap52);
        objSchema0.setProperties(strMap52);
        io.swagger.oas.models.media.Schema schema56 = objSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema0.minimum(bigDecimal57);
        java.lang.Integer int59 = schema58.getMinItems();
        java.lang.String str60 = schema58.getName();
        java.lang.Boolean boolean61 = schema58.getNullable();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test01307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01307");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        schema29.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema29.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean61 = schema29.getExclusiveMaximum();
        schema29.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test01308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01308");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        schema50.setMinLength((java.lang.Integer) 1);
        java.lang.String str55 = schema50.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test01309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01309");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getWriteOnly();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01310");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.String str26 = schema25.getDescription();
        schema25.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test01311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01311");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = schema17.addRequiredItem("no description");
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema29.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = objSchema33.getMinLength();
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema33);
        java.lang.Boolean boolean40 = schema29.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.String str47 = objSchema42.getName();
        objSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList50 = objSchema42.getEnum();
        io.swagger.oas.models.media.Schema schema52 = objSchema42.name(",");
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        io.swagger.oas.models.media.Schema schema72 = objSchema42.properties(strMap71);
        java.lang.Object obj73 = schema72.getDefault();
        io.swagger.oas.models.media.Schema schema74 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = schema29.getProperties();
        io.swagger.oas.models.media.Schema schema77 = schema29.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = schema77.getProperties();
        io.swagger.oas.models.media.Schema schema79 = schema20.properties(strMap78);
        schema9.setNot(schema20);
        java.lang.Boolean boolean81 = schema9.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(objList50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test01312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01312");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        io.swagger.oas.models.media.Schema schema8 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMinimum(bigDecimal9);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01313");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        schema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int11 = schema7.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test01314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01314");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = objSchema5.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = objSchema20.getMinLength();
        objSchema15.addEnumItemObject((java.lang.Object) objSchema20);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int29 = objSchema20.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = objSchema20.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema39.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema54 = schema31.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = objSchema5.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema56 = objSchema5.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = schema56.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema56);
    }

    @Test
    public void test01315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01315");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.lang.Object obj29 = schema14.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal31 = null;
        objSchema30.setMultipleOf(bigDecimal31);
        objSchema30.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        objSchema30.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        schema44.setTitle("*/*");
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema44.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema54 = objSchema30.properties(strMap53);
        schema14.setProperties(strMap53);
        schema14.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean58 = schema14.getExclusiveMaximum();
        java.lang.Boolean boolean59 = schema14.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test01316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01316");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = objSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = objSchema12.title("*/*");
        java.lang.Boolean boolean28 = objSchema12.getExclusiveMinimum();
        objSchema12.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = objSchema12.getUniqueItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema12.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = objSchema34.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = schema48.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema48.uniqueItems((java.lang.Boolean) true);
        schema33.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema53 = schema11.additionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema55 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01317");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        objSchema14.addExtension("", (java.lang.Object) objSchema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        objSchema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str30 = schema27.getType();
        schema11.setExample((java.lang.Object) str30);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test01318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01318");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = schema7.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML14 = null;
        schema13.setXml(xML14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01319");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = null;
        schema55.setXml(xML58);
        java.lang.String str60 = schema55.getTitle();
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema55.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01320");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.addRequiredItem("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema24.properties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("hi!");
        java.lang.String str35 = schema34.getName();
        java.math.BigDecimal bigDecimal36 = schema34.getMultipleOf();
        java.math.BigDecimal bigDecimal37 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = objSchema49.getMinLength();
        schema45.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema49);
        java.lang.Boolean boolean56 = schema45.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        java.lang.String str63 = objSchema58.getName();
        objSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList66 = objSchema58.getEnum();
        io.swagger.oas.models.media.Schema schema68 = objSchema58.name(",");
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = null;
        io.swagger.oas.models.media.Schema schema78 = objSchema71.addProperties("*/*", schema77);
        io.swagger.oas.models.media.XML xML79 = null;
        schema78.setXml(xML79);
        schema78.setTitle("*/*");
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema78.xml(xML83);
        io.swagger.oas.models.media.Schema schema86 = schema78.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema88 = objSchema58.properties(strMap87);
        java.lang.Object obj89 = schema88.getDefault();
        io.swagger.oas.models.media.Schema schema90 = schema45.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema88);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = schema45.getProperties();
        io.swagger.oas.models.media.Schema schema92 = schema34.properties(strMap91);
        io.swagger.oas.models.media.Discriminator discriminator93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema34.discriminator(discriminator93);
        java.lang.Boolean boolean95 = schema34.getReadOnly();
        io.swagger.oas.models.media.Schema schema96 = schema22.addProperties("#/components/schemas/hi!", schema34);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(objList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + false + "'", boolean95, false);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test01321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01321");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        schema27.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = null;
        schema27.setMinimum(bigDecimal30);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01322");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema16.addRequiredItem("#/components/schemas/");
        schema25.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema30 = schema25.deprecated((java.lang.Boolean) false);
        schema30.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema45 = schema40.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        objSchema47.addExtension("", (java.lang.Object) objSchema51);
        objSchema47.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema60 = objSchema47.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema60.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema65.addProperties("*/*", schema71);
        io.swagger.oas.models.media.XML xML73 = null;
        schema72.setXml(xML73);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal77 = null;
        objSchema76.setMultipleOf(bigDecimal77);
        objSchema76.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema81.setPattern("no description");
        objSchema81.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int86 = objSchema81.getMinLength();
        objSchema76.addEnumItemObject((java.lang.Object) objSchema81);
        objSchema81.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int90 = objSchema81.getMaxLength();
        schema72.addExtension("no description", (java.lang.Object) objSchema81);
        io.swagger.oas.models.media.Schema schema93 = schema72.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = schema72.getExtensions();
        schema64.setExtensions(strMap94);
        schema40.setExtensions(strMap94);
        schema30.setExtensions(strMap94);
        objSchema0.setExtensions(strMap94);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNull(int90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test01323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01323");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema15.getExclusiveMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
    }

    @Test
    public void test01324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01324");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema22.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal26 = null;
        schema22.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema22.maxLength((java.lang.Integer) 10);
        objSchema0.setExample((java.lang.Object) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema0.externalDocs(externalDocumentation31);
        java.lang.Boolean boolean33 = schema32.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
    }

    @Test
    public void test01325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01325");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        schema11.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema schema18 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str19 = schema18.getDescription();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01326");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        objSchema0.setMaxItems((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objSchema0.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test01327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01327");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Boolean boolean18 = schema14.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
    }

    @Test
    public void test01328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01328");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.xml(xML32);
        java.lang.Integer int34 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        objSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema35.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("");
        io.swagger.oas.models.media.Discriminator discriminator46 = schema43.getDiscriminator();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema43.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.Schema schema59 = objSchema50.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal60 = schema59.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema68.pattern("*/*");
        io.swagger.oas.models.media.Schema schema73 = schema59.additionalProperties(schema68);
        java.lang.String str74 = schema68.getName();
        io.swagger.oas.models.media.Schema schema76 = schema68.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setType("");
        java.math.BigDecimal bigDecimal82 = objSchema77.getMaximum();
        java.math.BigDecimal bigDecimal83 = null;
        objSchema77.setMultipleOf(bigDecimal83);
        java.math.BigDecimal bigDecimal85 = objSchema77.getMaximum();
        objSchema77.setDescription("*/*");
        schema76.setNot((io.swagger.oas.models.media.Schema) objSchema77);
        java.util.List<java.lang.String> strList89 = schema76.getRequired();
        io.swagger.oas.models.media.Schema schema90 = schema48.addProperties("hi!", schema76);
        java.lang.Integer int91 = schema90.getMinLength();
        schema30.setDefault((java.lang.Object) schema90);
        schema30.setType("#/components/schemas/");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
    }

    @Test
    public void test01329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01329");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        schema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema22.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("");
        io.swagger.oas.models.media.Schema schema34 = schema32.title("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.description(",");
        java.lang.String[] strArray39 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema34.required((java.util.List<java.lang.String>) strList40);
        schema21.setRequired((java.util.List<java.lang.String>) strList40);
        schema21.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean46 = schema21.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test01330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01330");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.String str12 = objSchema7.getName();
        objSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = objSchema7.getEnum();
        io.swagger.oas.models.media.Schema schema17 = objSchema7.name(",");
        objSchema7.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema7.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties(schema24);
        java.math.BigDecimal bigDecimal26 = objSchema0.getMultipleOf();
        io.swagger.oas.models.media.XML xML27 = null;
        objSchema0.setXml(xML27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        objSchema30.addExtension("", (java.lang.Object) objSchema34);
        io.swagger.oas.models.media.Schema schema41 = objSchema30.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        schema41.setProperties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        java.lang.String str50 = objSchema45.getName();
        objSchema45.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList53 = objSchema45.getEnum();
        io.swagger.oas.models.media.Schema schema55 = objSchema45.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = objSchema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = schema41.additionalProperties((io.swagger.oas.models.media.Schema) objSchema45);
        io.swagger.oas.models.media.Schema schema59 = schema57.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = objSchema0.addProperties("hi!", schema57);
        io.swagger.oas.models.media.Schema schema62 = objSchema0.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(objList53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01331");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema20 = schema14.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema14.minItems((java.lang.Integer) 0);
        schema14.setTitle("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal25 = null;
        schema14.setMaximum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01332");
        io.swagger.oas.models.media.Schema<java.lang.Iterable<java.lang.String>> strIterableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Iterable<java.lang.String>>();
    }

    @Test
    public void test01333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01333");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList19 = objSchema11.getEnum();
        io.swagger.oas.models.media.Schema schema21 = objSchema11.name(",");
        objSchema11.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = objSchema11.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = objSchema11.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        objSchema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema27.properties(strMap34);
        io.swagger.oas.models.media.Schema schema37 = schema35.$ref("hi!");
        schema35.setMaxLength((java.lang.Integer) 10);
        objSchema11.setDefault((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema41 = schema10.example((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema50.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("*/*");
        io.swagger.oas.models.media.Schema schema56 = schema54.description(",");
        java.math.BigDecimal bigDecimal57 = schema56.getMultipleOf();
        java.lang.Boolean boolean58 = schema56.getReadOnly();
        boolean boolean59 = schema41.equals((java.lang.Object) boolean58);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(objList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test01334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01334");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema16.getDeprecated();
        schema16.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema16.getNullable();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test01335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01335");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        objSchema18.addEnumItemObject((java.lang.Object) objSchema23);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = objSchema23.maxProperties((java.lang.Integer) 0);
        objSchema23.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal47 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        schema46.addExtension("#/components/schemas/", (java.lang.Object) objSchema49);
        io.swagger.jaxrs2.OperationParser operationParser55 = new io.swagger.jaxrs2.OperationParser();
        schema46.addEnumItemObject((java.lang.Object) operationParser55);
        io.swagger.oas.models.media.Schema schema57 = objSchema23.addProperties("no description", schema46);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema schema62 = objSchema5.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal64 = null;
        objSchema63.setMultipleOf(bigDecimal64);
        objSchema63.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema63.set$ref("no description");
        java.util.List<java.lang.Object> objList70 = objSchema63.getEnum();
        objSchema63.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema62.additionalProperties((io.swagger.oas.models.media.Schema) objSchema63);
        schema62.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test01336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01336");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        java.lang.String str32 = schema30.getName();
        io.swagger.oas.models.media.Schema schema33 = schema30.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "," + "'", str32, ",");
        org.junit.Assert.assertNull(schema33);
    }

    @Test
    public void test01337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01337");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        java.lang.Integer int36 = schema34.getMinProperties();
        java.lang.Boolean boolean37 = schema34.getReadOnly();
        java.lang.Boolean boolean38 = schema34.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema34.setExternalDocs(externalDocumentation39);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test01338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01338");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.lang.Boolean boolean16 = schema14.getWriteOnly();
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMaximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01339");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMaximum();
        objSchema0.setDescription("*/*");
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        objSchema17.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema17.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        schema36.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema40);
        schema36.setExclusiveMinimum((java.lang.Boolean) true);
        schema36.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = schema36.getExternalDocs();
        java.lang.Integer int52 = schema36.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = objSchema17.example((java.lang.Object) schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema36.getExtensions();
        boolean boolean55 = objSchema0.equals((java.lang.Object) strMap54);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(externalDocumentation51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test01340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01340");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.String str15 = schema10.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01341");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.XML xML26 = schema8.getXml();
        java.lang.Object obj27 = schema8.getDefault();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test01342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01342");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema9.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML19 = schema9.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(xML19);
    }

    @Test
    public void test01343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01343");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        schema7.setWriteOnly((java.lang.Boolean) false);
        schema7.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01344");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema12.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList29 = schema24.getRequired();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.minimum(bigDecimal30);
        schema31.setMinItems((java.lang.Integer) 0);
        java.lang.String str34 = schema31.get$ref();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#/components/schemas/hi!" + "'", str34, "#/components/schemas/hi!");
    }

    @Test
    public void test01345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01345");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean30 = objSchema29.getDeprecated();
        java.lang.Boolean boolean31 = objSchema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = objSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema27.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.addRequiredItem("#/components/schemas/");
        java.lang.Object obj47 = schema46.getDefault();
        io.swagger.oas.models.media.XML xML48 = schema46.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema56.setRequired((java.util.List<java.lang.String>) strList68);
        schema46.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema34.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Discriminator discriminator73 = schema72.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator74 = schema72.getDiscriminator();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator73);
        org.junit.Assert.assertNull(discriminator74);
    }

    @Test
    public void test01346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01346");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.String str32 = objSchema27.getName();
        objSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList35 = objSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema37 = objSchema27.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = objSchema27.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = objSchema27.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema55.addRequiredItem("#/components/schemas/");
        objSchema42.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = objSchema27.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema42);
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 1);
        schema60.setDeprecated((java.lang.Boolean) false);
        java.lang.String str65 = schema60.getType();
        objSchema0.addEnumItemObject((java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema schema68 = schema60.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema68.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(objList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01347");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema11.maximum(bigDecimal18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        objSchema11.setDiscriminator(discriminator20);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema11.discriminator(discriminator22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema11.multipleOf(bigDecimal24);
        java.lang.String str26 = schema25.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "no description" + "'", str26, "no description");
    }

    @Test
    public void test01348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01348");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass13 = objSchema0.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01349");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.lang.Boolean boolean4 = objSchema0.getExclusiveMinimum();
        objSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.String str7 = objSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal9 = null;
        objSchema8.setMultipleOf(bigDecimal9);
        objSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = objSchema8.title("hi!");
        java.lang.Object obj15 = null;
        objSchema8.addEnumItemObject(obj15);
        io.swagger.oas.models.media.Schema schema18 = objSchema8.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema8.multipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal22 = null;
        objSchema21.setMultipleOf(bigDecimal22);
        objSchema21.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        objSchema21.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        schema35.setTitle("*/*");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema35.xml(xML40);
        io.swagger.oas.models.media.Schema schema43 = schema35.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema43.getProperties();
        io.swagger.oas.models.media.Schema schema45 = objSchema21.properties(strMap44);
        schema20.setDefault((java.lang.Object) objSchema21);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        schema20.setDiscriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema schema60 = objSchema51.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal61 = schema60.getMinimum();
        java.math.BigDecimal bigDecimal62 = null;
        schema60.setMultipleOf(bigDecimal62);
        io.swagger.oas.models.media.Schema schema64 = schema60.getAdditionalProperties();
        java.math.BigDecimal bigDecimal65 = schema60.getMultipleOf();
        schema60.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema69 = schema20.properties(strMap68);
        objSchema0.setProperties(strMap68);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = objSchema0.getExtensions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test01350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01350");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema12.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList29 = schema24.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = objSchema41.getMinLength();
        schema37.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema41);
        java.lang.Boolean boolean48 = schema37.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        io.swagger.oas.models.media.Schema schema60 = objSchema50.name(",");
        objSchema50.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema63.addProperties("*/*", schema69);
        io.swagger.oas.models.media.XML xML71 = null;
        schema70.setXml(xML71);
        schema70.setTitle("*/*");
        io.swagger.oas.models.media.XML xML75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema70.xml(xML75);
        io.swagger.oas.models.media.Schema schema78 = schema70.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = schema78.getProperties();
        io.swagger.oas.models.media.Schema schema80 = objSchema50.properties(strMap79);
        java.lang.Object obj81 = schema80.getDefault();
        io.swagger.oas.models.media.Schema schema82 = schema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema80);
        schema82.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int85 = schema82.getMinProperties();
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema82.multipleOf(bigDecimal86);
        java.lang.String str88 = schema82.get$ref();
        io.swagger.oas.models.media.Schema schema90 = schema82.description("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema91 = schema24.example((java.lang.Object) schema82);
        io.swagger.oas.models.media.Discriminator discriminator92 = schema82.getDiscriminator();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(discriminator92);
    }

    @Test
    public void test01351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01351");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMinLength();
        schema55.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
    }

    @Test
    public void test01352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01352");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.type(",");
        io.swagger.oas.models.media.Schema schema17 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema17.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        schema28.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema32);
        java.lang.Boolean boolean39 = schema28.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        java.lang.Object obj72 = schema71.getDefault();
        io.swagger.oas.models.media.Schema schema73 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema28.getProperties();
        schema17.setExample((java.lang.Object) schema28);
        java.lang.Boolean boolean76 = schema28.getExclusiveMinimum();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(boolean76);
    }

    @Test
    public void test01353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01353");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.minProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        schema39.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema39.$ref("*/*");
        java.lang.Integer int50 = schema39.getMaxProperties();
        java.lang.String str51 = schema39.getTitle();
        io.swagger.oas.models.media.Schema schema53 = schema39.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int64 = objSchema59.getMinLength();
        objSchema54.addEnumItemObject((java.lang.Object) objSchema59);
        objSchema59.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int68 = objSchema59.getMaxLength();
        io.swagger.oas.models.media.Schema schema70 = objSchema59.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = null;
        io.swagger.oas.models.media.Schema schema78 = objSchema71.addProperties("*/*", schema77);
        io.swagger.oas.models.media.XML xML79 = null;
        schema78.setXml(xML79);
        schema78.setTitle("*/*");
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        schema78.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema93 = schema70.required((java.util.List<java.lang.String>) strList90);
        schema53.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema53.externalDocs(externalDocumentation95);
        schema30.setDefault((java.lang.Object) externalDocumentation95);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "*/*" + "'", str51, "*/*");
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test01354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01354");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema5 = null;
        objSchema0.setAdditionalProperties(schema5);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema12.setMultipleOf(bigDecimal13);
        objSchema12.setType("");
        java.math.BigDecimal bigDecimal17 = objSchema12.getMaximum();
        java.lang.Boolean boolean18 = objSchema12.getExclusiveMinimum();
        objSchema12.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.writeOnly((java.lang.Boolean) true);
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) objSchema12);
        java.lang.String str26 = schema10.getType();
        java.lang.Class<?> wildcardClass27 = schema10.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test01355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01355");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema11.getExternalDocs();
        java.math.BigDecimal bigDecimal13 = schema11.getMinimum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.multipleOf(bigDecimal14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01356");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema73.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList80 = objSchema73.getEnum();
        java.lang.Boolean boolean81 = objSchema73.getNullable();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = schema83.getMaximum();
        io.swagger.oas.models.media.Schema schema85 = schema7.additionalProperties(schema83);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema7.externalDocs(externalDocumentation86);
        schema87.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(objList80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test01357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01357");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.String str12 = schema8.getName();
        schema8.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMaximum(bigDecimal15);
        java.lang.Boolean boolean17 = schema8.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        objSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema18.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("hi!");
        java.lang.String str29 = schema28.getName();
        java.math.BigDecimal bigDecimal30 = schema28.getMultipleOf();
        java.math.BigDecimal bigDecimal31 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema39.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = objSchema43.getMinLength();
        schema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema43);
        java.lang.Boolean boolean50 = schema39.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList60 = objSchema52.getEnum();
        io.swagger.oas.models.media.Schema schema62 = objSchema52.name(",");
        objSchema52.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = null;
        io.swagger.oas.models.media.Schema schema72 = objSchema65.addProperties("*/*", schema71);
        io.swagger.oas.models.media.XML xML73 = null;
        schema72.setXml(xML73);
        schema72.setTitle("*/*");
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema72.xml(xML77);
        io.swagger.oas.models.media.Schema schema80 = schema72.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = schema80.getProperties();
        io.swagger.oas.models.media.Schema schema82 = objSchema52.properties(strMap81);
        java.lang.Object obj83 = schema82.getDefault();
        io.swagger.oas.models.media.Schema schema84 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema86 = schema28.properties(strMap85);
        schema8.setProperties(strMap85);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(objList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test01358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01358");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        java.lang.Integer int18 = schema7.getMaxProperties();
        java.lang.String str19 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema21 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        objSchema22.addEnumItemObject((java.lang.Object) objSchema27);
        objSchema27.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int36 = objSchema27.getMaxLength();
        io.swagger.oas.models.media.Schema schema38 = objSchema27.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        schema46.setTitle("*/*");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        schema46.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema61 = schema38.required((java.util.List<java.lang.String>) strList58);
        schema21.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema21.externalDocs(externalDocumentation63);
        java.lang.Class<?> wildcardClass65 = schema21.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "*/*" + "'", str19, "*/*");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test01359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01359");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        objSchema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema32.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema42 = objSchema18.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = objSchema18.format(",");
        io.swagger.oas.models.media.Schema schema46 = objSchema18.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema47.setExternalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema47.properties(strMap70);
        objSchema18.setProperties(strMap70);
        objSchema12.setProperties(strMap70);
        java.lang.Object obj74 = objSchema12.getExample();
        objSchema12.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test01360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01360");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        schema15.setType(",");
        java.lang.Integer int18 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setWriteOnly((java.lang.Boolean) false);
        objSchema25.setType("*/*");
        java.lang.Integer int35 = objSchema25.getMinLength();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema25.maximum(bigDecimal36);
        io.swagger.oas.models.media.XML xML38 = objSchema25.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        objSchema39.addExtension("", (java.lang.Object) objSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        objSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema49.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("");
        io.swagger.oas.models.media.Schema schema60 = objSchema39.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema schema62 = schema60.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.externalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal66 = null;
        objSchema65.setMultipleOf(bigDecimal66);
        objSchema65.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        objSchema65.setExternalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        io.swagger.oas.models.media.XML xML80 = null;
        schema79.setXml(xML80);
        schema79.setTitle("*/*");
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema79.xml(xML84);
        io.swagger.oas.models.media.Schema schema87 = schema79.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema87.getProperties();
        io.swagger.oas.models.media.Schema schema89 = objSchema65.properties(strMap88);
        io.swagger.oas.models.media.Schema schema91 = objSchema65.format(",");
        io.swagger.oas.models.media.Schema schema93 = objSchema65.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema95 = objSchema65.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap96 = objSchema65.getProperties();
        io.swagger.oas.models.media.Schema schema97 = schema62.properties(strMap96);
        objSchema25.setProperties(strMap96);
        schema15.setProperties(strMap96);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML38);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01361");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        objSchema0.setExample((java.lang.Object) schema50);
        schema50.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01362");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        objSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = objSchema0.getNullable();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema0.multipleOf(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema38.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        io.swagger.oas.models.media.Schema schema50 = objSchema41.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema41.xml(xML51);
        io.swagger.oas.models.media.Schema schema54 = objSchema41.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema38.not(schema56);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test01363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01363");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int29 = schema24.getMinProperties();
        java.lang.String str30 = schema24.getFormat();
        schema24.set$ref("");
        io.swagger.oas.models.media.Schema schema34 = schema24.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean35 = schema34.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test01364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01364");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.format("");
        java.lang.String str29 = schema28.toString();
        java.lang.Boolean boolean30 = schema28.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str29, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01365");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str12 = objSchema0.getTitle();
        java.math.BigDecimal bigDecimal13 = objSchema0.getMultipleOf();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test01366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01366");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema25.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = objSchema29.getMinLength();
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema29);
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        schema25.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal41 = null;
        objSchema40.setMultipleOf(bigDecimal41);
        objSchema40.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema40.title("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema46.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema48.$ref("no description");
        schema48.setName("");
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema48.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema58 = schema25.example((java.lang.Object) schema57);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal60 = null;
        objSchema59.setMultipleOf(bigDecimal60);
        java.lang.String[] strArray65 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        objSchema59.setRequired((java.util.List<java.lang.String>) strList66);
        schema58.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = schema17.required((java.util.List<java.lang.String>) strList66);
        java.lang.Boolean boolean71 = schema17.getDeprecated();
        java.lang.Class<?> wildcardClass72 = schema17.getClass();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test01367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01367");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        schema50.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema50.uniqueItems((java.lang.Boolean) false);
        java.lang.String str57 = schema50.getName();
        io.swagger.oas.models.media.Schema schema59 = schema50.maxLength((java.lang.Integer) 1);
        java.lang.Object obj60 = schema50.getDefault();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "," + "'", str57, ",");
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test01368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01368");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01369");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema23.addProperties("*/*", schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        io.swagger.oas.models.media.Schema schema33 = schema30.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal34 = null;
        schema30.setMinimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema30.maxLength((java.lang.Integer) 10);
        java.lang.String str38 = schema30.getTitle();
        io.swagger.oas.models.media.Schema schema40 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList41 = schema30.getRequired();
        boolean boolean42 = schema20.equals((java.lang.Object) schema30);
        schema20.set$ref("");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test01370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01370");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        java.lang.Boolean boolean40 = schema7.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test01371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01371");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = objSchema31.minItems((java.lang.Integer) 1);
        schema12.setAdditionalProperties(schema37);
        io.swagger.oas.models.media.Schema schema40 = schema12.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01372");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 10);
        java.lang.String str35 = schema34.getDescription();
        java.lang.Boolean boolean36 = schema34.getReadOnly();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test01373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01373");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema12.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test01374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01374");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema7.getMinLength();
        schema7.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema32.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema31.properties(strMap61);
        schema7.setProperties(strMap61);
        io.swagger.oas.models.media.Schema schema66 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int67 = schema7.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
    }

    @Test
    public void test01375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01375");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.title("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema44.description(",");
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema44.required((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.multipleOf(bigDecimal53);
        java.lang.Integer int55 = schema52.getMinProperties();
        schema30.setAdditionalProperties(schema52);
        schema52.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test01376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01376");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.String str13 = objSchema8.getName();
        objSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList16 = objSchema8.getEnum();
        io.swagger.oas.models.media.Schema schema18 = objSchema8.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema8.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = objSchema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("#/components/schemas/");
        objSchema23.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = objSchema8.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema23);
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 1);
        schema41.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.additionalProperties(schema41);
        java.lang.Boolean boolean47 = schema41.getDeprecated();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(objList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + true + "'", boolean47, true);
    }

    @Test
    public void test01377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01377");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.lang.Boolean boolean16 = schema14.getReadOnly();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.minimum(bigDecimal17);
        schema18.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01378");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = objSchema0.getExternalDocs();
        java.lang.Integer int18 = objSchema0.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test01379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01379");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema70 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema70.externalDocs(externalDocumentation73);
        io.swagger.oas.models.media.Schema schema76 = schema74.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema76.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test01380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01380");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.xml(xML32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = objSchema0.example((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test01381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01381");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("hi!");
        java.lang.Boolean boolean17 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema9.getDescription();
        io.swagger.oas.models.media.Schema schema22 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int23 = schema22.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test01382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01382");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        objSchema12.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema12.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        objSchema12.setMinimum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01383");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int15 = objSchema4.getMinProperties();
        io.swagger.oas.models.media.XML xML16 = objSchema4.getXml();
        objSchema4.setDeprecated((java.lang.Boolean) true);
        objSchema4.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        objSchema4.setXml(xML21);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test01384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01384");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        java.lang.String str11 = schema7.toString();
        io.swagger.oas.models.media.Schema schema13 = schema7.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema13.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test01385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01385");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = objSchema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = objSchema35.getName();
        objSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema35.addRequiredItem("#/components/schemas/");
        java.lang.Object obj45 = schema44.getDefault();
        io.swagger.oas.models.media.XML xML46 = schema44.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema54.setRequired((java.util.List<java.lang.String>) strList66);
        schema44.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = objSchema25.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema71 = schema13.required((java.util.List<java.lang.String>) strList66);
        java.lang.String str72 = schema13.getType();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test01386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01386");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01387");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema40.pattern("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema31.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList48 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema49 = schema20.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        schema47.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test01388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01388");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = schema24.getDefault();
        io.swagger.oas.models.media.XML xML26 = schema24.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema34.setRequired((java.util.List<java.lang.String>) strList46);
        schema24.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema14.required((java.util.List<java.lang.String>) strList46);
        schema14.setNullable((java.lang.Boolean) false);
        schema14.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01389");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema17.getNot();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test01390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01390");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML11 = schema10.getXml();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML11);
    }

    @Test
    public void test01391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01391");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        schema19.setMinLength((java.lang.Integer) (-1));
        schema19.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01392");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        schema29.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01393");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01394");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema9.getExtensions();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        schema21.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema25);
        java.lang.Boolean boolean32 = schema21.getNullable();
        io.swagger.oas.models.media.Schema schema34 = schema21.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema9.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema48.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.discriminator(discriminator50);
        schema34.addExtension("*/*", (java.lang.Object) discriminator50);
        schema34.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01395");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.String str11 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setType("");
        java.math.BigDecimal bigDecimal20 = objSchema15.getMaximum();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema15.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema15.externalDocs(externalDocumentation27);
        java.lang.String str29 = objSchema15.getFormat();
        schema10.setExample((java.lang.Object) str29);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test01396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01396");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.addRequiredItem("#/components/schemas/");
        java.lang.Object obj25 = schema24.getDefault();
        io.swagger.oas.models.media.XML xML26 = schema24.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema34.setRequired((java.util.List<java.lang.String>) strList46);
        schema24.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema14.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema52 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema52.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML55 = schema52.getXml();
        java.lang.Integer int56 = schema52.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(xML55);
        org.junit.Assert.assertNull(int56);
    }

    @Test
    public void test01397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01397");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.math.BigDecimal bigDecimal18 = null;
        schema13.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema13.name("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema23.addRequiredItem("#/components/schemas/");
        schema32.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator35 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        schema43.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema32.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.maxProperties((java.lang.Integer) (-1));
        java.lang.String str55 = schema54.getPattern();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = schema54.getExternalDocs();
        schema13.addExtension("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) externalDocumentation56);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "no description" + "'", str55, "no description");
        org.junit.Assert.assertNull(externalDocumentation56);
    }

    @Test
    public void test01398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01398");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        java.lang.Boolean boolean16 = schema13.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test01399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01399");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema9.addProperties("", schema27);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = objSchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema33.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = objSchema33.maxProperties((java.lang.Integer) 1);
        schema32.setExample((java.lang.Object) 1);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema32.discriminator(discriminator50);
        schema32.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01400");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = schema12.getDiscriminator();
        schema12.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator13);
    }

    @Test
    public void test01401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01401");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = objSchema37.getMinLength();
        schema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema37);
        schema33.setExclusiveMinimum((java.lang.Boolean) true);
        schema33.setType(",");
        java.lang.Boolean boolean48 = schema33.getExclusiveMinimum();
        schema23.setAdditionalProperties(schema33);
        schema23.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + true + "'", boolean48, true);
    }

    @Test
    public void test01402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01402");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema21.getProperties();
        java.lang.Integer int23 = schema21.getMinItems();
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("*/*");
        java.lang.Object obj26 = schema25.getExample();
        io.swagger.oas.models.media.Schema schema28 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.format("");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.multipleOf(bigDecimal31);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01403");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setNullable((java.lang.Boolean) false);
        objSchema0.setMaxProperties((java.lang.Integer) 0);
        objSchema0.setMaxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        objSchema0.setMultipleOf(bigDecimal13);
    }

    @Test
    public void test01404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01404");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean11 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = schema10.getNot();
        java.lang.String str13 = schema10.getName();
        java.lang.Boolean boolean14 = schema10.getNullable();
        java.lang.Integer int15 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema17 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = null;
        schema10.setEnum(objList18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01405");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML17 = objSchema5.getXml();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema5.xml(xML18);
        java.lang.String[] strArray24 = new java.lang.String[] { "*/*", "#/components/schemas/", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        objSchema5.addExtension("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) tagSetOptional26);
        objSchema5.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagSetOptional26);
    }

    @Test
    public void test01406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01406");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.String str13 = schema12.get$ref();
        java.lang.Boolean boolean14 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema15.set$ref("no description");
        objSchema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.name(",");
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema15.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str39 = objSchema15.getType();
        io.swagger.oas.models.media.Schema schema41 = objSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema12.additionalProperties(schema41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal44 = null;
        objSchema43.setMultipleOf(bigDecimal44);
        objSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = objSchema48.getMinLength();
        objSchema43.addEnumItemObject((java.lang.Object) objSchema48);
        objSchema48.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = objSchema48.maxProperties((java.lang.Integer) 0);
        objSchema48.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema62 = objSchema48.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = objSchema48.type(",");
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema48.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = objSchema48.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema41.additionalProperties(schema68);
        java.lang.String str70 = schema69.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema69.discriminator(discriminator71);
        io.swagger.oas.models.media.Schema schema74 = schema72.format("#/components/schemas/no description");
        java.lang.Boolean boolean75 = schema74.getNullable();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = null;
        schema74.setExtensions(strMap76);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#/components/schemas/no description" + "'", str70, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
    }

    @Test
    public void test01407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01407");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.lang.Boolean boolean16 = schema14.getReadOnly();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = schema18.getMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test01408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01408");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema9.getExternalDocs();
        schema9.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.minItems((java.lang.Integer) 0);
        schema15.setNullable((java.lang.Boolean) false);
        java.lang.Integer int18 = schema15.getMinProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test01409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01409");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        objSchema0.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.multipleOf(bigDecimal14);
        java.lang.Boolean boolean16 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) false);
        schema18.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01410");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        objSchema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema32.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema42 = objSchema18.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = objSchema18.format(",");
        io.swagger.oas.models.media.Schema schema46 = objSchema18.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema47.setExternalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema47.properties(strMap70);
        objSchema18.setProperties(strMap70);
        objSchema12.setProperties(strMap70);
        objSchema12.setFormat("*/*");
        java.lang.Boolean boolean76 = objSchema12.getWriteOnly();
        java.math.BigDecimal bigDecimal77 = null;
        objSchema12.setMultipleOf(bigDecimal77);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean76);
    }

    @Test
    public void test01411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01411");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = objSchema21.getMinLength();
        objSchema16.addEnumItemObject((java.lang.Object) objSchema21);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = objSchema21.maxProperties((java.lang.Integer) 0);
        objSchema21.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema35 = objSchema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = objSchema21.type(",");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        java.lang.Integer int39 = schema37.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema10.example((java.lang.Object) schema37);
        java.math.BigDecimal bigDecimal41 = schema40.getMultipleOf();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test01412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01412");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Integer int10 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = schema9.nullable((java.lang.Boolean) true);
        schema12.setFormat("");
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.not(schema15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        schema16.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test01413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01413");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        java.util.List<java.lang.String> strList17 = schema15.getRequired();
        java.lang.Integer int18 = schema15.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema19.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.type("");
        io.swagger.oas.models.media.Schema schema31 = schema29.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema39.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal43 = null;
        schema39.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = schema39.maxLength((java.lang.Integer) 10);
        schema31.addEnumItemObject((java.lang.Object) schema46);
        schema46.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        objSchema50.addEnumItemObject((java.lang.Object) objSchema55);
        objSchema50.setMinProperties((java.lang.Integer) 100);
        objSchema50.setPattern("");
        java.math.BigDecimal bigDecimal66 = objSchema50.getMultipleOf();
        java.lang.String[] strArray84 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        io.swagger.oas.models.media.Schema schema87 = objSchema50.required((java.util.List<java.lang.String>) strList85);
        java.util.List<java.lang.Object> objList88 = schema87.getEnum();
        schema46.setEnum(objList88);
        schema15.setEnum(objList88);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(objList88);
    }

    @Test
    public void test01414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01414");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.Schema schema32 = objSchema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema32.getMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
    }

    @Test
    public void test01415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01415");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = objSchema5.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        objSchema46.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema46.properties(strMap53);
        schema54.setExclusiveMinimum((java.lang.Boolean) true);
        schema44.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str58 = schema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = null;
        io.swagger.oas.models.media.Schema schema66 = objSchema59.addProperties("*/*", schema65);
        io.swagger.oas.models.media.XML xML67 = null;
        schema66.setXml(xML67);
        schema66.setTitle("*/*");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        schema66.setRequired((java.util.List<java.lang.String>) strList78);
        schema44.setRequired((java.util.List<java.lang.String>) strList78);
        schema29.setRequired((java.util.List<java.lang.String>) strList78);
        java.util.List<java.lang.String> strList83 = schema29.getRequired();
        schema29.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test01416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01416");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        objSchema10.addExtension("", (java.lang.Object) objSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema20.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = schema28.type("");
        io.swagger.oas.models.media.Schema schema31 = objSchema10.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal37 = null;
        objSchema36.setMultipleOf(bigDecimal37);
        objSchema36.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        objSchema36.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        schema50.setTitle("*/*");
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema50.xml(xML55);
        io.swagger.oas.models.media.Schema schema58 = schema50.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema58.getProperties();
        io.swagger.oas.models.media.Schema schema60 = objSchema36.properties(strMap59);
        io.swagger.oas.models.media.Schema schema62 = objSchema36.format(",");
        io.swagger.oas.models.media.Schema schema64 = objSchema36.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = objSchema36.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = objSchema36.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema33.properties(strMap67);
        schema9.setProperties(strMap67);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01417");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.lang.Boolean boolean40 = schema39.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        schema39.setDiscriminator(discriminator41);
        schema39.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test01418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01418");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        objSchema8.addExtension("", (java.lang.Object) objSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema12.setExternalDocs(externalDocumentation18);
        java.lang.String str20 = objSchema12.getName();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.title(",");
        java.lang.Integer int27 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.additionalProperties(schema26);
        java.math.BigDecimal bigDecimal29 = schema26.getMultipleOf();
        java.lang.Integer int30 = schema26.getMinLength();
        java.lang.Boolean boolean31 = schema26.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test01419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01419");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int29 = schema24.getMinProperties();
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test01420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01420");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema10.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList57 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema59 = objSchema49.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema49.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = objSchema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.title("*/*");
        java.lang.Boolean boolean65 = objSchema49.getExclusiveMinimum();
        objSchema49.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = objSchema49.getUniqueItems();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema49.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.String str76 = objSchema71.getName();
        objSchema71.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList79 = objSchema71.getEnum();
        io.swagger.oas.models.media.Schema schema81 = objSchema71.name(",");
        objSchema71.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = objSchema71.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = schema85.getEnum();
        io.swagger.oas.models.media.Schema schema88 = schema85.uniqueItems((java.lang.Boolean) true);
        schema70.setAdditionalProperties(schema85);
        io.swagger.oas.models.media.Schema schema90 = schema48.additionalProperties(schema85);
        schema10.setNot(schema90);
        schema10.setReadOnly((java.lang.Boolean) true);
        schema10.setWriteOnly((java.lang.Boolean) true);
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(objList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(objList79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test01421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01421");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema13.externalDocs(externalDocumentation20);
        java.lang.String str22 = schema13.getName();
        schema13.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01422");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        schema14.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01423");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.Integer int43 = schema39.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        io.swagger.oas.models.media.Schema schema54 = schema51.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        schema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema55);
        schema51.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema64.addProperties("*/*", schema70);
        io.swagger.oas.models.media.XML xML72 = null;
        schema71.setXml(xML72);
        schema71.setTitle("*/*");
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema71.xml(xML76);
        schema51.setDefault((java.lang.Object) xML76);
        io.swagger.oas.models.media.Schema schema80 = schema51.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema51.discriminator(discriminator81);
        io.swagger.oas.models.media.Schema schema84 = schema51.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean85 = schema39.equals((java.lang.Object) schema51);
        schema39.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test01424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01424");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal36 = null;
        schema33.setMaximum(bigDecimal36);
        java.lang.Boolean boolean38 = schema33.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test01425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01425");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.discriminator(discriminator33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        objSchema35.addEnumItemObject((java.lang.Object) objSchema40);
        objSchema35.setMinProperties((java.lang.Integer) 100);
        objSchema35.setPattern("");
        java.math.BigDecimal bigDecimal51 = objSchema35.getMultipleOf();
        java.lang.String[] strArray69 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        io.swagger.oas.models.media.Schema schema72 = objSchema35.required((java.util.List<java.lang.String>) strList70);
        schema34.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema19.required((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema76 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test01426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01426");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        io.swagger.oas.models.media.Schema schema15 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema9.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01427");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.xml(xML32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = objSchema0.example((java.lang.Object) schema35);
        schema35.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean39 = schema35.getReadOnly();
        schema35.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal42 = schema35.getMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test01428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01428");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test01429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01429");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.setMaxLength((java.lang.Integer) 10);
        objSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01430");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        java.lang.Boolean boolean33 = objSchema24.getWriteOnly();
        io.swagger.oas.annotations.media.Content content34 = null;
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(content34, produces35, produces36, components37);
        boolean boolean39 = objSchema24.equals((java.lang.Object) contentOptional38);
        schema21.addExtension("no description", (java.lang.Object) objSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema41.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema24.setExample((java.lang.Object) objSchema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = objSchema41.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap52);
    }

    @Test
    public void test01431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01431");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        schema15.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema15.getAdditionalProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test01432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01432");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.maxItems((java.lang.Integer) 0);
        schema13.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        objSchema22.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.XML xML37 = null;
        schema36.setXml(xML37);
        schema36.setTitle("*/*");
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema36.xml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema36.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = schema44.getProperties();
        io.swagger.oas.models.media.Schema schema46 = objSchema22.properties(strMap45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        objSchema47.setExternalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema47.properties(strMap70);
        schema46.setProperties(strMap70);
        io.swagger.oas.models.media.Schema schema74 = schema46.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema74.title("");
        schema13.setDefault((java.lang.Object) "");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test01433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01433");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj16 = schema13.getExample();
        java.util.List<java.lang.String> strList17 = schema13.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        objSchema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema32.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema42 = objSchema18.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = schema42.addRequiredItem("");
        schema13.setExample((java.lang.Object) schema44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        schema13.setDiscriminator(discriminator47);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator46);
    }

    @Test
    public void test01434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01434");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        io.swagger.oas.models.media.Schema schema34 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema12.minimum(bigDecimal37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema12.minimum(bigDecimal39);
        java.math.BigDecimal bigDecimal41 = schema40.getMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test01435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01435");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.maximum(bigDecimal17);
        java.lang.String str19 = schema16.getTitle();
        java.lang.Integer int20 = schema16.getMaxLength();
        io.swagger.oas.models.media.Schema schema21 = schema16.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test01436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01436");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = schema27.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.XML xML37 = null;
        schema36.setXml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("*/*");
        io.swagger.oas.models.media.Schema schema41 = schema27.additionalProperties(schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema27.getProperties();
        objSchema5.setProperties(strMap42);
        java.lang.Integer int44 = objSchema5.getMinLength();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(int44);
    }

    @Test
    public void test01437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01437");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Boolean boolean25 = objSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal29 = null;
        objSchema28.setMultipleOf(bigDecimal29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        objSchema28.setRequired((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = objSchema28.pattern("*/*");
        java.lang.Boolean boolean40 = schema39.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema41.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema49.type("");
        io.swagger.oas.models.media.Schema schema53 = schema51.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal65 = null;
        schema61.setMinimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = schema61.maxLength((java.lang.Integer) 10);
        schema53.addEnumItemObject((java.lang.Object) schema68);
        java.math.BigDecimal bigDecimal70 = schema68.getMinimum();
        schema68.setType("#/components/schemas/no description");
        schema39.setExample((java.lang.Object) schema68);
        objSchema0.addEnumItemObject((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema75.addProperties("*/*", schema81);
        io.swagger.oas.models.media.XML xML83 = null;
        schema82.setXml(xML83);
        schema82.setTitle("*/*");
        io.swagger.oas.models.media.XML xML87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema82.xml(xML87);
        schema82.setName("#/components/schemas/");
        java.lang.Object obj91 = schema82.getDefault();
        io.swagger.oas.models.media.Schema schema93 = schema82.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj94 = schema93.getDefault();
        io.swagger.oas.models.media.Schema schema95 = schema68.not(schema93);
        io.swagger.oas.models.media.Schema schema97 = schema93.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01438");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema25.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = objSchema25.deprecated((java.lang.Boolean) false);
        schema38.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setNot(schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        schema42.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.String str53 = objSchema48.getName();
        objSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList56 = objSchema48.getEnum();
        io.swagger.oas.models.media.Schema schema58 = objSchema48.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = objSchema48.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = objSchema48.getExternalDocs();
        io.swagger.oas.models.media.Schema schema63 = objSchema48.title("*/*");
        java.lang.Boolean boolean64 = objSchema48.getExclusiveMinimum();
        objSchema48.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = objSchema48.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        objSchema48.setProperties(strMap69);
        objSchema48.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = objSchema48.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal76 = null;
        objSchema75.setMultipleOf(bigDecimal76);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        objSchema75.setRequired((java.util.List<java.lang.String>) strList82);
        objSchema48.setRequired((java.util.List<java.lang.String>) strList82);
        schema42.setRequired((java.util.List<java.lang.String>) strList82);
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema42.maximum(bigDecimal87);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(objList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test01439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01439");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.discriminator(discriminator33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        objSchema35.addEnumItemObject((java.lang.Object) objSchema40);
        objSchema35.setMinProperties((java.lang.Integer) 100);
        objSchema35.setPattern("");
        java.math.BigDecimal bigDecimal51 = objSchema35.getMultipleOf();
        java.lang.String[] strArray69 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        io.swagger.oas.models.media.Schema schema72 = objSchema35.required((java.util.List<java.lang.String>) strList70);
        schema34.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema19.required((java.util.List<java.lang.String>) strList70);
        java.lang.Boolean boolean75 = schema19.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema80.setPattern("no description");
        objSchema80.setReadOnly((java.lang.Boolean) false);
        objSchema76.addExtension("", (java.lang.Object) objSchema80);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = null;
        objSchema80.setExternalDocs(externalDocumentation86);
        java.lang.String str88 = objSchema80.getName();
        io.swagger.oas.models.media.Schema schema90 = objSchema80.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = null;
        io.swagger.oas.models.media.Schema schema92 = objSchema80.externalDocs(externalDocumentation91);
        schema19.setAdditionalProperties(schema92);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test01440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01440");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema58 = schema41.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema60.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        objSchema62.addEnumItemObject((java.lang.Object) objSchema67);
        objSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = objSchema67.maxProperties((java.lang.Integer) 0);
        java.lang.String str78 = objSchema67.getType();
        java.lang.Object obj79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema67.example(obj79);
        io.swagger.oas.models.media.Schema schema82 = objSchema67.description("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        // The following exception was thrown during execution in test generation
        try {
            schema61.addEnumItemObject((java.lang.Object) objSchema67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(schema61);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01441");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema58 = schema52.title("hi!");
        java.lang.Boolean boolean59 = schema58.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
    }

    @Test
    public void test01442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01442");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01443");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.readOnly((java.lang.Boolean) false);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema23.getExternalDocs();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation26);
    }

    @Test
    public void test01444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01444");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.xml(xML53);
        java.lang.Boolean boolean55 = schema52.getExclusiveMinimum();
        schema52.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.Schema schema67 = objSchema58.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema58.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = objSchema58.deprecated((java.lang.Boolean) false);
        schema71.set$ref("*/*");
        io.swagger.oas.models.media.XML xML74 = null;
        schema71.setXml(xML74);
        schema71.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        objSchema78.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = objSchema78.title("hi!");
        io.swagger.oas.models.media.XML xML85 = objSchema78.getXml();
        io.swagger.oas.models.media.Schema schema86 = schema71.additionalProperties((io.swagger.oas.models.media.Schema) objSchema78);
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema86.multipleOf(bigDecimal87);
        boolean boolean89 = schema52.equals((java.lang.Object) schema86);
        io.swagger.oas.models.media.Schema schema91 = schema86.addRequiredItem(",");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(xML85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test01445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01445");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        schema19.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema19.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = objSchema31.maxProperties((java.lang.Integer) 0);
        objSchema31.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.Schema schema54 = objSchema45.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal55 = schema54.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        schema54.addExtension("#/components/schemas/", (java.lang.Object) objSchema57);
        io.swagger.jaxrs2.OperationParser operationParser63 = new io.swagger.jaxrs2.OperationParser();
        schema54.addEnumItemObject((java.lang.Object) operationParser63);
        io.swagger.oas.models.media.Schema schema65 = objSchema31.addProperties("no description", schema54);
        java.math.BigDecimal bigDecimal66 = null;
        schema65.setMultipleOf(bigDecimal66);
        java.lang.String str68 = schema65.getPattern();
        java.util.List<java.lang.Object> objList69 = schema65.getEnum();
        java.lang.Integer int70 = schema65.getMinLength();
        schema19.setAdditionalProperties(schema65);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "no description" + "'", str68, "no description");
        org.junit.Assert.assertNull(objList69);
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test01446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01446");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.XML xML11 = objSchema0.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML11);
    }

    @Test
    public void test01447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01447");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.xml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        objSchema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.addRequiredItem(",");
        schema40.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj43 = schema40.getExample();
        java.util.List<java.lang.String> strList44 = schema40.getRequired();
        io.swagger.oas.models.media.Schema schema45 = schema26.required(strList44);
        schema11.setRequired(strList44);
        java.lang.String str47 = schema11.get$ref();
        io.swagger.oas.models.media.Schema schema49 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.XML xML52 = schema51.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(xML52);
    }

    @Test
    public void test01448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01448");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema7.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01449");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        java.lang.Integer int12 = schema10.getMaxProperties();
        java.lang.Boolean boolean13 = schema10.getWriteOnly();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        schema10.setMinimum(bigDecimal16);
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01450");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.responses.ApiResponse[]>();
    }

    @Test
    public void test01451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01451");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema10.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int36 = schema10.getMinLength();
        java.lang.String str37 = schema10.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test01452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01452");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList26 = schema25.getRequired();
        schema25.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
    }

    @Test
    public void test01453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01453");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.name("");
        java.math.BigDecimal bigDecimal19 = schema16.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test01454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01454");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Object obj16 = objSchema0.getExample();
        java.lang.Integer int17 = objSchema0.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test01455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01455");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema9.addProperties("", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = objSchema47.getMinLength();
        objSchema42.addEnumItemObject((java.lang.Object) objSchema47);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int56 = objSchema47.getMaxLength();
        schema38.addExtension("no description", (java.lang.Object) objSchema47);
        io.swagger.oas.models.media.Schema schema59 = schema38.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema38.getExtensions();
        schema30.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema schema63 = schema30.maxItems((java.lang.Integer) 0);
        schema63.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01456");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema42.properties(strMap49);
        schema50.setExclusiveMinimum((java.lang.Boolean) true);
        schema40.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str54 = schema40.get$ref();
        java.lang.Object obj55 = schema40.getDefault();
        schema25.setNot(schema40);
        schema25.setMinLength((java.lang.Integer) 0);
        java.lang.String str59 = schema25.getFormat();
        java.lang.String str60 = schema25.getFormat();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test01457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01457");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal42 = schema39.getMinimum();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test01458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01458");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        java.lang.String str14 = objSchema9.getName();
        objSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList17 = objSchema9.getEnum();
        io.swagger.oas.models.media.Schema schema19 = objSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema20.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = objSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = objSchema20.title("*/*");
        java.lang.Boolean boolean36 = objSchema20.getExclusiveMinimum();
        objSchema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = objSchema20.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        objSchema20.setProperties(strMap41);
        objSchema20.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = objSchema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        objSchema47.setRequired((java.util.List<java.lang.String>) strList54);
        objSchema20.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = objSchema9.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema59 = objSchema0.example((java.lang.Object) strList54);
        java.lang.Boolean boolean60 = objSchema0.getReadOnly();
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(objList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
    }

    @Test
    public void test01459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01459");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema8.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01460");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = objSchema11.getMultipleOf();
        objSchema11.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test01461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01461");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.lang.Boolean boolean6 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema8 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01462");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int17 = schema16.getMinItems();
        schema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema20.properties(strMap27);
        schema28.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema28.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal33 = null;
        schema32.setMultipleOf(bigDecimal33);
        schema16.setExample((java.lang.Object) schema32);
        schema16.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01463");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema14.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01464");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema19.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema23);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        schema19.setType(",");
        io.swagger.oas.models.media.Schema schema35 = schema19.deprecated((java.lang.Boolean) false);
        java.lang.Integer int36 = schema19.getMaxProperties();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema19.xml(xML37);
        io.swagger.oas.models.media.Schema schema39 = objSchema4.additionalProperties(schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        io.swagger.oas.models.media.XML xML42 = null;
        schema39.setXml(xML42);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01465");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema7.getExternalDocs();
        java.lang.Integer int23 = schema7.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.exclusiveMaximum((java.lang.Boolean) false);
        schema34.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean37 = schema34.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema39.properties(strMap46);
        schema47.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema47.minItems((java.lang.Integer) 100);
        java.lang.Integer int52 = schema51.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = objSchema53.addProperties("*/*", schema59);
        io.swagger.oas.models.media.Schema schema62 = objSchema53.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal63 = schema62.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        schema62.addExtension("#/components/schemas/", (java.lang.Object) objSchema65);
        io.swagger.jaxrs2.OperationParser operationParser71 = new io.swagger.jaxrs2.OperationParser();
        schema62.addEnumItemObject((java.lang.Object) operationParser71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema73.addProperties("*/*", schema79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = schema80.getExtensions();
        io.swagger.oas.models.media.Schema schema83 = schema80.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema85 = schema80.exclusiveMaximum((java.lang.Boolean) false);
        schema62.setAdditionalProperties(schema80);
        schema51.setNot(schema80);
        java.lang.Boolean boolean88 = schema80.getWriteOnly();
        io.swagger.oas.models.media.Schema schema89 = schema34.addProperties("#/components/schemas/no description", schema80);
        schema7.setDefault((java.lang.Object) schema80);
        io.swagger.oas.models.media.Schema schema92 = schema7.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal93 = schema7.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(bigDecimal93);
    }

    @Test
    public void test01466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01466");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema23.addProperties("*/*", schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.xml(xML34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.xml(xML36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        objSchema38.addExtension("", (java.lang.Object) objSchema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        objSchema42.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = objSchema42.addRequiredItem(",");
        schema51.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj54 = schema51.getExample();
        java.util.List<java.lang.String> strList55 = schema51.getRequired();
        io.swagger.oas.models.media.Schema schema56 = schema37.required(strList55);
        io.swagger.oas.models.media.Discriminator discriminator57 = schema56.getDiscriminator();
        schema22.setExample((java.lang.Object) schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        schema22.setDiscriminator(discriminator59);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
    }

    @Test
    public void test01467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01467");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        java.math.BigDecimal bigDecimal9 = schema7.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema7.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema7.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMultipleOf();
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01468");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.Boolean boolean53 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int70 = objSchema65.getMinLength();
        schema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema65);
        schema61.setExclusiveMinimum((java.lang.Boolean) true);
        schema61.setType(",");
        io.swagger.oas.models.media.Schema schema76 = objSchema0.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.XML xML77 = null;
        schema61.setXml(xML77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = schema61.getExternalDocs();
        java.math.BigDecimal bigDecimal80 = schema61.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = schema61.getExtensions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(externalDocumentation79);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNull(strMap81);
    }

    @Test
    public void test01469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01469");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean10 = schema9.getExclusiveMaximum();
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.uniqueItems((java.lang.Boolean) true);
        java.lang.String str15 = schema9.getTitle();
        java.lang.Integer int16 = schema9.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test01470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01470");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        schema7.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema7.type("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList29 = objSchema21.getEnum();
        io.swagger.oas.models.media.Schema schema31 = objSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema21.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = objSchema21.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = objSchema21.title("*/*");
        java.lang.Boolean boolean37 = objSchema21.getExclusiveMinimum();
        objSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = objSchema21.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        objSchema21.setProperties(strMap42);
        java.lang.Object obj44 = objSchema21.getExample();
        java.lang.Object obj45 = objSchema21.getExample();
        io.swagger.oas.models.media.Schema schema47 = objSchema21.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema7.not(schema49);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(objList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01471");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        schema9.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test01472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01472");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        objSchema26.setExternalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema26.properties(strMap49);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        objSchema51.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        objSchema51.setExternalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema58.addProperties("*/*", schema64);
        io.swagger.oas.models.media.XML xML66 = null;
        schema65.setXml(xML66);
        schema65.setTitle("*/*");
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema65.xml(xML70);
        io.swagger.oas.models.media.Schema schema73 = schema65.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema73.getProperties();
        io.swagger.oas.models.media.Schema schema75 = objSchema51.properties(strMap74);
        schema50.setProperties(strMap74);
        io.swagger.oas.models.media.Schema schema77 = schema9.properties(strMap74);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema78.setPattern("no description");
        objSchema78.setReadOnly((java.lang.Boolean) false);
        objSchema78.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = null;
        io.swagger.oas.models.media.Schema schema86 = objSchema78.properties(strMap85);
        io.swagger.oas.models.media.Schema schema88 = schema86.type("");
        io.swagger.oas.models.media.Schema schema90 = schema88.title("*/*");
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema88.multipleOf(bigDecimal91);
        io.swagger.oas.models.media.Schema schema93 = schema9.additionalProperties(schema88);
        java.lang.Integer int94 = schema88.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(int94);
    }

    @Test
    public void test01473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01473");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        java.lang.Integer int18 = schema7.getMaxProperties();
        java.lang.String str19 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema21 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setType("");
        java.math.BigDecimal bigDecimal27 = objSchema22.getMaximum();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema22.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = objSchema22.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = objSchema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema22.externalDocs(externalDocumentation34);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        schema35.setExternalDocs(externalDocumentation36);
        schema7.setNot(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema40.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMaximum((java.lang.Boolean) true);
        schema40.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "*/*" + "'", str19, "*/*");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test01474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01474");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema22.setXml(xML23);
        schema22.setTitle("*/*");
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.xml(xML27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.externalDocs(externalDocumentation29);
        schema10.setNot(schema30);
        java.lang.Integer int32 = schema30.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test01475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01475");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        schema13.setMaximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Integer int23 = schema13.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema13.getProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        schema13.setXml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.String str32 = objSchema27.getName();
        objSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList35 = objSchema27.getEnum();
        java.lang.String str36 = objSchema27.getTitle();
        objSchema27.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = objSchema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str41 = schema40.getTitle();
        boolean boolean42 = schema13.equals((java.lang.Object) str41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema13.getDiscriminator();
        schema13.setType("hi!");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(objList35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(discriminator43);
    }

    @Test
    public void test01476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01476");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test01477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01477");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.toString();
        schema14.setUniqueItems((java.lang.Boolean) true);
        schema14.setWriteOnly((java.lang.Boolean) false);
        schema14.setDescription("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01478");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01479");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema5.multipleOf(bigDecimal16);
        schema17.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01480");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.math.BigDecimal bigDecimal13 = null;
        schema11.setMaximum(bigDecimal13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema11.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test01481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01481");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        java.math.BigDecimal bigDecimal31 = null;
        schema29.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema29.$ref("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema29.$ref("");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        java.lang.String str39 = schema36.getTitle();
        io.swagger.oas.models.media.Schema schema40 = schema17.not(schema36);
        io.swagger.oas.models.media.Schema schema42 = schema40.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.minimum(bigDecimal43);
        java.lang.Integer int45 = schema40.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test01482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01482");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        java.lang.Boolean boolean23 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema24 = schema8.example((java.lang.Object) boolean23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema8.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema8.maxLength((java.lang.Integer) 1);
        schema8.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01483");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.media.Content[]> contentArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.media.Content[]>();
    }

    @Test
    public void test01484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01484");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema7.setExternalDocs(externalDocumentation17);
        java.math.BigDecimal bigDecimal19 = schema7.getMultipleOf();
        java.lang.String str20 = schema7.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01485");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        java.lang.Integer int66 = schema65.getMinItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = schema65.getExternalDocs();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(externalDocumentation67);
    }

    @Test
    public void test01486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01486");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test01487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01487");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = objSchema0.getNot();
        io.swagger.oas.models.media.Discriminator discriminator6 = objSchema0.getDiscriminator();
        objSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = objSchema0.getNullable();
        java.util.List<java.lang.Object> objList10 = objSchema0.getEnum();
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(objList10);
    }

    @Test
    public void test01488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01488");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = objSchema16.getNot();
        java.lang.Integer int22 = objSchema16.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        objSchema23.addEnumItemObject((java.lang.Object) objSchema28);
        objSchema23.setMinProperties((java.lang.Integer) 100);
        objSchema23.setPattern("");
        java.math.BigDecimal bigDecimal39 = objSchema23.getMultipleOf();
        java.lang.String[] strArray57 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        io.swagger.oas.models.media.Schema schema60 = objSchema23.required((java.util.List<java.lang.String>) strList58);
        java.util.List<java.lang.Object> objList61 = schema60.getEnum();
        objSchema16.setEnum(objList61);
        schema15.setEnum(objList61);
        java.lang.Object obj64 = schema15.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(objList61);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test01489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01489");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema24.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = schema16.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int40 = schema39.getMinLength();
        java.lang.Boolean boolean41 = schema39.getReadOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
    }

    @Test
    public void test01490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01490");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.minimum(bigDecimal12);
        objSchema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema5.readOnly((java.lang.Boolean) true);
        objSchema5.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01491");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setNullable((java.lang.Boolean) true);
        schema14.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01492");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal39 = null;
        objSchema38.setMultipleOf(bigDecimal39);
        objSchema38.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        objSchema38.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema38.properties(strMap61);
        schema37.setProperties(strMap61);
        io.swagger.oas.models.media.Schema schema65 = schema37.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = schema65.title("");
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.maximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema69.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.additionalProperties(schema72);
        java.lang.Integer int74 = schema73.getMinLength();
        io.swagger.oas.models.media.Schema schema75 = objSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema73);
        schema73.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test01493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01493");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema29.getDeprecated();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01494");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        schema16.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01495");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.math.BigDecimal bigDecimal8 = schema7.getMultipleOf();
        schema7.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.externalDocs(externalDocumentation11);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01496");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        java.lang.String str14 = schema13.getName();
        java.lang.Boolean boolean15 = schema13.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema13.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema13.type("#/components/schemas/no description");
        schema19.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01497");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML24 = schema7.getXml();
        java.math.BigDecimal bigDecimal25 = null;
        schema7.setMinimum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = null;
        schema7.setMinimum(bigDecimal27);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
    }

    @Test
    public void test01498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01498");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        java.math.BigDecimal bigDecimal16 = objSchema0.getMultipleOf();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema39.getType();
        schema39.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test01499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01499");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        schema30.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema30.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema36.addExtension("", (java.lang.Object) objSchema40);
        objSchema36.set$ref("*/*");
        schema30.addEnumItemObject((java.lang.Object) objSchema36);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema30.xml(xML49);
        java.lang.Integer int51 = schema50.getMinProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test01500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01500");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        objSchema18.addEnumItemObject((java.lang.Object) objSchema23);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = objSchema23.maxProperties((java.lang.Integer) 0);
        objSchema23.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal47 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        schema46.addExtension("#/components/schemas/", (java.lang.Object) objSchema49);
        io.swagger.jaxrs2.OperationParser operationParser55 = new io.swagger.jaxrs2.OperationParser();
        schema46.addEnumItemObject((java.lang.Object) operationParser55);
        io.swagger.oas.models.media.Schema schema57 = objSchema23.addProperties("no description", schema46);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema schema62 = objSchema5.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal64 = null;
        objSchema63.setMultipleOf(bigDecimal64);
        objSchema63.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema63.set$ref("no description");
        java.util.List<java.lang.Object> objList70 = objSchema63.getEnum();
        objSchema63.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema62.additionalProperties((io.swagger.oas.models.media.Schema) objSchema63);
        io.swagger.oas.models.media.Schema schema75 = schema62.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean76 = schema75.getReadOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + true + "'", boolean76, true);
    }
}

