import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest14 {

    public static boolean debug = false;

    @Test
    public void test07001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07001");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = objSchema5.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = objSchema20.getMinLength();
        objSchema15.addEnumItemObject((java.lang.Object) objSchema20);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int29 = objSchema20.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = objSchema20.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema39.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema54 = schema31.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = objSchema5.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.String str62 = objSchema57.getName();
        objSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList65 = objSchema57.getEnum();
        io.swagger.oas.models.media.Schema schema67 = objSchema57.name(",");
        io.swagger.oas.models.media.XML xML68 = objSchema57.getXml();
        objSchema57.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema55.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema57);
        java.math.BigDecimal bigDecimal72 = null;
        objSchema57.setMultipleOf(bigDecimal72);
        objSchema57.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema57.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(objList65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(xML68);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test07002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07002");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = schema16.getNot();
        schema16.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test07003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07003");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        objSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = objSchema13.getProperties();
        java.lang.Boolean boolean17 = objSchema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema19 = objSchema13.minProperties((java.lang.Integer) 0);
        schema19.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema19.minProperties((java.lang.Integer) 1);
        schema19.setMinLength((java.lang.Integer) 0);
        objSchema0.setExample((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07004");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        java.lang.Object obj10 = objSchema0.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test07005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07005");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        java.lang.Object obj17 = objSchema5.getExample();
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) 1);
        java.lang.String str20 = objSchema5.toString();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07006");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema12.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem(",");
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str29 = schema24.getName();
        io.swagger.oas.models.media.Schema schema31 = schema24.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07007");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema7.addExtension("#/components/schemas/", (java.lang.Object) schema21);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema7.xml(xML24);
        java.lang.String str26 = schema7.getName();
        java.lang.Object obj27 = schema7.getExample();
        schema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test07008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07008");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        schema16.setTitle("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test07009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07009");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Integer int24 = schema7.getMaxProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema7.xml(xML25);
        schema26.setMaxProperties((java.lang.Integer) (-1));
        schema26.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema26.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07010");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.xml(xML25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema11.addProperties(",", schema26);
        java.lang.Boolean boolean29 = schema28.getNullable();
        io.swagger.oas.models.media.Schema schema31 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.String str32 = schema28.getTitle();
        java.math.BigDecimal bigDecimal33 = null;
        schema28.setMinimum(bigDecimal33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema28.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(externalDocumentation35);
    }

    @Test
    public void test07011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07011");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07012");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.$ref("*/*");
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int11 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test07013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07013");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema16.getType();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema16.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        io.swagger.oas.models.media.Schema schema46 = schema43.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal47 = null;
        schema43.setMinimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema43.maxLength((java.lang.Integer) 10);
        schema35.addEnumItemObject((java.lang.Object) schema50);
        io.swagger.oas.annotations.servers.Server server52 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray53 = new io.swagger.oas.annotations.servers.Server[] { server52 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional54 = io.swagger.jaxrs2.OperationParser.getServers(serverArray53);
        schema35.setDefault((java.lang.Object) serverListOptional54);
        java.lang.Boolean boolean56 = schema35.getDeprecated();
        io.swagger.oas.models.media.Schema schema58 = schema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema35.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema35.multipleOf(bigDecimal61);
        schema16.addEnumItemObject((java.lang.Object) bigDecimal61);
        io.swagger.oas.models.media.Schema schema65 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema65.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(serverArray53);
        org.junit.Assert.assertNotNull(serverListOptional54);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07014");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test07015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07015");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.String str13 = objSchema8.getName();
        objSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList16 = objSchema8.getEnum();
        io.swagger.oas.models.media.Schema schema18 = objSchema8.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema8.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = objSchema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("#/components/schemas/");
        objSchema23.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = objSchema8.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema23);
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 1);
        schema41.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.additionalProperties(schema41);
        java.lang.String str47 = objSchema0.getType();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(objList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test07016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07016");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj25 = objSchema0.getExample();
        java.lang.Integer int26 = objSchema0.getMaxProperties();
        java.math.BigDecimal bigDecimal27 = objSchema0.getMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test07017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07017");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema9.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema9.format("hi!");
        java.lang.Integer int14 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal15 = null;
        schema9.setMaximum(bigDecimal15);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test07018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07018");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.XML xML9 = schema8.getXml();
        java.math.BigDecimal bigDecimal10 = null;
        schema8.setMaximum(bigDecimal10);
        java.lang.Boolean boolean12 = schema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = schema8.description("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema8.setDiscriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema8.setXml(xML17);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test07019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07019");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.description(",");
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema17.setDiscriminator(discriminator18);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07020");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema34.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = objSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = objSchema34.title("*/*");
        java.lang.Boolean boolean50 = objSchema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema52 = objSchema34.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema52.addRequiredItem("*/*");
        schema9.setNot(schema54);
        java.util.List<java.lang.Object> objList56 = schema54.getEnum();
        schema54.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(objList56);
    }

    @Test
    public void test07021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07021");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema13.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        java.math.BigDecimal bigDecimal22 = objSchema17.getMaximum();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema17.setMultipleOf(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = objSchema17.getMaximum();
        objSchema17.setDescription("*/*");
        objSchema17.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema17);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test07022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07022");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = schema14.getMinimum();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.format("");
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema21.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test07023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07023");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        objSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal78 = null;
        objSchema77.setMultipleOf(bigDecimal78);
        objSchema77.setType("");
        java.math.BigDecimal bigDecimal82 = objSchema77.getMaximum();
        java.math.BigDecimal bigDecimal83 = null;
        objSchema77.setMultipleOf(bigDecimal83);
        java.math.BigDecimal bigDecimal85 = objSchema77.getMaximum();
        java.lang.String str86 = objSchema77.getTitle();
        objSchema0.setNot((io.swagger.oas.models.media.Schema) objSchema77);
        objSchema0.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test07024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07024");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema25.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = objSchema25.deprecated((java.lang.Boolean) false);
        schema38.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setNot(schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.minItems((java.lang.Integer) 100);
        schema42.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str48 = schema42.getDescription();
        schema42.setDeprecated((java.lang.Boolean) true);
        schema42.setMaxProperties((java.lang.Integer) 0);
        schema42.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema56.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test07025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07025");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        java.math.BigDecimal bigDecimal16 = objSchema0.getMultipleOf();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.required((java.util.List<java.lang.String>) strList35);
        objSchema0.setMinProperties((java.lang.Integer) 1);
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean42 = objSchema0.getUniqueItems();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    }

    @Test
    public void test07026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07026");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.lang.Boolean boolean18 = schema17.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema17.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema17.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str23 = schema22.getTitle();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test07027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07027");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = objSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema5 = schema4.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema5.setExternalDocs(externalDocumentation6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(schema5);
    }

    @Test
    public void test07028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07028");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema12.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem(",");
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str29 = schema24.getName();
        io.swagger.oas.models.media.Schema schema31 = schema24.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test07029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07029");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema schema23 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.discriminator(discriminator24);
        java.math.BigDecimal bigDecimal26 = schema25.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test07030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07030");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = schema29.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema29.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.minProperties((java.lang.Integer) 1);
        schema34.setFormat("");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07031");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema9.setExternalDocs(externalDocumentation26);
        java.lang.Boolean boolean28 = schema9.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal29 = schema9.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test07032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07032");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.Object> objList24 = schema21.getEnum();
        java.lang.Boolean boolean25 = schema21.getExclusiveMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
    }

    @Test
    public void test07033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07033");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        objSchema0.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList21 = schema20.getRequired();
        java.util.List<java.lang.Object> objList22 = schema20.getEnum();
        java.lang.Object obj23 = schema20.getDefault();
        io.swagger.oas.models.media.Schema schema25 = schema20.minProperties((java.lang.Integer) 1);
        schema20.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07034");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07035");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.name(",");
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema17.getDiscriminator();
        java.lang.Boolean boolean20 = schema17.getExclusiveMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema17.getExtensions();
        schema17.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema17.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        java.math.BigDecimal bigDecimal27 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema28 = schema26.maximum(bigDecimal27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "no description" + "'", str18, "no description");
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test07036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07036");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = objSchema0.getNot();
        java.lang.String str13 = objSchema0.getType();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test07037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07037");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema69 = schema67.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal70 = schema69.getMaximum();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema69.multipleOf(bigDecimal71);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test07038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07038");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.type("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07039");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        java.lang.Object obj23 = objSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = objSchema0.getDiscriminator();
        java.lang.Boolean boolean25 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator26 = objSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema27.addExtension("", (java.lang.Object) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema37.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("");
        io.swagger.oas.models.media.Schema schema48 = objSchema27.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema50 = objSchema27.readOnly((java.lang.Boolean) false);
        objSchema0.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema53 = schema50.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = objSchema54.title("hi!");
        io.swagger.oas.models.media.Schema schema62 = schema60.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema62.$ref("no description");
        schema62.setName("");
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema62.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema62.minimum(bigDecimal70);
        schema62.setUniqueItems((java.lang.Boolean) false);
        schema50.addEnumItemObject((java.lang.Object) schema62);
        java.math.BigDecimal bigDecimal75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema50.minimum(bigDecimal75);
        java.lang.Integer int77 = schema50.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
    }

    @Test
    public void test07040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07040");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema12.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07041");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema23.getExternalDocs();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.maximum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07042");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.title("hi!");
        java.lang.Object obj27 = schema26.getExample();
        schema12.addEnumItemObject((java.lang.Object) schema26);
        io.swagger.oas.models.media.XML xML29 = null;
        schema12.setXml(xML29);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test07043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07043");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = objSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMultipleOf(bigDecimal21);
        schema20.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07044");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList27 = objSchema19.getEnum();
        java.lang.Boolean boolean28 = objSchema19.getWriteOnly();
        java.lang.Boolean boolean29 = objSchema19.getReadOnly();
        io.swagger.oas.models.media.Schema schema31 = objSchema19.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema31);
        java.lang.Integer int33 = schema31.getMinItems();
        io.swagger.oas.models.media.Schema schema35 = schema31.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07045");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        io.swagger.oas.models.media.Schema schema37 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.description("");
        io.swagger.oas.models.media.Schema schema40 = schema39.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = objSchema47.getMinLength();
        objSchema42.addEnumItemObject((java.lang.Object) objSchema47);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int56 = objSchema47.getMaxLength();
        io.swagger.oas.models.media.Schema schema58 = objSchema47.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal59 = objSchema47.getMaximum();
        io.swagger.oas.models.media.Schema schema61 = objSchema47.deprecated((java.lang.Boolean) true);
        schema39.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema61);
        schema39.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test07046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07046");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        java.lang.String str22 = objSchema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema23.addProperties("*/*", schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.title("hi!");
        java.lang.Object obj33 = schema32.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        schema42.setXml(xML43);
        schema42.setTitle("*/*");
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema42.xml(xML47);
        io.swagger.oas.models.media.Schema schema50 = schema42.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = schema50.getProperties();
        java.util.List<java.lang.String> strList52 = schema50.getRequired();
        io.swagger.oas.models.media.Schema schema53 = schema32.addProperties("", schema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal66 = null;
        objSchema65.setMultipleOf(bigDecimal66);
        objSchema65.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int75 = objSchema70.getMinLength();
        objSchema65.addEnumItemObject((java.lang.Object) objSchema70);
        objSchema70.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int79 = objSchema70.getMaxLength();
        schema61.addExtension("no description", (java.lang.Object) objSchema70);
        io.swagger.oas.models.media.Schema schema82 = schema61.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema61.getExtensions();
        schema53.setExtensions(strMap83);
        objSchema13.setExtensions(strMap83);
        schema10.setExtensions(strMap83);
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal91 = null;
        schema10.setMultipleOf(bigDecimal91);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test07047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07047");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema26 = objSchema0.getNot();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maximum(bigDecimal40);
        objSchema32.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal45 = null;
        objSchema44.setMultipleOf(bigDecimal45);
        objSchema44.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = objSchema44.title("hi!");
        java.lang.Object obj51 = null;
        objSchema44.addEnumItemObject(obj51);
        objSchema44.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = objSchema32.not((io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.Schema schema56 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.Schema schema58 = schema56.deprecated((java.lang.Boolean) false);
        java.lang.Integer int59 = schema58.getMaxLength();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test07048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07048");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = objSchema22.getMinLength();
        objSchema17.addEnumItemObject((java.lang.Object) objSchema22);
        objSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema22.maxProperties((java.lang.Integer) 0);
        objSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema36.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        schema45.addExtension("#/components/schemas/", (java.lang.Object) objSchema48);
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        schema45.addEnumItemObject((java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema schema56 = objSchema22.addProperties("no description", schema45);
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        java.lang.String str59 = schema56.getPattern();
        java.lang.Integer int60 = schema56.getMinLength();
        io.swagger.oas.models.media.Schema schema62 = schema56.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema5.addExtension("", (java.lang.Object) schema64);
        objSchema5.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test07049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07049");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.String str12 = schema8.getName();
        schema8.setMinLength((java.lang.Integer) 0);
        java.lang.String str15 = schema8.get$ref();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test07050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07050");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema11.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = objSchema11.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema22.set$ref("no description");
        objSchema22.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema22.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = objSchema22.name("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = objSchema22.getExtensions();
        schema21.setExtensions(strMap48);
        schema21.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test07051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07051");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        java.lang.String str11 = schema7.toString();
        io.swagger.oas.models.media.Schema schema13 = schema7.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema7.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = objSchema15.title("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema23.$ref("no description");
        io.swagger.oas.models.media.Schema schema26 = schema7.additionalProperties(schema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema25.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
    }

    @Test
    public void test07052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07052");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema7.getExtensions();
        java.lang.String str15 = schema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = objSchema16.title("*/*");
        java.lang.Boolean boolean32 = objSchema16.getExclusiveMinimum();
        objSchema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = objSchema16.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        objSchema16.setProperties(strMap37);
        objSchema16.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = objSchema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal44 = null;
        objSchema43.setMultipleOf(bigDecimal44);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        objSchema43.setRequired((java.util.List<java.lang.String>) strList50);
        objSchema16.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema55 = objSchema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList56 = schema55.getRequired();
        io.swagger.oas.models.media.Schema schema57 = schema7.required(strList56);
        java.math.BigDecimal bigDecimal58 = schema57.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
    }

    @Test
    public void test07053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07053");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int15 = objSchema4.getMinProperties();
        io.swagger.oas.models.media.XML xML16 = objSchema4.getXml();
        objSchema4.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = objSchema20.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = objSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = objSchema20.title("*/*");
        java.lang.Boolean boolean36 = objSchema20.getExclusiveMinimum();
        objSchema20.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean39 = objSchema20.getDeprecated();
        io.swagger.oas.models.media.Schema schema40 = objSchema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema40.getProperties();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test07054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07054");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator11 = objSchema0.getDiscriminator();
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        schema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = objSchema31.getName();
        objSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList39 = objSchema31.getEnum();
        java.lang.String str40 = objSchema31.getTitle();
        objSchema31.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = objSchema31.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema44.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema47.getNot();
        java.lang.Integer int53 = objSchema47.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal55 = null;
        objSchema54.setMultipleOf(bigDecimal55);
        objSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int64 = objSchema59.getMinLength();
        objSchema54.addEnumItemObject((java.lang.Object) objSchema59);
        objSchema54.setMinProperties((java.lang.Integer) 100);
        objSchema54.setPattern("");
        java.math.BigDecimal bigDecimal70 = objSchema54.getMultipleOf();
        java.lang.String[] strArray88 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = objSchema54.required((java.util.List<java.lang.String>) strList89);
        java.util.List<java.lang.Object> objList92 = schema91.getEnum();
        objSchema47.setEnum(objList92);
        schema46.setEnum(objList92);
        java.util.List<java.lang.Object> objList95 = schema46.getEnum();
        schema30.setEnum(objList95);
        schema15.setEnum(objList95);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(objList39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(objList92);
        org.junit.Assert.assertNotNull(objList95);
    }

    @Test
    public void test07055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07055");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = objSchema31.getName();
        objSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList39 = objSchema31.getEnum();
        io.swagger.oas.models.media.Schema schema41 = objSchema31.name(",");
        io.swagger.oas.models.media.XML xML42 = objSchema31.getXml();
        java.util.List<java.lang.String> strList43 = objSchema31.getRequired();
        schema30.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema31);
        java.lang.Boolean boolean45 = schema30.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(objList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(xML42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test07056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07056");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str24 = objSchema0.getType();
        java.lang.String str25 = objSchema0.getType();
        io.swagger.oas.models.media.Schema schema27 = objSchema0.pattern("no description");
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = objSchema0.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema0.multipleOf(bigDecimal34);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07057");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.lang.Integer int12 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("no description");
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        java.lang.Integer int29 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.title("hi!");
        java.lang.Object obj40 = schema39.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        schema49.setXml(xML50);
        schema49.setTitle("*/*");
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.xml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema49.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        java.util.List<java.lang.String> strList59 = schema57.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema39.addProperties("", schema57);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal73 = null;
        objSchema72.setMultipleOf(bigDecimal73);
        objSchema72.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int82 = objSchema77.getMinLength();
        objSchema72.addEnumItemObject((java.lang.Object) objSchema77);
        objSchema77.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int86 = objSchema77.getMaxLength();
        schema68.addExtension("no description", (java.lang.Object) objSchema77);
        io.swagger.oas.models.media.Schema schema89 = schema68.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema68.getExtensions();
        schema60.setExtensions(strMap90);
        schema27.setExtensions(strMap90);
        schema10.setExtensions(strMap90);
        io.swagger.oas.models.media.Schema schema95 = schema10.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test07058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07058");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema9.minItems((java.lang.Integer) (-1));
        java.lang.String str30 = schema9.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema31.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = objSchema31.getAdditionalProperties();
        objSchema31.setTitle("no description");
        schema9.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema schema50 = objSchema31.name("");
        schema50.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema50.getProperties();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap53);
    }

    @Test
    public void test07059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07059");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema12.getExtensions();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test07060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07060");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema14.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.minimum(bigDecimal20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.lang.Integer int24 = schema21.getMaxLength();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test07061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07061");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        java.lang.Object obj16 = null;
        schema7.setDefault(obj16);
        io.swagger.oas.models.media.Schema schema19 = schema7.uniqueItems((java.lang.Boolean) false);
        schema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema19.getExternalDocs();
        java.lang.Integer int23 = schema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema19.getNot();
        java.lang.Boolean boolean25 = schema19.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
    }

    @Test
    public void test07062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07062");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        schema8.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        objSchema16.setProperties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = objSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = objSchema44.getMinLength();
        schema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.Boolean boolean51 = schema40.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList60 = objSchema52.getEnum();
        io.swagger.oas.models.media.Schema schema62 = objSchema52.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema52.title("no description");
        schema40.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema schema66 = schema25.not(schema40);
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.discriminator(discriminator67);
        java.lang.String str69 = schema68.getFormat();
        io.swagger.oas.models.media.XML xML70 = schema68.getXml();
        boolean boolean71 = schema8.equals((java.lang.Object) schema68);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(objList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(xML70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test07063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07063");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = objSchema0.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = objSchema0.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test07064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07064");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema schema12 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema12.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07065");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema55.maxProperties((java.lang.Integer) 1);
        java.lang.Object obj60 = schema55.getDefault();
        java.lang.Object obj61 = schema55.getDefault();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test07066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07066");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema12.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema42.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test07067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07067");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal26 = null;
        objSchema0.setMaximum(bigDecimal26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.String str34 = objSchema29.getName();
        objSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList37 = objSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema39 = objSchema29.exclusiveMaximum((java.lang.Boolean) false);
        schema39.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str42 = schema39.get$ref();
        io.swagger.oas.models.media.Schema schema44 = schema39.maxProperties((java.lang.Integer) 1);
        java.lang.String str45 = schema44.toString();
        schema44.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean48 = schema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = schema44.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema44.addRequiredItem("no description");
        java.util.List<java.lang.Object> objList53 = schema52.getEnum();
        io.swagger.oas.models.media.Schema schema55 = schema52.nullable((java.lang.Boolean) true);
        objSchema0.addEnumItemObject((java.lang.Object) schema52);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(objList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str45, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(objList53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test07068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07068");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) true);
        schema15.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema15.pattern("");
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema26 = schema23.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07069");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMaximum(bigDecimal34);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test07070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07070");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = objSchema5.getProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test07071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07071");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("");
        schema26.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        schema26.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema31.xml(xML41);
        java.math.BigDecimal bigDecimal43 = schema42.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = schema52.getExtensions();
        io.swagger.oas.models.media.Schema schema55 = schema52.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema52.xml(xML56);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = schema57.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema42.addProperties(",", schema57);
        java.lang.Boolean boolean60 = schema42.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema62 = schema26.properties(strMap61);
        java.lang.String str63 = schema26.getType();
        java.lang.Integer int64 = schema26.getMaxLength();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(int64);
    }

    @Test
    public void test07072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07072");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.minimum(bigDecimal16);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07073");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema10.getExtensions();
        java.lang.Integer int14 = schema10.getMinLength();
        io.swagger.oas.models.media.Schema schema16 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str19 = schema18.get$ref();
        java.lang.Boolean boolean20 = schema18.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList29 = objSchema21.getEnum();
        io.swagger.oas.models.media.Schema schema31 = objSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema21.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = objSchema21.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal37 = null;
        objSchema36.setMultipleOf(bigDecimal37);
        objSchema36.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.addRequiredItem("#/components/schemas/");
        objSchema36.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = objSchema21.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema36);
        schema54.setType("hi!");
        io.swagger.oas.models.media.Schema schema58 = schema54.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema59 = schema18.additionalProperties(schema58);
        schema59.setPattern("");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str19, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(objList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test07074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07074");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        java.lang.String str32 = schema30.getName();
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "," + "'", str32, ",");
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07075");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        schema8.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema8.getNot();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test07076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07076");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema10 = null;
        schema9.setNot(schema10);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.writeOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList16 = schema9.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema17.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.type("");
        io.swagger.oas.models.media.Schema schema29 = schema27.title("*/*");
        io.swagger.oas.models.media.Schema schema31 = schema29.description(",");
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema29.required((java.util.List<java.lang.String>) strList35);
        schema29.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema29.getNot();
        io.swagger.oas.models.media.Schema schema42 = schema29.name("");
        java.lang.Integer int43 = schema29.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal45 = null;
        objSchema44.setMultipleOf(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = schema29.additionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        io.swagger.oas.models.media.XML xML48 = null;
        schema29.setXml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema52.setMultipleOf(bigDecimal53);
        objSchema52.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema52.set$ref("no description");
        objSchema52.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        java.lang.String str67 = objSchema62.getName();
        objSchema62.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList70 = objSchema62.getEnum();
        io.swagger.oas.models.media.Schema schema72 = objSchema62.name(",");
        objSchema62.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema52.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema77 = objSchema52.name("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = objSchema52.getExtensions();
        schema29.setExtensions(strMap78);
        schema9.setDefault((java.lang.Object) strMap78);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(objList70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test07077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07077");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj24 = schema23.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.addRequiredItem("#/components/schemas/");
        objSchema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = objSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema23.not((io.swagger.oas.models.media.Schema) objSchema25);
        io.swagger.oas.models.media.XML xML40 = objSchema25.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(xML40);
    }

    @Test
    public void test07078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07078");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.addRequiredItem("#/components/schemas/");
        java.lang.Boolean boolean20 = schema19.getExclusiveMaximum();
        schema19.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema19.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema19.getReadOnly();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.example((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema28 = objSchema0.name("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema28.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test07079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07079");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        schema8.setFormat("");
        schema8.setNullable((java.lang.Boolean) true);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema20.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getNullable();
        java.lang.Boolean boolean33 = schema31.getDeprecated();
        schema8.addEnumItemObject((java.lang.Object) boolean33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setType("");
        java.math.BigDecimal bigDecimal40 = objSchema35.getMaximum();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.minimum(bigDecimal41);
        objSchema35.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema8.additionalProperties((io.swagger.oas.models.media.Schema) objSchema35);
        io.swagger.oas.models.media.Schema schema47 = schema8.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07080");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema3.setPattern("no description");
        objSchema3.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = null;
        io.swagger.oas.models.media.Schema schema10 = objSchema3.addProperties("*/*", schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema14.getMinLength();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema14);
        schema10.setMinProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.Schema schema36 = objSchema27.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = schema36.getMinimum();
        java.math.BigDecimal bigDecimal38 = null;
        schema36.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema36.$ref("*/*");
        schema36.setPattern("*/*");
        schema25.addExtension("#/components/schemas/", (java.lang.Object) "*/*");
        io.swagger.oas.models.media.Schema schema46 = schema25.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema48 = schema46.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test07081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07081");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema8.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema8.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema8.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) true);
        schema23.setType("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMaximum(bigDecimal26);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07082");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>> strListSchema54 = new io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = schema7.not((io.swagger.oas.models.media.Schema) strListSchema54);
        java.lang.Integer int56 = schema55.getMaxItems();
        io.swagger.oas.models.media.Schema schema58 = schema55.format("");
        java.math.BigDecimal bigDecimal59 = schema58.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.String str66 = objSchema61.getName();
        objSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList69 = objSchema61.getEnum();
        io.swagger.oas.models.media.Schema schema71 = objSchema61.exclusiveMaximum((java.lang.Boolean) false);
        schema71.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str74 = schema71.get$ref();
        io.swagger.oas.models.media.Schema schema76 = schema71.maxProperties((java.lang.Integer) 1);
        java.lang.String str77 = schema76.toString();
        schema76.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean80 = schema76.getWriteOnly();
        io.swagger.oas.models.media.Schema schema82 = schema76.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema84 = schema76.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal85 = schema84.getMinimum();
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema84.maximum(bigDecimal86);
        java.math.BigDecimal bigDecimal88 = schema84.getMultipleOf();
        java.lang.String str89 = schema84.get$ref();
        io.swagger.oas.models.media.Schema schema91 = schema84.minItems((java.lang.Integer) 10);
        schema58.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema91);
        java.lang.Class<?> wildcardClass93 = schema58.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(objList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str77, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(bigDecimal88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str89, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test07083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07083");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = objSchema0.getAdditionalProperties();
        objSchema0.setTitle("no description");
        io.swagger.oas.models.media.Schema schema18 = objSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.readOnly((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        objSchema50.setExternalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema57.addProperties("*/*", schema63);
        io.swagger.oas.models.media.XML xML65 = null;
        schema64.setXml(xML65);
        schema64.setTitle("*/*");
        io.swagger.oas.models.media.XML xML69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema64.xml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema64.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema72.getProperties();
        io.swagger.oas.models.media.Schema schema74 = objSchema50.properties(strMap73);
        schema49.setProperties(strMap73);
        java.lang.String str76 = schema49.getType();
        io.swagger.oas.models.media.Discriminator discriminator77 = schema49.getDiscriminator();
        java.lang.Boolean boolean78 = schema49.getDeprecated();
        io.swagger.oas.models.media.Schema schema79 = schema24.additionalProperties(schema49);
        java.math.BigDecimal bigDecimal80 = null;
        schema49.setMaximum(bigDecimal80);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(discriminator77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test07084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07084");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema55.title("hi!");
        java.lang.Object obj62 = null;
        objSchema55.addEnumItemObject(obj62);
        io.swagger.oas.models.media.Schema schema65 = objSchema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema55.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema52.additionalProperties(schema67);
        schema52.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        objSchema72.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema72.properties(strMap79);
        io.swagger.oas.models.media.Schema schema82 = schema80.type("");
        io.swagger.oas.models.media.Schema schema84 = schema82.title("*/*");
        io.swagger.oas.models.media.Schema schema86 = schema84.description(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = null;
        schema86.setExternalDocs(externalDocumentation87);
        java.lang.Integer int89 = schema86.getMaxItems();
        schema52.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema86);
        schema86.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int89);
    }

    @Test
    public void test07085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07085");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setMaxLength((java.lang.Integer) 10);
        java.lang.String str8 = objSchema0.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test07086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07086");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        schema8.setMinProperties((java.lang.Integer) 1);
        java.lang.String str13 = schema8.toString();
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema8.minLength((java.lang.Integer) 10);
        java.lang.String str18 = schema8.getFormat();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test07087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07087");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema54 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal56 = null;
        objSchema55.setMultipleOf(bigDecimal56);
        objSchema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = objSchema55.title("hi!");
        java.lang.Object obj62 = null;
        objSchema55.addEnumItemObject(obj62);
        io.swagger.oas.models.media.Schema schema65 = objSchema55.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema55.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema52.additionalProperties(schema67);
        java.lang.Object obj69 = schema67.getDefault();
        io.swagger.oas.models.media.Schema schema71 = schema67.title("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str72 = schema67.getPattern();
        io.swagger.oas.models.media.XML xML73 = null;
        schema67.setXml(xML73);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test07088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07088");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Schema schema28 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        schema28.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07089");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema11.getExtensions();
        java.lang.String str14 = schema11.getDescription();
        schema11.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test07090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07090");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema0.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        objSchema35.addExtension("", (java.lang.Object) objSchema39);
        objSchema35.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema48 = objSchema35.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = objSchema35.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = objSchema35.getExtensions();
        objSchema0.setExtensions(strMap51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema0.maximum(bigDecimal53);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test07091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07091");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.lang.Integer int12 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.maximum(bigDecimal17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test07092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07092");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = objSchema0.readOnly((java.lang.Boolean) true);
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator6 = objSchema0.getDiscriminator();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(discriminator6);
    }

    @Test
    public void test07093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07093");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.title("hi!");
        java.lang.Object obj39 = schema38.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        io.swagger.oas.models.media.XML xML49 = null;
        schema48.setXml(xML49);
        schema48.setTitle("*/*");
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema48.xml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema48.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        java.util.List<java.lang.String> strList58 = schema56.getRequired();
        io.swagger.oas.models.media.Schema schema59 = schema38.addProperties("", schema56);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.XML xML68 = null;
        schema67.setXml(xML68);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal72 = null;
        objSchema71.setMultipleOf(bigDecimal72);
        objSchema71.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema76.setPattern("no description");
        objSchema76.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int81 = objSchema76.getMinLength();
        objSchema71.addEnumItemObject((java.lang.Object) objSchema76);
        objSchema76.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int85 = objSchema76.getMaxLength();
        schema67.addExtension("no description", (java.lang.Object) objSchema76);
        io.swagger.oas.models.media.Schema schema88 = schema67.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema67.getExtensions();
        schema59.setExtensions(strMap89);
        schema28.setExtensions(strMap89);
        schema18.setExtensions(strMap89);
        schema18.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int95 = schema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema97 = schema18.minProperties((java.lang.Integer) 10);
        schema18.setTitle("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(int95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test07094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07094");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.type(",");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = schema19.getNullable();
        java.lang.Boolean boolean21 = schema19.getDeprecated();
        io.swagger.oas.models.media.Schema schema23 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07095");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.nullable((java.lang.Boolean) false);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test07096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07096");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        objSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str8 = objSchema0.getTitle();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objSchema0.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema0.setExternalDocs(externalDocumentation10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test07097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07097");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        io.swagger.oas.models.media.Schema schema13 = schema11.getNot();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema11.setDiscriminator(discriminator14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test07098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07098");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean1 = objSchema0.getDeprecated();
        java.lang.Boolean boolean2 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema4 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        io.swagger.oas.models.media.Schema schema15 = objSchema6.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal16 = schema15.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        schema15.addExtension("#/components/schemas/", (java.lang.Object) objSchema18);
        io.swagger.jaxrs2.OperationParser operationParser24 = new io.swagger.jaxrs2.OperationParser();
        schema15.addEnumItemObject((java.lang.Object) operationParser24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        schema15.setAdditionalProperties(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema41.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema49.type("");
        io.swagger.oas.models.media.Schema schema53 = schema51.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = schema61.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal65 = null;
        schema61.setMinimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = schema61.maxLength((java.lang.Integer) 10);
        schema53.addEnumItemObject((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema71 = schema53.type("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = schema53.getProperties();
        io.swagger.oas.models.media.Schema schema73 = schema33.addProperties("", schema53);
        schema4.addExtension("#/components/schemas/hi!", (java.lang.Object) schema33);
        java.math.BigDecimal bigDecimal75 = schema33.getMinimum();
        io.swagger.oas.models.media.Schema schema76 = null;
        schema33.setAdditionalProperties(schema76);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(bigDecimal75);
    }

    @Test
    public void test07099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07099");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        java.math.BigDecimal bigDecimal16 = objSchema0.getMultipleOf();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.required((java.util.List<java.lang.String>) strList35);
        objSchema0.setMinProperties((java.lang.Integer) 1);
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Object obj42 = objSchema0.getExample();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test07100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07100");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.format("");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema7.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema7.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07101");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.math.BigDecimal bigDecimal14 = schema12.getMinimum();
        java.lang.Boolean boolean15 = schema12.getDeprecated();
        java.lang.Object obj16 = schema12.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test07102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07102");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.name("");
        schema18.setMaxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.maximum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07103");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        objSchema27.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = objSchema27.pattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = objSchema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = objSchema27.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test07104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07104");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.multipleOf(bigDecimal7);
        java.lang.Object obj9 = objSchema0.getExample();
        java.lang.Boolean boolean10 = objSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML11 = null;
        objSchema0.setXml(xML11);
        objSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test07105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07105");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str31 = schema30.getPattern();
        java.math.BigDecimal bigDecimal32 = null;
        schema30.setMinimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema34.set$ref("no description");
        java.util.List<java.lang.Object> objList41 = objSchema34.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema34.discriminator(discriminator42);
        java.lang.String str44 = objSchema34.toString();
        java.lang.String str45 = objSchema34.getFormat();
        java.lang.String str46 = objSchema34.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        objSchema48.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema48.properties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema56.type("");
        io.swagger.oas.models.media.Schema schema60 = schema56.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema62.$ref("");
        java.lang.String str65 = schema62.getName();
        java.lang.Integer int66 = schema62.getMaxItems();
        io.swagger.oas.models.media.Schema schema68 = schema62.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = objSchema34.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        schema30.addEnumItemObject((java.lang.Object) "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "no description" + "'", str31, "no description");
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str44, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07106");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema7.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test07107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07107");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        schema23.addExtension("#/components/schemas/", (java.lang.Object) objSchema26);
        io.swagger.jaxrs2.OperationParser operationParser32 = new io.swagger.jaxrs2.OperationParser();
        schema23.addEnumItemObject((java.lang.Object) operationParser32);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema44 = schema41.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setAdditionalProperties(schema41);
        schema12.setNot(schema41);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema41.minimum(bigDecimal49);
        java.lang.Integer int51 = schema41.getMaxProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test07108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07108");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema40.getExtensions();
        schema23.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema44 = schema15.additionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema46 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        schema48.setExternalDocs(externalDocumentation49);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test07109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07109");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        schema14.setMinItems((java.lang.Integer) 1);
        schema14.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minLength((java.lang.Integer) 0);
        schema20.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07110");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        schema15.setType(",");
        java.lang.Integer int18 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema20.getWriteOnly();
        java.math.BigDecimal bigDecimal22 = schema20.getMinimum();
        java.lang.Integer int23 = schema20.getMaxProperties();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.multipleOf(bigDecimal24);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07111");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinProperties();
        schema9.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema9.setDiscriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setFormat("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07112");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        objSchema5.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema5.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxLength((java.lang.Integer) 0);
        java.lang.Integer int22 = schema19.getMaxProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test07113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07113");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.Boolean boolean18 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList27 = objSchema19.getEnum();
        java.lang.Boolean boolean28 = objSchema19.getWriteOnly();
        java.lang.Boolean boolean29 = objSchema19.getReadOnly();
        io.swagger.oas.models.media.Schema schema31 = objSchema19.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setMaxProperties((java.lang.Integer) 1);
        objSchema33.setName("#/components/schemas/");
        java.lang.Integer int40 = objSchema33.getMaxItems();
        objSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema33.discriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema45 = schema32.example((java.lang.Object) discriminator43);
        java.lang.String str46 = schema45.getName();
        java.lang.Boolean boolean47 = schema45.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str46, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test07114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07114");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = objSchema0.getReadOnly();
        objSchema0.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
    }

    @Test
    public void test07115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07115");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = objSchema31.minItems((java.lang.Integer) 1);
        schema12.setAdditionalProperties(schema37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema37.getExtensions();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test07116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07116");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj11 = schema10.getDefault();
        io.swagger.oas.models.media.Schema schema13 = schema10.title(",");
        java.lang.Boolean boolean14 = schema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema23.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = schema36.getProperties();
        schema13.addExtension("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema36);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test07117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07117");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema schema17 = schema15.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07118");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        schema8.setExtensions(strMap11);
        java.math.BigDecimal bigDecimal13 = schema8.getMaximum();
        java.lang.Boolean boolean14 = schema8.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = objSchema15.getName();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList23 = objSchema15.getEnum();
        io.swagger.oas.models.media.Schema schema25 = objSchema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = objSchema15.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = objSchema15.getExternalDocs();
        io.swagger.oas.models.media.Schema schema30 = objSchema15.title("*/*");
        java.lang.Boolean boolean31 = objSchema15.getExclusiveMinimum();
        objSchema15.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = objSchema15.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        objSchema15.setProperties(strMap36);
        objSchema15.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema40.addProperties("*/*", schema46);
        io.swagger.oas.models.media.Schema schema49 = objSchema40.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema40.xml(xML50);
        io.swagger.oas.models.media.Schema schema53 = objSchema40.deprecated((java.lang.Boolean) false);
        schema53.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema57 = schema53.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema15.setNot(schema57);
        io.swagger.oas.models.media.Schema schema60 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema60.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 1);
        schema8.setDefault((java.lang.Object) 1);
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(objList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test07119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07119");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        io.swagger.oas.models.media.Schema schema19 = objSchema10.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema31.setMinProperties((java.lang.Integer) 100);
        objSchema31.setPattern("");
        java.math.BigDecimal bigDecimal47 = objSchema31.getMultipleOf();
        java.lang.String[] strArray65 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        io.swagger.oas.models.media.Schema schema68 = objSchema31.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = schema29.required((java.util.List<java.lang.String>) strList66);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07120");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema21.getEnum();
        java.lang.Boolean boolean29 = objSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema31 = objSchema21.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema21.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML34 = null;
        objSchema21.setXml(xML34);
        io.swagger.oas.models.media.Schema schema36 = schema20.not((io.swagger.oas.models.media.Schema) objSchema21);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07121");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema60 = schema44.example((java.lang.Object) schema59);
        schema60.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int63 = schema60.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema60.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema schema67 = schema65.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema69 = schema65.minProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean70 = schema65.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
    }

    @Test
    public void test07122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07122");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        objSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema21.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("hi!");
        objSchema0.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Discriminator discriminator33 = objSchema0.getDiscriminator();
        objSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = objSchema38.getName();
        objSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList46 = objSchema38.getEnum();
        io.swagger.oas.models.media.Schema schema48 = objSchema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = objSchema38.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = objSchema38.getExternalDocs();
        io.swagger.oas.models.media.Schema schema53 = objSchema38.title("*/*");
        java.lang.Boolean boolean54 = objSchema38.getExclusiveMinimum();
        objSchema38.setNullable((java.lang.Boolean) false);
        java.lang.Integer int57 = objSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema58.setPattern("no description");
        objSchema58.setReadOnly((java.lang.Boolean) false);
        java.lang.String str63 = objSchema58.getName();
        objSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList66 = objSchema58.getEnum();
        io.swagger.oas.models.media.Schema schema68 = objSchema58.name(",");
        objSchema58.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = null;
        io.swagger.oas.models.media.Schema schema78 = objSchema71.addProperties("*/*", schema77);
        io.swagger.oas.models.media.XML xML79 = null;
        schema78.setXml(xML79);
        schema78.setTitle("*/*");
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema78.xml(xML83);
        io.swagger.oas.models.media.Schema schema86 = schema78.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema88 = objSchema58.properties(strMap87);
        java.lang.Object obj89 = schema88.getDefault();
        io.swagger.oas.models.media.Schema schema90 = objSchema38.additionalProperties(schema88);
        java.lang.String str91 = schema88.getType();
        schema88.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema95 = schema88.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal96 = schema95.getMaximum();
        io.swagger.oas.models.media.Schema schema97 = objSchema0.additionalProperties(schema95);
        objSchema0.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(objList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(externalDocumentation51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(objList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(bigDecimal96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test07123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07123");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        schema20.setMaxProperties((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList25 = schema20.getRequired();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test07124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07124");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema13.maxProperties((java.lang.Integer) 0);
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07125");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.title("hi!");
        java.lang.Object obj27 = schema26.getExample();
        schema12.addEnumItemObject((java.lang.Object) schema26);
        io.swagger.oas.models.media.Schema schema29 = schema26.getNot();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test07126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07126");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("hi!");
        java.lang.Object obj34 = schema33.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        java.util.List<java.lang.String> strList53 = schema51.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema33.addProperties("", schema51);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int76 = objSchema71.getMinLength();
        objSchema66.addEnumItemObject((java.lang.Object) objSchema71);
        objSchema71.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int80 = objSchema71.getMaxLength();
        schema62.addExtension("no description", (java.lang.Object) objSchema71);
        io.swagger.oas.models.media.Schema schema83 = schema62.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = schema62.getExtensions();
        schema54.setExtensions(strMap84);
        schema23.setExtensions(strMap84);
        schema13.setExtensions(strMap84);
        java.lang.Object obj88 = new java.lang.Object();
        schema13.addEnumItemObject(obj88);
        java.lang.String str90 = schema13.getDescription();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test07127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07127");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        schema8.setMaxItems((java.lang.Integer) 10);
        schema8.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07128");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.lang.Boolean boolean13 = schema11.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        java.lang.Boolean boolean30 = objSchema14.getExclusiveMinimum();
        objSchema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema14.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        objSchema14.setProperties(strMap35);
        objSchema14.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = objSchema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = objSchema14.title("");
        schema11.setNot((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema45 = schema11.name("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test07129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07129");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("hi!");
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07130");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        objSchema18.addEnumItemObject((java.lang.Object) objSchema23);
        objSchema18.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        io.swagger.oas.models.media.Schema schema48 = objSchema18.not((io.swagger.oas.models.media.Schema) objSchema32);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) (-1));
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07131");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("#/components/schemas/no description");
        java.util.List<java.lang.String> strList18 = schema15.getRequired();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema15.getExtensions();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test07132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07132");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.maximum(bigDecimal17);
        java.lang.String str19 = schema16.getTitle();
        java.lang.Integer int20 = schema16.getMaxLength();
        schema16.setMinItems((java.lang.Integer) 0);
        java.lang.Object obj23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.example(obj23);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07133");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.xml(xML18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        objSchema20.addEnumItemObject((java.lang.Object) objSchema25);
        objSchema25.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = objSchema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = objSchema35.getName();
        objSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema35.addRequiredItem("#/components/schemas/");
        java.lang.Object obj45 = schema44.getDefault();
        io.swagger.oas.models.media.XML xML46 = schema44.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema54.setRequired((java.util.List<java.lang.String>) strList66);
        schema44.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = objSchema25.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema72 = schema70.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setDefault((java.lang.Object) schema72);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema72.maximum(bigDecimal74);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test07134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07134");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema12.setMultipleOf(bigDecimal13);
        objSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema12.set$ref("no description");
        objSchema12.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.String str27 = objSchema22.getName();
        objSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList30 = objSchema22.getEnum();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.name(",");
        objSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema12.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = objSchema12.name("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = objSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema40 = objSchema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        objSchema41.addEnumItemObject((java.lang.Object) objSchema46);
        objSchema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = objSchema46.maxProperties((java.lang.Integer) 0);
        java.lang.String str57 = objSchema46.getType();
        java.lang.Object obj58 = null;
        io.swagger.oas.models.media.Schema schema59 = objSchema46.example(obj58);
        io.swagger.oas.models.media.Schema schema61 = objSchema46.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        java.lang.String str69 = objSchema64.getName();
        objSchema64.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList72 = objSchema64.getEnum();
        io.swagger.oas.models.media.Schema schema74 = objSchema64.name(",");
        objSchema64.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema77.setPattern("no description");
        objSchema77.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = null;
        io.swagger.oas.models.media.Schema schema84 = objSchema77.addProperties("*/*", schema83);
        io.swagger.oas.models.media.XML xML85 = null;
        schema84.setXml(xML85);
        schema84.setTitle("*/*");
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema84.xml(xML89);
        io.swagger.oas.models.media.Schema schema92 = schema84.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = schema92.getProperties();
        io.swagger.oas.models.media.Schema schema94 = objSchema64.properties(strMap93);
        io.swagger.oas.models.media.Schema schema95 = schema61.properties(strMap93);
        schema40.setProperties(strMap93);
        schema9.setProperties(strMap93);
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = schema9.getExtensions();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(objList72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(strMap98);
    }

    @Test
    public void test07135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07135");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema9 = objSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = schema9.type("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test07136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07136");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema27 = schema8.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test07137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07137");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) true);
        objSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) 100);
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07138");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.util.List<java.lang.Object> objList14 = schema12.getEnum();
        java.lang.Object obj15 = null;
        boolean boolean16 = schema12.equals(obj15);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(objList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test07139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07139");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema8.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema40.getExtensions();
        schema23.setDefault((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema44 = schema15.additionalProperties(schema23);
        java.lang.String str45 = schema44.getName();
        java.lang.Integer int46 = schema44.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test07140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07140");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.XML xML39 = null;
        schema26.setXml(xML39);
        java.lang.Integer int41 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema43 = schema26.exclusiveMaximum((java.lang.Boolean) true);
        schema43.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07141");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema7.getExternalDocs();
        io.swagger.oas.models.media.Schema schema24 = schema7.writeOnly((java.lang.Boolean) true);
        schema7.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema7.description("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07142");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema21.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07143");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        objSchema15.addExtension("", (java.lang.Object) objSchema19);
        io.swagger.oas.models.media.Schema schema26 = objSchema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema7.additionalProperties(schema26);
        java.lang.Object obj28 = schema7.getExample();
        java.lang.Integer int29 = schema7.getMinLength();
        java.lang.Object obj30 = schema7.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test07144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07144");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        java.lang.Object obj23 = schema22.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.Schema schema33 = objSchema24.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal34 = schema33.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        schema42.setXml(xML43);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("*/*");
        io.swagger.oas.models.media.Schema schema47 = schema33.additionalProperties(schema42);
        java.lang.String str48 = schema42.getName();
        io.swagger.oas.models.media.Schema schema50 = schema42.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        objSchema51.setType("");
        java.math.BigDecimal bigDecimal56 = objSchema51.getMaximum();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema51.setMultipleOf(bigDecimal57);
        java.math.BigDecimal bigDecimal59 = objSchema51.getMaximum();
        objSchema51.setDescription("*/*");
        schema50.setNot((io.swagger.oas.models.media.Schema) objSchema51);
        io.swagger.oas.models.media.XML xML63 = null;
        schema50.setXml(xML63);
        java.lang.Integer int65 = schema50.getMaxProperties();
        io.swagger.oas.models.media.Schema schema67 = schema50.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema67.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal70 = null;
        schema69.setMinimum(bigDecimal70);
        schema22.setAdditionalProperties(schema69);
        schema69.setMinProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList75 = schema69.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test07145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07145");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.annotations.media.Content[] contentArray19 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional21 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional23 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional25 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional27 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional31 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional33 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional35 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components34);
        schema17.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) components34);
        java.math.BigDecimal bigDecimal37 = null;
        schema17.setMinimum(bigDecimal37);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contentArray19);
        org.junit.Assert.assertNotNull(contentOptional21);
        org.junit.Assert.assertNotNull(contentOptional23);
        org.junit.Assert.assertNotNull(contentOptional25);
        org.junit.Assert.assertNotNull(contentOptional27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(contentOptional31);
        org.junit.Assert.assertNotNull(contentOptional33);
        org.junit.Assert.assertNotNull(contentOptional35);
    }

    @Test
    public void test07146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07146");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        java.math.BigDecimal bigDecimal34 = objSchema29.getMaximum();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema29.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = objSchema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = objSchema29.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.type("");
        io.swagger.oas.models.media.Schema schema57 = schema55.title("*/*");
        io.swagger.oas.models.media.Schema schema59 = schema57.description(",");
        java.lang.String[] strArray62 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        io.swagger.oas.models.media.Schema schema65 = schema57.required((java.util.List<java.lang.String>) strList63);
        schema57.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema68 = schema57.getNot();
        io.swagger.oas.models.media.Schema schema70 = schema57.name("");
        java.lang.Integer int71 = schema57.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal73 = null;
        objSchema72.setMultipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema75 = schema57.additionalProperties((io.swagger.oas.models.media.Schema) objSchema72);
        java.lang.Boolean boolean76 = schema75.getReadOnly();
        schema75.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema79 = schema44.additionalProperties(schema75);
        io.swagger.oas.models.media.Schema schema81 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema82 = schema12.additionalProperties(schema44);
        schema82.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test07147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07147");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("");
        io.swagger.oas.models.media.Schema schema28 = schema26.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = schema28.description(",");
        java.lang.String[] strArray33 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        io.swagger.oas.models.media.Schema schema36 = schema28.required((java.util.List<java.lang.String>) strList34);
        schema28.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema39 = schema28.getNot();
        io.swagger.oas.models.media.Schema schema41 = schema28.name("");
        java.lang.Integer int42 = schema28.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal44 = null;
        objSchema43.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema28.additionalProperties((io.swagger.oas.models.media.Schema) objSchema43);
        java.lang.Boolean boolean47 = schema46.getReadOnly();
        schema46.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema50 = schema15.additionalProperties(schema46);
        java.lang.String str51 = schema50.getTitle();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test07148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07148");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema10.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList57 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema59 = objSchema49.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema49.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = objSchema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.title("*/*");
        java.lang.Boolean boolean65 = objSchema49.getExclusiveMinimum();
        objSchema49.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = objSchema49.getUniqueItems();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema49.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.String str76 = objSchema71.getName();
        objSchema71.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList79 = objSchema71.getEnum();
        io.swagger.oas.models.media.Schema schema81 = objSchema71.name(",");
        objSchema71.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = objSchema71.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = schema85.getEnum();
        io.swagger.oas.models.media.Schema schema88 = schema85.uniqueItems((java.lang.Boolean) true);
        schema70.setAdditionalProperties(schema85);
        io.swagger.oas.models.media.Schema schema90 = schema48.additionalProperties(schema85);
        schema10.setNot(schema90);
        schema10.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema95 = schema10.deprecated((java.lang.Boolean) false);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(objList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(objList79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test07149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07149");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        schema67.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.XML xML72 = null;
        schema67.setXml(xML72);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test07150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07150");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema0.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.xml(xML14);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test07151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07151");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        io.swagger.oas.models.media.Schema schema60 = objSchema50.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal61 = null;
        objSchema50.setMultipleOf(bigDecimal61);
        java.lang.Boolean boolean63 = objSchema50.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema65 = objSchema50.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema7.addProperties("hi!", schema65);
        io.swagger.oas.models.media.Schema schema68 = schema65.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema68.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07152");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("hi!");
        java.lang.String str11 = schema10.getName();
        java.math.BigDecimal bigDecimal12 = schema10.getMultipleOf();
        java.math.BigDecimal bigDecimal13 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = objSchema25.getMinLength();
        schema21.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema25);
        java.lang.Boolean boolean32 = schema21.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.String str39 = objSchema34.getName();
        objSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList42 = objSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema44 = objSchema34.name(",");
        objSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema47.addProperties("*/*", schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        schema54.setTitle("*/*");
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema54.xml(xML59);
        io.swagger.oas.models.media.Schema schema62 = schema54.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = objSchema34.properties(strMap63);
        java.lang.Object obj65 = schema64.getDefault();
        io.swagger.oas.models.media.Schema schema66 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema21.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema10.properties(strMap67);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema69.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema69.addExtension("", (java.lang.Object) objSchema73);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        objSchema73.setExternalDocs(externalDocumentation79);
        java.lang.String str81 = objSchema73.getName();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.exclusiveMaximum((java.lang.Boolean) true);
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema73);
        io.swagger.oas.models.media.Schema schema86 = objSchema73.deprecated((java.lang.Boolean) true);
        schema86.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str89 = schema86.get$ref();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(objList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test07153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07153");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal17 = objSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = objSchema5.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList20 = objSchema5.getRequired();
        objSchema5.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test07154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07154");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema13.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test07155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07155");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07156");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.xml(xML53);
        java.lang.Boolean boolean55 = schema52.getExclusiveMinimum();
        schema52.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = schema52.getXml();
        java.util.List<java.lang.String> strList59 = schema52.getRequired();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNull(strList59);
    }

    @Test
    public void test07157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07157");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        java.lang.Object obj15 = schema10.getDefault();
        schema10.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        schema10.setNot(schema32);
        io.swagger.oas.models.media.Schema schema37 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema10.minimum(bigDecimal38);
        schema10.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07158");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.deprecated((java.lang.Boolean) false);
        schema36.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07159");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema34.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.minimum(bigDecimal39);
        java.lang.Boolean boolean41 = schema38.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test07160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07160");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema13.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema20.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = schema28.type("");
        io.swagger.oas.models.media.Schema schema32 = schema30.title("*/*");
        io.swagger.oas.models.media.Schema schema34 = schema32.description(",");
        io.swagger.oas.models.media.Schema schema36 = schema32.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.xml(xML39);
        io.swagger.oas.models.media.XML xML41 = schema38.getXml();
        schema13.setAdditionalProperties(schema38);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
    }

    @Test
    public void test07161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07161");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        java.lang.String str13 = schema9.getType();
        io.swagger.oas.models.media.Schema schema15 = schema9.description("");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema9.setDiscriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema19.setExternalDocs(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07162");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getDefault();
        schema9.setMaxLength((java.lang.Integer) 100);
        java.lang.String str13 = schema9.toString();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07163");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema28.addExtension("", (java.lang.Object) objSchema32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        objSchema32.setExternalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.addRequiredItem(",");
        schema41.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema41.getAdditionalProperties();
        schema41.setWriteOnly((java.lang.Boolean) true);
        schema27.addEnumItemObject((java.lang.Object) true);
        java.math.BigDecimal bigDecimal48 = schema27.getMaximum();
        java.lang.Integer int49 = schema27.getMinItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = schema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema52 = schema27.readOnly((java.lang.Boolean) true);
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07164");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema21.getProperties();
        java.lang.Integer int23 = schema21.getMinItems();
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("*/*");
        schema25.setDescription("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07165");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = schema15.getMaxItems();
        java.lang.String str17 = schema15.getPattern();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "no description" + "'", str17, "no description");
    }

    @Test
    public void test07166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07166");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.name(",");
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema45.addProperties("*/*", schema51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        schema52.setTitle("*/*");
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema52.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema62 = objSchema32.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema31.properties(strMap61);
        objSchema12.setProperties(strMap61);
        java.lang.Boolean boolean65 = objSchema12.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean68 = objSchema67.getDeprecated();
        java.lang.Boolean boolean69 = objSchema67.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema77.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema77.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema81 = objSchema67.example((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema82 = objSchema12.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        java.lang.Integer int83 = objSchema12.getMaxItems();
        java.lang.Boolean boolean84 = objSchema12.getReadOnly();
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = objSchema12.multipleOf(bigDecimal85);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test07167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07167");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        java.lang.String str11 = schema8.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        objSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList20 = objSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema22 = objSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = objSchema12.getExternalDocs();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema12.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxLength((java.lang.Integer) 10);
        java.lang.String str30 = schema27.getFormat();
        java.lang.String str31 = schema27.get$ref();
        boolean boolean32 = schema8.equals((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.name(",");
        objSchema33.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema46.addProperties("*/*", schema52);
        io.swagger.oas.models.media.XML xML54 = null;
        schema53.setXml(xML54);
        schema53.setTitle("*/*");
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema53.xml(xML58);
        io.swagger.oas.models.media.Schema schema61 = schema53.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = schema61.getProperties();
        io.swagger.oas.models.media.Schema schema63 = objSchema33.properties(strMap62);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema68.setPattern("no description");
        objSchema68.setReadOnly((java.lang.Boolean) false);
        objSchema64.addExtension("", (java.lang.Object) objSchema68);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        objSchema68.setExternalDocs(externalDocumentation74);
        io.swagger.oas.models.media.Schema schema77 = objSchema68.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema79 = schema77.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList80 = schema77.getRequired();
        objSchema33.setDefault((java.lang.Object) strList80);
        schema27.setRequired(strList80);
        io.swagger.oas.models.media.Schema schema84 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(objList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test07168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07168");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.math.BigDecimal bigDecimal15 = null;
        objSchema5.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.Schema schema26 = objSchema17.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema26.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema42 = schema26.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList43 = schema42.getRequired();
        io.swagger.oas.models.media.Schema schema44 = objSchema5.not(schema42);
        objSchema5.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test07169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07169");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        java.lang.String str23 = schema20.get$ref();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test07170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07170");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema14.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema21.setExclusiveMinimum((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test07171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07171");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema8.getExternalDocs();
        schema8.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = schema8.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.discriminator(discriminator18);
        schema19.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07172");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema73.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList80 = objSchema73.getEnum();
        java.lang.Boolean boolean81 = objSchema73.getNullable();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = schema83.getMaximum();
        io.swagger.oas.models.media.Schema schema85 = schema7.additionalProperties(schema83);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema7.externalDocs(externalDocumentation86);
        schema87.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal90 = null;
        schema87.setMultipleOf(bigDecimal90);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(objList80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test07173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07173");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema9.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = schema35.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = objSchema39.getMinLength();
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema39);
        java.lang.Boolean boolean46 = schema35.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.String str53 = objSchema48.getName();
        objSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList56 = objSchema48.getEnum();
        io.swagger.oas.models.media.Schema schema58 = objSchema48.name(",");
        objSchema48.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = null;
        io.swagger.oas.models.media.Schema schema68 = objSchema61.addProperties("*/*", schema67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        schema68.setTitle("*/*");
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema68.xml(xML73);
        io.swagger.oas.models.media.Schema schema76 = schema68.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema76.getProperties();
        io.swagger.oas.models.media.Schema schema78 = objSchema48.properties(strMap77);
        java.lang.Object obj79 = schema78.getDefault();
        io.swagger.oas.models.media.Schema schema80 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema83 = schema35.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = schema9.not(schema83);
        io.swagger.oas.models.media.Schema schema86 = schema84.minLength((java.lang.Integer) (-1));
        schema84.setFormat("");
        io.swagger.oas.models.media.Schema schema89 = schema84.getNot();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(objList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test07174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07174");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Integer int10 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = schema9.nullable((java.lang.Boolean) true);
        schema12.setFormat("");
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.not(schema15);
        java.util.List<java.lang.String> strList17 = schema12.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strList17);
    }

    @Test
    public void test07175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07175");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Integer int28 = objSchema0.getMinLength();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test07176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07176");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.String str12 = objSchema7.getName();
        objSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = objSchema7.getEnum();
        io.swagger.oas.models.media.Schema schema17 = objSchema7.name(",");
        objSchema7.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema7.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema27.set$ref("no description");
        java.util.List<java.lang.Object> objList34 = objSchema27.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema27.discriminator(discriminator35);
        io.swagger.oas.models.media.Schema schema37 = objSchema0.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(objList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test07177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07177");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList5 = objSchema0.getEnum();
        java.lang.String str6 = objSchema0.getTitle();
        objSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test07178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07178");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test07179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07179");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema35 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal40 = null;
        objSchema39.setMultipleOf(bigDecimal40);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        objSchema39.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = schema37.example((java.lang.Object) objSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema49.setExternalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema49.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test07180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07180");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema30 = objSchema0.properties(strMap29);
        java.lang.Object obj31 = schema30.getDefault();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.xml(xML32);
        schema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML36 = schema30.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML36);
    }

    @Test
    public void test07181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07181");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = objSchema0.minLength((java.lang.Integer) 100);
        java.lang.Integer int19 = schema18.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test07182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07182");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str5 = objSchema0.get$ref();
        java.lang.String str6 = objSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        objSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema7.properties(strMap14);
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.minItems((java.lang.Integer) 100);
        java.lang.String str20 = schema19.get$ref();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema22 = objSchema0.additionalProperties(schema19);
        java.lang.Object obj23 = null;
        schema19.setDefault(obj23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.exclusiveMaximum((java.lang.Boolean) false);
        schema35.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str38 = schema35.get$ref();
        io.swagger.oas.models.media.Schema schema40 = schema35.maxProperties((java.lang.Integer) 1);
        java.lang.String str41 = schema40.toString();
        schema40.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema40.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema40.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean48 = schema47.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema50 = schema47.minProperties((java.lang.Integer) 1);
        schema19.setNot(schema50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str6, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str41, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + true + "'", boolean48, true);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07183");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema18.xml(xML28);
        java.math.BigDecimal bigDecimal30 = schema29.getMultipleOf();
        io.swagger.oas.models.media.Schema schema32 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema32.maxLength((java.lang.Integer) 0);
        schema14.setDefault((java.lang.Object) schema36);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07184");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema12.discriminator(discriminator28);
        java.lang.String str30 = schema29.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test07185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07185");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxItems((java.lang.Integer) 1);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07186");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.title("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = objSchema0.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        java.lang.Boolean boolean22 = schema19.getWriteOnly();
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
    }

    @Test
    public void test07187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07187");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        schema7.setNullable((java.lang.Boolean) false);
        schema7.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int19 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema21 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07188");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema7.getNot();
        io.swagger.oas.models.media.Discriminator discriminator17 = schema7.getDiscriminator();
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema29.additionalProperties(schema38);
        java.lang.String str44 = schema38.getName();
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        java.math.BigDecimal bigDecimal52 = objSchema47.getMaximum();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema47.setMultipleOf(bigDecimal53);
        java.math.BigDecimal bigDecimal55 = objSchema47.getMaximum();
        objSchema47.setDescription("*/*");
        schema46.setNot((io.swagger.oas.models.media.Schema) objSchema47);
        java.util.List<java.lang.String> strList59 = schema46.getRequired();
        java.lang.Integer int60 = schema46.getMaxProperties();
        schema46.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList63 = null;
        schema46.setRequired(strList63);
        io.swagger.oas.models.media.Schema schema66 = schema46.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema7.additionalProperties(schema66);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07189");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.minProperties((java.lang.Integer) (-1));
        schema10.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test07190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07190");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema21 = schema12.getNot();
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setType("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test07191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07191");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        java.lang.Boolean boolean31 = schema30.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.properties(strMap39);
        schema40.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema40.minItems((java.lang.Integer) 100);
        java.lang.String str45 = schema44.get$ref();
        schema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema44.deprecated((java.lang.Boolean) false);
        schema30.addEnumItemObject((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema52 = schema30.minItems((java.lang.Integer) (-1));
        schema30.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07192");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = objSchema32.getMinLength();
        objSchema27.addEnumItemObject((java.lang.Object) objSchema32);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema32.minimum(bigDecimal39);
        schema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema32);
        io.swagger.oas.models.media.Schema schema43 = objSchema32.format("");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07193");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setMaxProperties((java.lang.Integer) 1);
        objSchema0.setName("#/components/schemas/");
        objSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML9 = null;
        objSchema0.setXml(xML9);
    }

    @Test
    public void test07194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07194");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setMinProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean22 = schema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema17.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07195");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.XML xML73 = null;
        schema7.setXml(xML73);
        io.swagger.oas.models.media.XML xML75 = schema7.getXml();
        io.swagger.oas.models.media.Schema schema77 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setReadOnly((java.lang.Boolean) false);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(xML75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test07196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07196");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int29 = schema24.getMinProperties();
        java.lang.String str30 = schema24.getName();
        java.lang.String str31 = schema24.getTitle();
        schema24.setMinLength((java.lang.Integer) (-1));
        schema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema24.externalDocs(externalDocumentation36);
        java.lang.Boolean boolean38 = schema37.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test07197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07197");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        schema26.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema26.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test07198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07198");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        objSchema33.setType("");
        java.math.BigDecimal bigDecimal38 = objSchema33.getMaximum();
        java.math.BigDecimal bigDecimal39 = null;
        objSchema33.setMultipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = objSchema33.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        schema32.addEnumItemObject((java.lang.Object) schema44);
        java.lang.Boolean boolean48 = schema44.getReadOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test07199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07199");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema5.example(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean23 = schema20.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema25 = schema20.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema25.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + true + "'", boolean23, true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test07200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07200");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        java.math.BigDecimal bigDecimal14 = schema9.getMultipleOf();
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema9.maxItems((java.lang.Integer) 10);
        java.lang.Object obj19 = schema18.getDefault();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test07201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07201");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        java.lang.String str9 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema11 = schema7.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML12 = null;
        schema11.setXml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema11.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test07202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07202");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.String str22 = objSchema17.getName();
        objSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList25 = objSchema17.getEnum();
        io.swagger.oas.models.media.Schema schema27 = objSchema17.name(",");
        java.lang.Object obj28 = null;
        objSchema17.addEnumItemObject(obj28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema17.externalDocs(externalDocumentation30);
        schema7.setExample((java.lang.Object) objSchema17);
        java.lang.String str33 = objSchema17.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(objList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test07203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07203");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        java.math.BigDecimal bigDecimal34 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema35 = objSchema0.getAdditionalProperties();
        java.lang.Integer int36 = objSchema0.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test07204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07204");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int20 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema21.addRequiredItem("#/components/schemas/");
        schema30.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = schema30.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal38 = null;
        objSchema37.setMultipleOf(bigDecimal38);
        objSchema37.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = objSchema42.getMinLength();
        objSchema37.addEnumItemObject((java.lang.Object) objSchema42);
        objSchema42.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean51 = objSchema42.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.String str57 = objSchema52.getName();
        objSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema52.addRequiredItem("#/components/schemas/");
        java.lang.Object obj62 = schema61.getDefault();
        io.swagger.oas.models.media.XML xML63 = schema61.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema64.addProperties("*/*", schema70);
        io.swagger.oas.models.media.XML xML72 = null;
        schema71.setXml(xML72);
        schema71.setTitle("*/*");
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        schema71.setRequired((java.util.List<java.lang.String>) strList83);
        schema61.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema87 = objSchema42.required((java.util.List<java.lang.String>) strList83);
        schema35.setRequired((java.util.List<java.lang.String>) strList83);
        schema15.setRequired((java.util.List<java.lang.String>) strList83);
        java.lang.Boolean boolean90 = schema15.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = null;
        schema15.setExternalDocs(externalDocumentation91);
        java.lang.Boolean boolean93 = schema15.getReadOnly();
        schema15.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + true + "'", boolean51, true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test07205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07205");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        io.swagger.oas.models.media.Schema schema18 = schema15.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: [#/components/schemas/, ,, ,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07206");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        io.swagger.oas.models.media.Schema schema32 = objSchema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema27.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test07207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07207");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean30 = objSchema29.getDeprecated();
        java.lang.Boolean boolean31 = objSchema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = objSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema27.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = objSchema37.getName();
        objSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.addRequiredItem("#/components/schemas/");
        java.lang.Object obj47 = schema46.getDefault();
        io.swagger.oas.models.media.XML xML48 = schema46.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema56.setRequired((java.util.List<java.lang.String>) strList68);
        schema46.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema34.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema74 = schema72.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal75 = schema72.getMinimum();
        schema72.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
    }

    @Test
    public void test07208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07208");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal25 = null;
        schema21.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema21.maxLength((java.lang.Integer) 10);
        java.lang.String str29 = schema21.getTitle();
        io.swagger.oas.models.media.Schema schema31 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema10.example((java.lang.Object) schema21);
        java.lang.Class<?> wildcardClass33 = schema21.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test07209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07209");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema24.properties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema32.type("");
        io.swagger.oas.models.media.Schema schema36 = schema32.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema38.$ref("");
        io.swagger.oas.models.media.Schema schema42 = schema38.description("");
        objSchema0.setExample((java.lang.Object) schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema0.xml(xML44);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal49 = null;
        objSchema48.setMultipleOf(bigDecimal49);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        objSchema48.setRequired((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema59 = objSchema48.pattern("*/*");
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.xml(xML60);
        java.lang.Boolean boolean62 = schema59.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema64 = schema59.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = schema64.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = objSchema0.additionalProperties(schema64);
        io.swagger.oas.models.media.Schema schema68 = schema66.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07210");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema8.addProperties("*/*", schema14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("hi!");
        java.lang.Object obj18 = schema17.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        java.util.List<java.lang.String> strList37 = schema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = schema17.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        objSchema50.addEnumItemObject((java.lang.Object) objSchema55);
        objSchema55.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema55.getMaxLength();
        schema46.addExtension("no description", (java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema schema67 = schema46.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = schema46.getExtensions();
        schema38.setExtensions(strMap68);
        objSchema0.setExtensions(strMap68);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        objSchema0.setDiscriminator(discriminator71);
        io.swagger.oas.models.media.XML xML73 = null;
        objSchema0.setXml(xML73);
        java.math.BigDecimal bigDecimal75 = objSchema0.getMaximum();
        java.lang.String str76 = objSchema0.get$ref();
        java.lang.Boolean boolean77 = objSchema0.getUniqueItems();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(boolean77);
    }

    @Test
    public void test07211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07211");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 1);
        java.lang.String str15 = schema7.toString();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        objSchema16.addExtension("", (java.lang.Object) objSchema20);
        objSchema16.set$ref("*/*");
        java.lang.Object obj28 = objSchema16.getExample();
        java.util.List<java.lang.Object> objList29 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema31 = objSchema16.type(",");
        io.swagger.oas.models.media.Schema schema33 = objSchema16.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = objSchema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = objSchema16.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema38.addProperties("*/*", schema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal49 = null;
        schema45.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema schema60 = objSchema51.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema62 = schema60.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int63 = schema62.getMaxProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema62.getExtensions();
        schema45.setDefault((java.lang.Object) schema62);
        java.lang.Boolean boolean66 = schema62.getNullable();
        java.lang.Boolean boolean67 = schema62.getDeprecated();
        io.swagger.oas.models.media.Schema schema68 = schema37.not(schema62);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema62.externalDocs(externalDocumentation69);
        schema7.addEnumItemObject((java.lang.Object) externalDocumentation69);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(objList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test07212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07212");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        schema29.set$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal59 = null;
        schema29.setMaximum(bigDecimal59);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test07213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07213");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str42 = schema39.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema39.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema schema45 = schema44.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = schema45.getProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
    }

    @Test
    public void test07214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07214");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = schema16.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test07215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07215");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.Schema schema27 = objSchema18.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = schema27.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.XML xML37 = null;
        schema36.setXml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("*/*");
        io.swagger.oas.models.media.Schema schema41 = schema27.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema43 = schema27.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal45 = null;
        objSchema44.setMultipleOf(bigDecimal45);
        objSchema44.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = objSchema49.getMinLength();
        objSchema44.addEnumItemObject((java.lang.Object) objSchema49);
        objSchema49.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = objSchema49.maxProperties((java.lang.Integer) 0);
        objSchema49.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        io.swagger.oas.models.media.Schema schema71 = objSchema62.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal72 = schema71.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = null;
        io.swagger.oas.models.media.Schema schema80 = objSchema73.addProperties("*/*", schema79);
        io.swagger.oas.models.media.XML xML81 = null;
        schema80.setXml(xML81);
        io.swagger.oas.models.media.Schema schema84 = schema80.pattern("*/*");
        io.swagger.oas.models.media.Schema schema85 = schema71.additionalProperties(schema80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema71.getProperties();
        objSchema49.setProperties(strMap86);
        schema27.setProperties(strMap86);
        schema15.setProperties(strMap86);
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema15.discriminator(discriminator90);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test07216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07216");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        schema52.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema52.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = schema60.getExternalDocs();
        io.swagger.oas.models.media.Schema schema63 = schema60.$ref("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema64 = schema63.getNot();
        io.swagger.oas.models.media.Schema schema66 = schema63.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean67 = schema63.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test07217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07217");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema7.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07218");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema7.xml(xML20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema21.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = objSchema26.title("hi!");
        java.lang.Object obj33 = null;
        objSchema26.addEnumItemObject(obj33);
        io.swagger.oas.models.media.Schema schema36 = objSchema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema38 = objSchema26.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        objSchema41.addEnumItemObject((java.lang.Object) objSchema46);
        objSchema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = objSchema46.maxProperties((java.lang.Integer) 0);
        objSchema46.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema60 = objSchema46.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema62 = objSchema46.type(",");
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema46.minimum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = objSchema46.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema38.additionalProperties(schema66);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema66.maximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema70 = schema25.example((java.lang.Object) schema66);
        io.swagger.oas.models.media.Schema schema72 = schema70.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test07219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07219");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.multipleOf(bigDecimal10);
        schema11.setDeprecated((java.lang.Boolean) false);
        java.lang.String str14 = schema11.toString();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str14, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test07220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07220");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.format("");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema7.xml(xML29);
        schema30.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07221");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema9.nullable((java.lang.Boolean) true);
        schema23.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07222");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema15.setDiscriminator(discriminator20);
        java.lang.String str22 = schema15.getTitle();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#/components/schemas/" + "'", str22, "#/components/schemas/");
    }

    @Test
    public void test07223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07223");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        schema8.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema8.getExternalDocs();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(externalDocumentation14);
    }

    @Test
    public void test07224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07224");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema5 = null;
        objSchema0.setAdditionalProperties(schema5);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str9 = objSchema0.toString();
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test07225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07225");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.addProperties("no description", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema18.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test07226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07226");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.set$ref("#/components/schemas/");
        objSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = objSchema0.minItems((java.lang.Integer) 1);
        java.lang.Integer int17 = objSchema0.getMaxItems();
        objSchema0.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test07227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07227");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int19 = schema14.getMinItems();
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.xml(xML20);
        schema14.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal25 = null;
        objSchema24.setMultipleOf(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = objSchema24.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = objSchema24.getProperties();
        java.math.BigDecimal bigDecimal29 = objSchema24.getMinimum();
        java.util.List<java.lang.Object> objList30 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal32 = null;
        objSchema31.setMultipleOf(bigDecimal32);
        objSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = objSchema36.getMinLength();
        objSchema31.addEnumItemObject((java.lang.Object) objSchema36);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int45 = objSchema36.getMaxLength();
        io.swagger.oas.models.media.Schema schema47 = objSchema36.maxLength((java.lang.Integer) 100);
        objSchema24.setAdditionalProperties(schema47);
        io.swagger.oas.models.media.Schema schema50 = objSchema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = objSchema24.getExternalDocs();
        java.lang.Integer int52 = objSchema24.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema53.properties(strMap60);
        io.swagger.oas.models.media.Schema schema63 = schema61.type("");
        io.swagger.oas.models.media.Schema schema65 = schema63.title("*/*");
        io.swagger.oas.models.media.Schema schema67 = schema65.description(",");
        java.lang.String[] strArray70 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        io.swagger.oas.models.media.Schema schema73 = schema65.required((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema74 = objSchema24.required((java.util.List<java.lang.String>) strList71);
        schema14.addEnumItemObject((java.lang.Object) objSchema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        objSchema24.setExternalDocs(externalDocumentation76);
        java.lang.Integer int78 = objSchema24.getMinItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(objList30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(externalDocumentation51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int78);
    }

    @Test
    public void test07228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07228");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        schema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.writeOnly((java.lang.Boolean) false);
        java.lang.String str22 = schema21.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test07229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07229");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        java.lang.Integer int12 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema schema14 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07230");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema24.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema11.addProperties("", schema26);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema11.discriminator(discriminator31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema34.addProperties("*/*", schema40);
        io.swagger.oas.models.media.Schema schema43 = objSchema34.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = schema43.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        objSchema45.addExtension("", (java.lang.Object) objSchema49);
        objSchema45.set$ref("*/*");
        java.lang.Object obj57 = objSchema45.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema59.setPattern("no description");
        objSchema59.setReadOnly((java.lang.Boolean) false);
        java.lang.String str64 = objSchema59.getName();
        objSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList67 = objSchema59.getEnum();
        io.swagger.oas.models.media.Schema schema69 = objSchema59.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = objSchema59.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = objSchema59.getExternalDocs();
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = objSchema59.xml(xML73);
        io.swagger.oas.models.media.Schema schema76 = schema74.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema77 = objSchema45.addProperties("*/*", schema76);
        io.swagger.oas.models.media.Schema schema78 = schema43.not(schema77);
        io.swagger.oas.models.media.Schema schema79 = schema32.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        io.swagger.oas.models.media.Schema schema81 = schema78.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(objList67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test07231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07231");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        objSchema49.addExtension("", (java.lang.Object) objSchema53);
        objSchema49.set$ref("*/*");
        java.lang.Object obj61 = objSchema49.getExample();
        java.util.List<java.lang.Object> objList62 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.type(",");
        io.swagger.oas.models.media.Schema schema66 = schema64.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.String str72 = objSchema67.getName();
        objSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = objSchema67.addRequiredItem("#/components/schemas/");
        schema76.setMaxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal79 = null;
        schema76.setMultipleOf(bigDecimal79);
        boolean boolean81 = schema66.equals((java.lang.Object) schema76);
        schema7.setDefault((java.lang.Object) boolean81);
        java.lang.Integer int83 = schema7.getMaxProperties();
        schema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(objList62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(int83);
    }

    @Test
    public void test07232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07232");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Integer int8 = objSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        objSchema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema9.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("hi!");
        java.lang.String str20 = schema19.getName();
        objSchema0.setExample((java.lang.Object) schema19);
        objSchema0.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test07233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07233");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema0.addProperties("no description", schema13);
        java.lang.String str15 = objSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema17 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07234");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        schema52.setType("no description");
        io.swagger.oas.models.media.Schema schema58 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema58.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = schema58.getExternalDocs();
        io.swagger.oas.models.media.Schema schema65 = schema58.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test07235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07235");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema8.getExternalDocs();
        java.lang.Boolean boolean15 = schema8.getExclusiveMinimum();
        schema8.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal18 = null;
        schema8.setMinimum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
    }

    @Test
    public void test07236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07236");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        java.math.BigDecimal bigDecimal57 = null;
        schema41.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema41.type("no description");
        java.lang.Integer int61 = schema41.getMinLength();
        schema41.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
    }

    @Test
    public void test07237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07237");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        java.lang.String str53 = schema50.getType();
        schema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal57 = null;
        objSchema56.setMultipleOf(bigDecimal57);
        objSchema56.setType("");
        java.math.BigDecimal bigDecimal61 = objSchema56.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = objSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema56.getMinProperties();
        io.swagger.oas.models.media.Schema schema65 = schema50.not((io.swagger.oas.models.media.Schema) objSchema56);
        java.lang.String str66 = objSchema56.getType();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test07238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07238");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema7.pattern("*/*");
        schema7.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema7.getNullable();
        java.lang.Boolean boolean15 = schema7.getDeprecated();
        java.lang.Object obj16 = schema7.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test07239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07239");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema7.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = objSchema24.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = objSchema24.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = objSchema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema39 = objSchema24.title("*/*");
        java.lang.Boolean boolean40 = objSchema24.getExclusiveMinimum();
        objSchema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema24.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        objSchema24.setProperties(strMap45);
        objSchema24.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = objSchema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema51.setMultipleOf(bigDecimal52);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList58);
        objSchema24.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = objSchema13.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema63 = schema7.required((java.util.List<java.lang.String>) strList58);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema7.maximum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = schema7.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07240");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMinimum();
        java.lang.String str15 = schema13.getType();
        io.swagger.oas.models.media.Schema schema17 = schema13.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = objSchema18.getName();
        objSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList26 = objSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema28 = objSchema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema18.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = objSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = objSchema18.title("*/*");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.minimum(bigDecimal34);
        schema33.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        schema33.setDiscriminator(discriminator38);
        java.lang.Boolean boolean40 = schema33.getWriteOnly();
        boolean boolean41 = schema17.equals((java.lang.Object) schema33);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(objList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test07241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07241");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema10.addProperties("*/*", schema16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = schema17.addRequiredItem("no description");
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema22.addProperties("*/*", schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema29.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = objSchema33.getMinLength();
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema33);
        java.lang.Boolean boolean40 = schema29.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.String str47 = objSchema42.getName();
        objSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList50 = objSchema42.getEnum();
        io.swagger.oas.models.media.Schema schema52 = objSchema42.name(",");
        objSchema42.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        io.swagger.oas.models.media.Schema schema72 = objSchema42.properties(strMap71);
        java.lang.Object obj73 = schema72.getDefault();
        io.swagger.oas.models.media.Schema schema74 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = schema29.getProperties();
        io.swagger.oas.models.media.Schema schema77 = schema29.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = schema77.getProperties();
        io.swagger.oas.models.media.Schema schema79 = schema20.properties(strMap78);
        schema9.setNot(schema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        schema20.setExternalDocs(externalDocumentation81);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(objList50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test07242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07242");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema13.externalDocs(externalDocumentation20);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.String str31 = objSchema26.getName();
        objSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList34 = objSchema26.getEnum();
        io.swagger.oas.models.media.Schema schema36 = objSchema26.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = objSchema26.title("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal40 = null;
        objSchema39.setMultipleOf(bigDecimal40);
        objSchema39.setType("");
        java.math.BigDecimal bigDecimal44 = objSchema39.getMaximum();
        java.lang.Boolean boolean45 = objSchema39.getExclusiveMinimum();
        objSchema39.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) false);
        schema38.setNot((io.swagger.oas.models.media.Schema) objSchema39);
        java.math.BigDecimal bigDecimal51 = null;
        objSchema39.setMinimum(bigDecimal51);
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = objSchema39.xml(xML53);
        io.swagger.oas.models.media.Schema schema55 = schema13.not(schema54);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(objList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test07243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07243");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema11.addExtension("", (java.lang.Object) objSchema15);
        objSchema11.set$ref("*/*");
        java.lang.Object obj23 = objSchema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = objSchema25.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = objSchema25.getExternalDocs();
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema25.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema40.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = objSchema11.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema44 = schema9.not(schema43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema9.discriminator(discriminator45);
        schema46.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07244");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.format(",");
        io.swagger.oas.models.media.Schema schema28 = objSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        objSchema29.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = objSchema36.addProperties("*/*", schema42);
        io.swagger.oas.models.media.XML xML44 = null;
        schema43.setXml(xML44);
        schema43.setTitle("*/*");
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = objSchema29.properties(strMap52);
        objSchema0.setProperties(strMap52);
        io.swagger.oas.models.media.Schema schema56 = objSchema0.maxItems((java.lang.Integer) 0);
        objSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test07245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07245");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        schema9.addEnumItemObject((java.lang.Object) operationParser18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema9.xml(xML20);
        java.lang.Integer int22 = schema9.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema24.properties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema32.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema44.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal48 = null;
        schema44.setMinimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema44.maxLength((java.lang.Integer) 10);
        schema36.addEnumItemObject((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema54 = schema51.name("");
        io.swagger.oas.models.media.XML xML55 = null;
        schema54.setXml(xML55);
        io.swagger.oas.models.media.Schema schema58 = schema54.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema58.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema58.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema9.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema58);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test07246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07246");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        java.lang.String str11 = schema9.getPattern();
        java.lang.String str12 = schema9.getType();
        io.swagger.oas.models.media.Schema schema14 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07247");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema8.addProperties("*/*", schema14);
        io.swagger.oas.models.media.XML xML16 = null;
        schema15.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = objSchema28.getMinLength();
        objSchema23.addEnumItemObject((java.lang.Object) objSchema28);
        objSchema23.setMinProperties((java.lang.Integer) 100);
        objSchema23.setPattern("");
        java.math.BigDecimal bigDecimal39 = objSchema23.getMultipleOf();
        java.lang.String[] strArray57 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        io.swagger.oas.models.media.Schema schema60 = objSchema23.required((java.util.List<java.lang.String>) strList58);
        schema22.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = objSchema0.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        objSchema63.addExtension("", (java.lang.Object) objSchema67);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        objSchema67.setExternalDocs(externalDocumentation73);
        java.lang.String str75 = objSchema67.getName();
        java.lang.Object obj76 = objSchema67.getDefault();
        io.swagger.oas.models.media.Schema schema78 = objSchema67.uniqueItems((java.lang.Boolean) false);
        objSchema67.setNullable((java.lang.Boolean) true);
        objSchema0.setNot((io.swagger.oas.models.media.Schema) objSchema67);
        io.swagger.oas.models.media.Schema schema83 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema85 = schema83.title("");
        io.swagger.oas.models.media.Schema schema87 = schema83.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test07248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07248");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema34.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test07249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07249");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema13.setMultipleOf(bigDecimal14);
        objSchema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        objSchema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        io.swagger.oas.models.media.Schema schema37 = objSchema13.properties(strMap36);
        schema12.setDefault((java.lang.Object) objSchema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema13.externalDocs(externalDocumentation39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.maximum(bigDecimal41);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test07250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07250");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = objSchema0.getNullable();
        objSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = objSchema0.description("#/components/schemas/hi!");
        schema19.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.multipleOf(bigDecimal22);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07251");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        java.lang.Integer int25 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        schema33.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema42.setPattern("no description");
        objSchema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = objSchema42.addProperties("*/*", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 10);
        schema49.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        schema49.setProperties(strMap71);
        schema33.addEnumItemObject((java.lang.Object) strMap71);
        io.swagger.oas.models.media.Schema schema74 = objSchema0.properties(strMap71);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema75.setPattern("no description");
        objSchema75.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = null;
        io.swagger.oas.models.media.Schema schema82 = objSchema75.addProperties("*/*", schema81);
        io.swagger.oas.models.media.Schema schema84 = schema82.title("hi!");
        io.swagger.oas.models.media.Schema schema86 = schema84.maxLength((java.lang.Integer) 1);
        schema84.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema84.uniqueItems((java.lang.Boolean) true);
        schema74.setNot(schema84);
        io.swagger.oas.models.media.Schema schema93 = schema74.maxItems((java.lang.Integer) 0);
        schema93.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema97 = schema93.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema99 = schema93.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test07252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07252");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        java.math.BigDecimal bigDecimal6 = null;
        objSchema0.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = objSchema0.getMaximum();
        objSchema0.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = objSchema0.minLength((java.lang.Integer) 100);
        objSchema0.setName("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test07253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07253");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema18 = schema13.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema13.writeOnly((java.lang.Boolean) false);
        schema13.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema13.pattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07254");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.String str52 = objSchema47.getName();
        objSchema47.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList55 = objSchema47.getEnum();
        io.swagger.oas.models.media.Schema schema57 = objSchema47.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = objSchema47.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = objSchema47.getExternalDocs();
        java.lang.Integer int61 = objSchema47.getMaxLength();
        objSchema47.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = objSchema47.externalDocs(externalDocumentation64);
        schema65.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema65.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal70 = schema69.getMaximum();
        io.swagger.oas.models.media.Schema schema72 = schema69.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema73 = schema46.additionalProperties(schema69);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(objList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test07255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07255");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.description(",");
        io.swagger.oas.models.media.Schema schema19 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07256");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.String str16 = objSchema11.getName();
        objSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList19 = objSchema11.getEnum();
        io.swagger.oas.models.media.Schema schema21 = objSchema11.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema11.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = objSchema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema26 = objSchema11.title("*/*");
        java.lang.Boolean boolean27 = objSchema11.getExclusiveMinimum();
        objSchema11.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = objSchema11.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        objSchema11.setProperties(strMap32);
        objSchema11.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = objSchema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal39 = null;
        objSchema38.setMultipleOf(bigDecimal39);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        objSchema38.setRequired((java.util.List<java.lang.String>) strList45);
        objSchema11.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = objSchema0.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        io.swagger.oas.models.media.Schema schema60 = objSchema50.name(",");
        io.swagger.oas.models.media.XML xML61 = objSchema50.getXml();
        java.util.List<java.lang.String> strList62 = objSchema50.getRequired();
        io.swagger.oas.models.media.Schema schema64 = objSchema50.title("");
        schema49.setAdditionalProperties(schema64);
        io.swagger.oas.models.media.Schema schema67 = schema64.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        schema67.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(objList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
    }

    @Test
    public void test07257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07257");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMinimum();
        java.math.BigDecimal bigDecimal30 = null;
        schema27.setMaximum(bigDecimal30);
        java.lang.String str32 = schema27.get$ref();
        java.lang.String str33 = schema27.toString();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema27.maximum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07258");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int19 = schema14.getMinItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.maximum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07259");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.Schema schema18 = objSchema9.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal19 = schema18.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        schema18.addExtension("#/components/schemas/", (java.lang.Object) objSchema21);
        io.swagger.jaxrs2.OperationParser operationParser27 = new io.swagger.jaxrs2.OperationParser();
        schema18.addEnumItemObject((java.lang.Object) operationParser27);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema39 = schema36.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema41 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        schema18.setAdditionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema43 = objSchema0.example((java.lang.Object) schema36);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07260");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        io.swagger.oas.models.media.Schema schema61 = schema14.addProperties("hi!", (io.swagger.oas.models.media.Schema) objSchema32);
        java.lang.Boolean boolean62 = objSchema32.getDeprecated();
        objSchema32.setMinLength((java.lang.Integer) 0);
        java.lang.String str65 = objSchema32.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test07261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07261");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test07262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07262");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList34);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema schema39 = objSchema0.$ref("#/components/schemas/no description");
        java.lang.String str40 = schema39.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema41.addProperties("*/*", schema47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema48.getExtensions();
        io.swagger.oas.models.media.Schema schema51 = schema48.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int57 = objSchema52.getMinLength();
        schema48.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema52);
        schema48.setMinProperties((java.lang.Integer) 10);
        schema48.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setNot(schema48);
        io.swagger.oas.models.media.Schema schema67 = schema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        schema67.setDiscriminator(discriminator68);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str40, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07263");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = objSchema22.title("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("no description");
        schema30.setName("");
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema30.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema30.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema40 = schema7.example((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        objSchema41.setRequired((java.util.List<java.lang.String>) strList48);
        schema40.setRequired((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema53 = schema40.$ref("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test07264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07264");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = objSchema16.title("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setTitle("*/*");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.xml(xML37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema32.externalDocs(externalDocumentation39);
        schema24.addEnumItemObject((java.lang.Object) schema40);
        schema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema0.addProperties("", schema40);
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07265");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema15.getPattern();
        java.math.BigDecimal bigDecimal19 = schema15.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.exclusiveMaximum((java.lang.Boolean) false);
        schema30.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.$ref("");
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        boolean boolean40 = schema15.equals((java.lang.Object) schema38);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test07266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07266");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema60 = schema44.example((java.lang.Object) schema59);
        java.math.BigDecimal bigDecimal61 = schema59.getMinimum();
        io.swagger.oas.models.media.Schema schema63 = schema59.addRequiredItem("");
        java.lang.Class<?> wildcardClass64 = schema63.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test07267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07267");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema13.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema19.type("#/components/schemas/");
        schema19.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07268");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        io.swagger.oas.models.media.Schema schema61 = schema14.addProperties("hi!", (io.swagger.oas.models.media.Schema) objSchema32);
        java.math.BigDecimal bigDecimal62 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema14.uniqueItems((java.lang.Boolean) false);
        java.lang.Object obj65 = schema14.getDefault();
        java.lang.Boolean boolean66 = schema14.getUniqueItems();
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
    }

    @Test
    public void test07269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07269");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema14.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.minimum(bigDecimal20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMultipleOf(bigDecimal24);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07270");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj14 = schema13.getExample();
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.example(obj15);
        java.math.BigDecimal bigDecimal17 = schema16.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.externalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07271");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        java.lang.Integer int31 = schema12.getMinProperties();
        java.lang.Integer int32 = schema12.getMaxLength();
        schema12.setMinProperties((java.lang.Integer) (-1));
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test07272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07272");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = null;
        schema55.setXml(xML58);
        java.lang.String str60 = schema55.getTitle();
        java.lang.Integer int61 = schema55.getMinItems();
        schema55.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema55.xml(xML64);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test07273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07273");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        java.lang.Boolean boolean31 = schema30.getReadOnly();
        schema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema30.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07274");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 100);
        java.lang.String str22 = schema7.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = objSchema23.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = objSchema23.getExternalDocs();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema23.xml(xML37);
        java.lang.Boolean boolean39 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal41 = null;
        objSchema40.setMultipleOf(bigDecimal41);
        objSchema40.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = objSchema40.title("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema46.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema46.minProperties((java.lang.Integer) (-1));
        schema38.setDefault((java.lang.Object) schema46);
        schema7.setExample((java.lang.Object) schema38);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "no description" + "'", str22, "no description");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07275");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        io.swagger.oas.models.media.Schema schema61 = schema14.addProperties("hi!", (io.swagger.oas.models.media.Schema) objSchema32);
        java.math.BigDecimal bigDecimal62 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema14.uniqueItems((java.lang.Boolean) false);
        java.lang.Object obj65 = schema14.getDefault();
        schema14.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test07276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07276");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema24.additionalProperties(schema33);
        java.lang.String str39 = schema33.getName();
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        java.math.BigDecimal bigDecimal47 = objSchema42.getMaximum();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema42.setMultipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = objSchema42.getMaximum();
        objSchema42.setDescription("*/*");
        schema41.setNot((io.swagger.oas.models.media.Schema) objSchema42);
        java.util.List<java.lang.String> strList54 = schema41.getRequired();
        io.swagger.oas.models.media.Schema schema55 = schema13.addProperties("hi!", schema41);
        io.swagger.oas.models.media.XML xML56 = null;
        schema41.setXml(xML56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema41.discriminator(discriminator58);
        schema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema41.maxItems((java.lang.Integer) 100);
        schema63.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema63.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07277");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        java.lang.Integer int11 = schema8.getMinProperties();
        java.lang.Boolean boolean12 = schema8.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema13.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.type("");
        io.swagger.oas.models.media.Schema schema25 = schema23.title("*/*");
        io.swagger.oas.models.media.Schema schema27 = schema25.description(",");
        io.swagger.oas.models.media.Schema schema29 = schema25.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList32 = schema31.getRequired();
        io.swagger.oas.models.media.Schema schema34 = schema31.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema31.getExclusiveMaximum();
        schema8.addEnumItemObject((java.lang.Object) boolean35);
        io.swagger.oas.models.media.Schema schema38 = schema8.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07278");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.String str21 = objSchema16.getName();
        objSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList24 = objSchema16.getEnum();
        io.swagger.oas.models.media.Schema schema26 = objSchema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = objSchema16.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = objSchema16.getExternalDocs();
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema16.xml(xML30);
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        schema14.setDefault((java.lang.Object) schema31);
        schema14.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema14.maximum(bigDecimal36);
        schema14.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal40 = schema14.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(objList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal40);
    }

    @Test
    public void test07279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07279");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = schema17.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test07280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07280");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        objSchema0.set$ref("#/components/schemas/no description");
        objSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.maxItems((java.lang.Integer) 0);
        objSchema0.set$ref("");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07281");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = schema17.getMaximum();
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema17.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07282");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 10);
        java.lang.String str18 = schema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema19.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = objSchema19.minLength((java.lang.Integer) 0);
        schema15.setAdditionalProperties(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema42.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        schema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema46);
        schema42.setMinProperties((java.lang.Integer) 10);
        schema42.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = objSchema32.not(schema42);
        objSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setAdditionalProperties(schema61);
        java.math.BigDecimal bigDecimal63 = null;
        schema15.setMinimum(bigDecimal63);
        io.swagger.oas.models.media.XML xML65 = null;
        schema15.setXml(xML65);
        io.swagger.oas.models.media.Schema schema68 = schema15.description("");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07283");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        objSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = objSchema0.getDeprecated();
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema0.maximum(bigDecimal22);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMaximum(bigDecimal24);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07284");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        io.swagger.oas.models.media.Schema schema66 = schema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema66.uniqueItems((java.lang.Boolean) false);
        java.lang.String str69 = schema66.getName();
        io.swagger.oas.models.media.Schema schema71 = schema66.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema71.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal74 = null;
        schema73.setMinimum(bigDecimal74);
        io.swagger.oas.models.media.Discriminator discriminator76 = schema73.getDiscriminator();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator76);
    }

    @Test
    public void test07285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07285");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        schema15.setType(",");
        java.lang.Integer int18 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.nullable((java.lang.Boolean) false);
        java.lang.String str23 = schema22.getTitle();
        schema22.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test07286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07286");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Boolean boolean25 = objSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = objSchema0.addRequiredItem("#/components/schemas/no description");
        java.lang.Boolean boolean30 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema32 = objSchema0.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test07287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07287");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.Schema schema41 = objSchema32.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        io.swagger.oas.models.media.XML xML51 = null;
        schema50.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        schema29.addEnumItemObject((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema58 = schema41.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean59 = schema58.getReadOnly();
        schema58.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
    }

    @Test
    public void test07288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07288");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getDefault();
        io.swagger.oas.models.media.Schema schema14 = schema10.getAdditionalProperties();
        java.util.List<java.lang.Object> objList15 = schema10.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNull(objList15);
    }

    @Test
    public void test07289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07289");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        java.lang.String str18 = objSchema12.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test07290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07290");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        java.lang.Integer int26 = schema12.getMaxItems();
        java.util.List<java.lang.Object> objList27 = schema12.getEnum();
        io.swagger.oas.models.media.Schema schema29 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema37.addRequiredItem("no description");
        java.lang.Boolean boolean41 = schema40.getReadOnly();
        java.lang.Integer int42 = schema40.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = objSchema43.addProperties("*/*", schema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema50.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema50.addRequiredItem("no description");
        java.lang.Boolean boolean54 = schema53.getReadOnly();
        java.lang.Integer int55 = schema53.getMaxItems();
        schema40.setNot(schema53);
        schema40.setDeprecated((java.lang.Boolean) true);
        schema12.setAdditionalProperties(schema40);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test07291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07291");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        schema25.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07292");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        java.lang.String str14 = schema13.getName();
        java.lang.Boolean boolean15 = schema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema13.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal20 = null;
        objSchema19.setMultipleOf(bigDecimal20);
        objSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int29 = objSchema24.getMinLength();
        objSchema19.addEnumItemObject((java.lang.Object) objSchema24);
        objSchema24.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = objSchema24.maxProperties((java.lang.Integer) 0);
        objSchema24.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.Schema schema46 = objSchema37.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal47 = schema46.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.XML xML56 = null;
        schema55.setXml(xML56);
        io.swagger.oas.models.media.Schema schema59 = schema55.pattern("*/*");
        io.swagger.oas.models.media.Schema schema60 = schema46.additionalProperties(schema55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema46.getProperties();
        objSchema24.setProperties(strMap61);
        schema13.setProperties(strMap61);
        io.swagger.oas.models.media.Schema schema65 = schema13.maxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean66 = schema65.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
    }

    @Test
    public void test07293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07293");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        io.swagger.oas.models.media.Schema schema15 = objSchema4.uniqueItems((java.lang.Boolean) false);
        schema15.setType(",");
        java.lang.Integer int18 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema15.getFormat();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema15.maximum(bigDecimal22);
        schema23.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str26 = schema23.getFormat();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test07294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07294");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        io.swagger.oas.models.media.Schema schema19 = schema16.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07295");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("#/components/schemas/");
        java.util.List<java.lang.String> strList11 = null;
        schema7.setRequired(strList11);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema7.externalDocs(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07296");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema25.setMinimum(bigDecimal26);
        java.lang.Integer int28 = schema25.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test07297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07297");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema6.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test07298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07298");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.lang.Boolean boolean16 = schema14.getExclusiveMinimum();
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema14.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setType("");
        java.math.BigDecimal bigDecimal25 = objSchema20.getMaximum();
        objSchema20.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        objSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema30.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.type("");
        io.swagger.oas.models.media.Discriminator discriminator41 = schema38.getDiscriminator();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema38.maximum(bigDecimal42);
        schema29.setExample((java.lang.Object) schema38);
        java.lang.String str45 = schema38.getDescription();
        schema14.setDefault((java.lang.Object) schema38);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test07299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07299");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.String str22 = objSchema17.getName();
        objSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList25 = objSchema17.getEnum();
        io.swagger.oas.models.media.Schema schema27 = objSchema17.name(",");
        objSchema17.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = objSchema17.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = schema31.getEnum();
        io.swagger.oas.models.media.Schema schema34 = schema31.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = objSchema10.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal37 = null;
        objSchema36.setMultipleOf(bigDecimal37);
        objSchema36.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = objSchema41.getMinLength();
        objSchema36.addEnumItemObject((java.lang.Object) objSchema41);
        objSchema41.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int50 = objSchema41.getMaxLength();
        io.swagger.oas.models.media.Schema schema52 = objSchema41.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = objSchema53.addProperties("*/*", schema59);
        io.swagger.oas.models.media.XML xML61 = null;
        schema60.setXml(xML61);
        schema60.setTitle("*/*");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        schema60.setRequired((java.util.List<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema75 = schema52.required((java.util.List<java.lang.String>) strList72);
        schema35.setRequired((java.util.List<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema77 = objSchema0.not(schema35);
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal80 = objSchema0.getMinimum();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass81 = bigDecimal80.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(objList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(bigDecimal80);
    }

    @Test
    public void test07300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07300");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema13.xml(xML23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema9.additionalProperties(schema24);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int29 = schema24.getMinProperties();
        java.lang.String str30 = schema24.getFormat();
        java.lang.Object obj31 = null;
        boolean boolean32 = schema24.equals(obj31);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test07301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07301");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.Integer int24 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.minimum(bigDecimal29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.minimum(bigDecimal31);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test07302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07302");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        java.lang.Integer int68 = schema65.getMaxItems();
        schema65.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test07303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07303");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.lang.String str12 = schema10.getDescription();
        java.lang.String str13 = schema10.getPattern();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "no description" + "'", str13, "no description");
    }

    @Test
    public void test07304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07304");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        java.lang.Boolean boolean34 = objSchema15.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        schema44.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema44.minItems((java.lang.Integer) 100);
        java.lang.Integer int49 = schema48.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema50.addProperties("*/*", schema56);
        io.swagger.oas.models.media.Schema schema59 = objSchema50.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal60 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        schema59.addExtension("#/components/schemas/", (java.lang.Object) objSchema62);
        io.swagger.jaxrs2.OperationParser operationParser68 = new io.swagger.jaxrs2.OperationParser();
        schema59.addEnumItemObject((java.lang.Object) operationParser68);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema77.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema77.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema82 = schema77.exclusiveMaximum((java.lang.Boolean) false);
        schema59.setAdditionalProperties(schema77);
        schema48.setNot(schema77);
        java.lang.Boolean boolean85 = schema77.getWriteOnly();
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema77.xml(xML86);
        io.swagger.oas.models.media.Schema schema88 = objSchema15.addProperties("#/components/schemas/no description", schema87);
        io.swagger.oas.models.media.Discriminator discriminator89 = objSchema15.getDiscriminator();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(discriminator89);
    }

    @Test
    public void test07305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07305");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 0);
        schema19.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07306");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        java.lang.Boolean boolean26 = schema25.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.discriminator(discriminator27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema25.setExternalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema40.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = schema42.getMaxProperties();
        io.swagger.oas.models.media.Schema schema44 = schema42.getAdditionalProperties();
        schema25.setDefault((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema47 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test07307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07307");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/no description");
        schema65.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07308");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.Boolean boolean9 = objSchema0.getWriteOnly();
        java.lang.Boolean boolean10 = objSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = objSchema0.maxLength((java.lang.Integer) (-1));
        schema12.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema12.getExternalDocs();
        java.lang.String str16 = schema12.get$ref();
        schema12.setMinProperties((java.lang.Integer) 1);
        java.lang.String str19 = schema12.getName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test07309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07309");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = schema33.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema33.getProperties();
        java.lang.String str39 = schema33.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema41.set$ref("no description");
        objSchema41.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.name(",");
        objSchema51.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema41.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema66 = objSchema41.name("*/*");
        io.swagger.oas.models.media.Schema schema67 = objSchema41.getNot();
        java.lang.String str68 = objSchema41.toString();
        io.swagger.oas.models.media.Schema schema69 = schema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema41);
        io.swagger.oas.models.media.Schema schema71 = schema69.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(schema67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str68, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test07310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07310");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema12.type("no description");
        schema30.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal34 = null;
        objSchema33.setMultipleOf(bigDecimal34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = objSchema33.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = objSchema33.getProperties();
        schema30.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema33);
        io.swagger.oas.models.media.Discriminator discriminator39 = objSchema33.getDiscriminator();
        objSchema33.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema43.setPattern("no description");
        objSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.String str48 = objSchema43.getName();
        objSchema43.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList51 = objSchema43.getEnum();
        io.swagger.oas.models.media.Schema schema53 = objSchema43.exclusiveMaximum((java.lang.Boolean) false);
        schema53.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.$ref("");
        java.lang.Object obj58 = schema53.getDefault();
        schema53.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema65.setPattern("no description");
        objSchema65.setReadOnly((java.lang.Boolean) false);
        objSchema61.addExtension("", (java.lang.Object) objSchema65);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        objSchema65.setExternalDocs(externalDocumentation71);
        java.lang.String str73 = objSchema65.getName();
        io.swagger.oas.models.media.Schema schema75 = objSchema65.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) false);
        schema53.setNot(schema75);
        io.swagger.oas.models.media.Schema schema79 = schema75.getNot();
        io.swagger.oas.models.media.Schema schema80 = objSchema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema79);
        io.swagger.oas.models.media.Schema schema81 = objSchema33.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Object> objList82 = schema81.getEnum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(objList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(schema81);
    }

    @Test
    public void test07311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07311");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        java.lang.Boolean boolean9 = schema6.getReadOnly();
        java.math.BigDecimal bigDecimal10 = null;
        schema6.setMultipleOf(bigDecimal10);
        java.lang.String str12 = schema6.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test07312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07312");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.Integer int17 = schema14.getMaxProperties();
        java.lang.String str18 = schema14.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.String str24 = objSchema19.getName();
        objSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList27 = objSchema19.getEnum();
        io.swagger.oas.models.media.Schema schema29 = objSchema19.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal36 = null;
        objSchema35.setMultipleOf(bigDecimal36);
        objSchema35.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = objSchema40.getMinLength();
        objSchema35.addEnumItemObject((java.lang.Object) objSchema40);
        objSchema40.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = objSchema40.maxProperties((java.lang.Integer) 0);
        objSchema40.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema54 = objSchema40.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = objSchema40.type(",");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        java.lang.Integer int58 = schema56.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = schema29.example((java.lang.Object) schema56);
        schema14.setNot(schema56);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(objList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test07313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07313");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.xml(xML32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = objSchema0.example((java.lang.Object) schema35);
        java.lang.Boolean boolean37 = schema36.getNullable();
        io.swagger.oas.models.media.Schema schema39 = schema36.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal40 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema schema42 = schema36.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj43 = schema36.getExample();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07314");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean30 = objSchema29.getDeprecated();
        java.lang.Boolean boolean31 = objSchema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = objSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema27.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema34.name("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema40 = schema34.addRequiredItem("");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07315");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str30 = schema29.getFormat();
        io.swagger.oas.models.media.Schema schema32 = schema29.pattern("");
        schema32.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean35 = schema32.getReadOnly();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test07316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07316");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        objSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema6.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema17.addProperties("*/*", schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema31 = schema16.not(schema24);
        java.util.List<java.lang.Object> objList32 = schema24.getEnum();
        java.util.List<java.lang.String> strList33 = schema24.getRequired();
        io.swagger.oas.models.media.Schema schema34 = objSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema36 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int37 = schema34.getMaxLength();
        io.swagger.oas.models.media.XML xML38 = null;
        schema34.setXml(xML38);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test07317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07317");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int19 = objSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = objSchema0.additionalProperties(schema50);
        objSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = objSchema0.getExternalDocs();
        java.lang.Integer int56 = objSchema0.getMinLength();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNull(int56);
    }

    @Test
    public void test07318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07318");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String str15 = schema14.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema22.setPattern("no description");
        objSchema22.setReadOnly((java.lang.Boolean) false);
        objSchema18.addExtension("", (java.lang.Object) objSchema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema22.setExternalDocs(externalDocumentation28);
        java.lang.String str30 = objSchema22.getName();
        io.swagger.oas.models.media.Schema schema32 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.title(",");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 1);
        schema17.setDefault((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        objSchema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = objSchema40.properties(strMap47);
        io.swagger.oas.models.media.Schema schema50 = schema48.type("");
        io.swagger.oas.models.media.Schema schema52 = schema50.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal54 = null;
        objSchema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema56.addProperties("*/*", schema62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema63.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = schema63.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema67.setPattern("no description");
        objSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = objSchema67.getMinLength();
        schema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema67);
        schema63.setMinProperties((java.lang.Integer) 10);
        schema63.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = objSchema53.not(schema63);
        schema50.setAdditionalProperties(schema78);
        schema78.setPattern("");
        schema78.setExclusiveMinimum((java.lang.Boolean) true);
        schema38.setNot(schema78);
        java.lang.Boolean boolean85 = schema38.getUniqueItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertEquals("'" + boolean85 + "' != '" + false + "'", boolean85, false);
    }

    @Test
    public void test07319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07319");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = null;
        schema55.setXml(xML58);
        java.lang.String str60 = schema55.getTitle();
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema55.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema62.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str65 = schema62.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str65, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test07320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07320");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.not(schema7);
        io.swagger.oas.models.media.Schema schema10 = schema6.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean11 = schema10.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test07321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07321");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        objSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema0.externalDocs(externalDocumentation17);
        io.swagger.oas.annotations.Parameter parameter19 = null;
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.parameters.Parameter> parameterOptional21 = io.swagger.jaxrs2.OperationParser.getParameter(parameter19, components20);
        io.swagger.oas.models.media.Schema schema22 = schema18.example((java.lang.Object) parameterOptional21);
        java.lang.Boolean boolean23 = schema22.getWriteOnly();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(parameterOptional21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test07322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07322");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.Integer int43 = schema39.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        io.swagger.oas.models.media.Schema schema54 = schema51.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        schema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema55);
        schema51.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema64.addProperties("*/*", schema70);
        io.swagger.oas.models.media.XML xML72 = null;
        schema71.setXml(xML72);
        schema71.setTitle("*/*");
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema71.xml(xML76);
        schema51.setDefault((java.lang.Object) xML76);
        io.swagger.oas.models.media.Schema schema80 = schema51.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema51.discriminator(discriminator81);
        io.swagger.oas.models.media.Schema schema84 = schema51.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean85 = schema39.equals((java.lang.Object) schema51);
        schema39.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList88 = schema39.getRequired();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test07323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07323");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema0.set$ref("no description");
        objSchema0.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.String str15 = objSchema10.getName();
        objSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList18 = objSchema10.getEnum();
        io.swagger.oas.models.media.Schema schema20 = objSchema10.name(",");
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema0.addExtension("#/components/schemas/", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = objSchema0.name("*/*");
        io.swagger.oas.models.media.XML xML26 = schema25.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema31.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.type("");
        io.swagger.oas.models.media.Schema schema43 = schema41.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        io.swagger.oas.models.media.Schema schema54 = schema51.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal55 = null;
        schema51.setMinimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema51.maxLength((java.lang.Integer) 10);
        schema43.addEnumItemObject((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema61 = schema43.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        objSchema62.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = objSchema62.minItems((java.lang.Integer) 1);
        schema43.setAdditionalProperties(schema68);
        java.lang.Boolean boolean70 = schema68.getExclusiveMinimum();
        schema68.setWriteOnly((java.lang.Boolean) false);
        schema28.setExample((java.lang.Object) schema68);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(objList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + true + "'", boolean70, true);
    }

    @Test
    public void test07324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07324");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        objSchema0.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("");
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07325");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal14 = schema13.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test07326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07326");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema12.multipleOf(bigDecimal28);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07327");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        schema7.setDefault((java.lang.Object) xML32);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema7.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = objSchema41.getName();
        objSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList49 = objSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema51 = objSchema41.name(",");
        objSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema54.setPattern("no description");
        objSchema54.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = objSchema54.addProperties("*/*", schema60);
        io.swagger.oas.models.media.XML xML62 = null;
        schema61.setXml(xML62);
        schema61.setTitle("*/*");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema61.xml(xML66);
        io.swagger.oas.models.media.Schema schema69 = schema61.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = objSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema7.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        objSchema73.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList80 = objSchema73.getEnum();
        java.lang.Boolean boolean81 = objSchema73.getNullable();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = schema83.getMaximum();
        io.swagger.oas.models.media.Schema schema85 = schema7.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema87 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema87.setPattern("no description");
        java.math.BigDecimal bigDecimal90 = null;
        objSchema87.setMinimum(bigDecimal90);
        java.lang.Boolean boolean92 = objSchema87.getReadOnly();
        io.swagger.oas.models.media.Schema schema93 = schema83.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema87);
        java.lang.Boolean boolean94 = schema93.getNullable();
        schema93.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema98 = schema93.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(objList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(objList80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test07328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07328");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema7.getMinLength();
        schema7.setNullable((java.lang.Boolean) false);
        schema7.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.xml(xML21);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07329");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema12.getExternalDocs();
        schema12.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
    }

    @Test
    public void test07330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07330");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean15 = schema12.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test07331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07331");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        schema9.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema9.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getTitle();
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.xml(xML19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07332");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        java.lang.String str12 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema14 = schema9.format("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) (-1));
        java.lang.Object obj18 = schema14.getDefault();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "no description" + "'", str12, "no description");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test07333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07333");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.name(",");
        io.swagger.oas.models.media.Schema schema26 = objSchema14.format("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal27 = objSchema14.getMinimum();
        java.lang.Boolean boolean28 = objSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = objSchema14.maxProperties((java.lang.Integer) 1);
        objSchema0.setNot(schema30);
        objSchema0.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test07334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07334");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema14.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.Schema schema42 = objSchema33.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal43 = schema42.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        io.swagger.oas.models.media.XML xML52 = null;
        schema51.setXml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("*/*");
        io.swagger.oas.models.media.Schema schema56 = schema42.additionalProperties(schema51);
        java.lang.String str57 = schema51.getName();
        io.swagger.oas.models.media.XML xML58 = schema51.getXml();
        java.lang.Integer int59 = schema51.getMinLength();
        io.swagger.oas.models.media.Schema schema61 = schema51.readOnly((java.lang.Boolean) false);
        java.lang.String[] strArray66 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional67 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional68 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional69 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional70 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional71 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional72 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        schema51.setDefault((java.lang.Object) tagSetOptional72);
        io.swagger.oas.models.media.Schema schema74 = schema14.example((java.lang.Object) schema51);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(tagSetOptional67);
        org.junit.Assert.assertNotNull(tagSetOptional68);
        org.junit.Assert.assertNotNull(tagSetOptional69);
        org.junit.Assert.assertNotNull(tagSetOptional70);
        org.junit.Assert.assertNotNull(tagSetOptional71);
        org.junit.Assert.assertNotNull(tagSetOptional72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test07335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07335");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema8.addProperties("*/*", schema14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("hi!");
        java.lang.Object obj18 = schema17.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        java.util.List<java.lang.String> strList37 = schema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = schema17.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        objSchema50.addEnumItemObject((java.lang.Object) objSchema55);
        objSchema55.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema55.getMaxLength();
        schema46.addExtension("no description", (java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema schema67 = schema46.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = schema46.getExtensions();
        schema38.setExtensions(strMap68);
        objSchema0.setExtensions(strMap68);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        objSchema0.setDiscriminator(discriminator71);
        io.swagger.oas.models.media.XML xML73 = null;
        objSchema0.setXml(xML73);
        io.swagger.oas.models.media.Schema schema76 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean79 = objSchema0.getNullable();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean79);
    }

    @Test
    public void test07336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07336");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema7.getNot();
        io.swagger.oas.models.media.Discriminator discriminator17 = schema7.getDiscriminator();
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema29.additionalProperties(schema38);
        java.lang.String str44 = schema38.getName();
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        java.math.BigDecimal bigDecimal52 = objSchema47.getMaximum();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema47.setMultipleOf(bigDecimal53);
        java.math.BigDecimal bigDecimal55 = objSchema47.getMaximum();
        objSchema47.setDescription("*/*");
        schema46.setNot((io.swagger.oas.models.media.Schema) objSchema47);
        java.util.List<java.lang.String> strList59 = schema46.getRequired();
        java.lang.Integer int60 = schema46.getMaxProperties();
        schema46.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList63 = null;
        schema46.setRequired(strList63);
        io.swagger.oas.models.media.Schema schema66 = schema46.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema7.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        objSchema70.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = objSchema70.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema78.type("");
        io.swagger.oas.models.media.Discriminator discriminator81 = schema78.getDiscriminator();
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema78.maximum(bigDecimal82);
        java.lang.Object obj84 = schema83.getDefault();
        io.swagger.oas.models.media.Schema schema86 = schema83.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema88 = schema83.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema88.discriminator(discriminator89);
        io.swagger.oas.models.media.Schema schema91 = schema7.example((java.lang.Object) schema88);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(discriminator81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test07337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07337");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        objSchema17.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema31.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema41 = objSchema17.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        schema41.setProperties(strMap65);
        io.swagger.oas.models.media.Schema schema69 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.title("");
        io.swagger.oas.models.media.Schema schema73 = schema71.type("");
        schema16.setExample((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema76 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema76.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal79 = null;
        schema76.setMultipleOf(bigDecimal79);
        java.lang.Boolean boolean81 = schema76.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator82 = null;
        schema76.setDiscriminator(discriminator82);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean81);
    }

    @Test
    public void test07338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07338");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.minItems((java.lang.Integer) (-1));
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.example(obj15);
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = schema26.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = objSchema30.getMinLength();
        schema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema30);
        java.lang.Boolean boolean37 = schema26.getNullable();
        io.swagger.oas.models.media.Schema schema39 = schema26.type(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema40.addProperties("*/*", schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = schema47.getExtensions();
        io.swagger.oas.models.media.Schema schema50 = schema47.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = objSchema51.getMinLength();
        schema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema51);
        schema47.setExclusiveMinimum((java.lang.Boolean) true);
        schema47.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = schema47.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        java.lang.String str68 = objSchema63.getName();
        objSchema63.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList71 = objSchema63.getEnum();
        io.swagger.oas.models.media.Schema schema73 = objSchema63.name(",");
        java.lang.Object obj74 = null;
        objSchema63.addEnumItemObject(obj74);
        boolean boolean76 = schema47.equals(obj74);
        java.util.List<java.lang.String> strList77 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema78 = schema39.required(strList77);
        schema18.setRequired(strList77);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(objList71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test07339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07339");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str13 = schema10.getName();
        java.lang.Boolean boolean14 = schema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = schema10.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07340");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema9.maxProperties((java.lang.Integer) 1);
        schema9.setMaxItems((java.lang.Integer) (-1));
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setFormat("*/*");
        schema9.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07341");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        java.lang.Boolean boolean22 = schema7.getExclusiveMinimum();
        java.lang.Object obj23 = schema7.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema31.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int40 = objSchema35.getMinLength();
        schema31.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema35);
        schema31.setExclusiveMinimum((java.lang.Boolean) true);
        schema31.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal47 = null;
        objSchema46.setMultipleOf(bigDecimal47);
        objSchema46.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = objSchema46.title("hi!");
        io.swagger.oas.models.media.Schema schema54 = schema52.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema54.$ref("no description");
        schema54.setName("");
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema54.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema54.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema64 = schema31.example((java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal66 = null;
        objSchema65.setMultipleOf(bigDecimal66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        objSchema65.setRequired((java.util.List<java.lang.String>) strList72);
        schema64.setRequired((java.util.List<java.lang.String>) strList72);
        schema7.setRequired((java.util.List<java.lang.String>) strList72);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = schema7.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test07342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07342");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str14 = objSchema0.getPattern();
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = objSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "no description" + "'", str14, "no description");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test07343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07343");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = objSchema27.getMinLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema27);
        schema23.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema23.getDiscriminator();
        java.lang.Integer int37 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema schema38 = schema13.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean41 = schema40.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema40.externalDocs(externalDocumentation42);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07344");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema schema56 = schema54.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema58.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema58.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test07345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07345");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        objSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minProperties((java.lang.Integer) 1);
        schema17.setDeprecated((java.lang.Boolean) true);
        schema17.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema17.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07346");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setFormat(",");
        schema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int20 = schema9.getMinItems();
        java.lang.Boolean boolean21 = schema9.getReadOnly();
        java.lang.Boolean boolean22 = schema9.getUniqueItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema9.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07347");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        objSchema5.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema5.minimum(bigDecimal18);
        schema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema19.getMultipleOf();
        schema19.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test07348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07348");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema8.addProperties("*/*", schema14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("hi!");
        java.lang.Object obj18 = schema17.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema27.setXml(xML28);
        schema27.setTitle("*/*");
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema35.getProperties();
        java.util.List<java.lang.String> strList37 = schema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = schema17.addProperties("", schema35);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema39.addProperties("*/*", schema45);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal51 = null;
        objSchema50.setMultipleOf(bigDecimal51);
        objSchema50.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        objSchema50.addEnumItemObject((java.lang.Object) objSchema55);
        objSchema55.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int64 = objSchema55.getMaxLength();
        schema46.addExtension("no description", (java.lang.Object) objSchema55);
        io.swagger.oas.models.media.Schema schema67 = schema46.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = schema46.getExtensions();
        schema38.setExtensions(strMap68);
        objSchema0.setExtensions(strMap68);
        io.swagger.oas.models.media.Schema schema72 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = objSchema0.multipleOf(bigDecimal73);
        java.lang.Object obj75 = objSchema0.getDefault();
        java.math.BigDecimal bigDecimal76 = objSchema0.getMultipleOf();
        objSchema0.setMinLength((java.lang.Integer) 10);
        java.lang.String str79 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema81 = objSchema0.nullable((java.lang.Boolean) true);
        java.lang.String str82 = schema81.getName();
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test07349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07349");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal21 = null;
        objSchema20.setMultipleOf(bigDecimal21);
        objSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = objSchema20.title("hi!");
        io.swagger.oas.models.media.XML xML27 = objSchema20.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) objSchema20);
        io.swagger.oas.models.media.Schema schema30 = schema13.deprecated((java.lang.Boolean) false);
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema13.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07350");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema6.setPattern("no description");
        objSchema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema6.addProperties("*/*", schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.addRequiredItem("#/components/schemas/");
        objSchema0.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList18 = objSchema0.getRequired();
        java.lang.String str19 = objSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema21 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema0.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema23.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07351");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal5 = objSchema0.getMinimum();
        java.lang.Boolean boolean6 = objSchema0.getNullable();
        java.lang.String str7 = objSchema0.getType();
        java.lang.Integer int8 = objSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        objSchema9.addExtension("", (java.lang.Object) objSchema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        objSchema13.setExternalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList25 = schema22.getRequired();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.required(strList25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = objSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema28 = objSchema0.getNot();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test07352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07352");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema8.maxLength((java.lang.Integer) 100);
        schema16.setName("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) false);
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07353");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        java.lang.String str24 = schema18.getName();
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal28 = null;
        objSchema27.setMultipleOf(bigDecimal28);
        objSchema27.setType("");
        java.math.BigDecimal bigDecimal32 = objSchema27.getMaximum();
        java.math.BigDecimal bigDecimal33 = null;
        objSchema27.setMultipleOf(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = objSchema27.getMaximum();
        objSchema27.setDescription("*/*");
        schema26.setNot((io.swagger.oas.models.media.Schema) objSchema27);
        java.lang.String str39 = objSchema27.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = objSchema40.getName();
        objSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList48 = objSchema40.getEnum();
        io.swagger.oas.models.media.Schema schema50 = objSchema40.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.String str56 = objSchema51.getName();
        objSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList59 = objSchema51.getEnum();
        io.swagger.oas.models.media.Schema schema61 = objSchema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = objSchema51.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = objSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = objSchema51.title("*/*");
        java.lang.Boolean boolean67 = objSchema51.getExclusiveMinimum();
        objSchema51.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = objSchema51.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        objSchema51.setProperties(strMap72);
        objSchema51.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = objSchema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal79 = null;
        objSchema78.setMultipleOf(bigDecimal79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        objSchema78.setRequired((java.util.List<java.lang.String>) strList85);
        objSchema51.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = objSchema40.required((java.util.List<java.lang.String>) strList85);
        objSchema27.setRequired((java.util.List<java.lang.String>) strList85);
        java.math.BigDecimal bigDecimal91 = null;
        objSchema27.setMinimum(bigDecimal91);
        objSchema27.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = objSchema27.minimum(bigDecimal95);
        java.lang.String str97 = schema96.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(objList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(objList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test07354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07354");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        java.lang.Integer int24 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema12.readOnly((java.lang.Boolean) true);
        schema27.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test07355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07355");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = schema9.getAdditionalProperties();
        java.math.BigDecimal bigDecimal14 = schema9.getMultipleOf();
        schema9.setWriteOnly((java.lang.Boolean) false);
        schema9.setMaxLength((java.lang.Integer) 10);
        schema9.setTitle("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test07356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07356");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        schema33.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema33.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema38.setPattern("no description");
        objSchema38.setReadOnly((java.lang.Boolean) false);
        objSchema38.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = objSchema38.properties(strMap45);
        schema46.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.minItems((java.lang.Integer) 100);
        java.lang.Integer int51 = schema50.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = objSchema52.addProperties("*/*", schema58);
        io.swagger.oas.models.media.Schema schema61 = objSchema52.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal62 = schema61.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema64.setPattern("no description");
        objSchema64.setReadOnly((java.lang.Boolean) false);
        schema61.addExtension("#/components/schemas/", (java.lang.Object) objSchema64);
        io.swagger.jaxrs2.OperationParser operationParser70 = new io.swagger.jaxrs2.OperationParser();
        schema61.addEnumItemObject((java.lang.Object) operationParser70);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema72.setPattern("no description");
        objSchema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = null;
        io.swagger.oas.models.media.Schema schema79 = objSchema72.addProperties("*/*", schema78);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema79.getExtensions();
        io.swagger.oas.models.media.Schema schema82 = schema79.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema84 = schema79.exclusiveMaximum((java.lang.Boolean) false);
        schema61.setAdditionalProperties(schema79);
        schema50.setNot(schema79);
        java.lang.Boolean boolean87 = schema79.getWriteOnly();
        io.swagger.oas.models.media.Schema schema88 = schema33.addProperties("#/components/schemas/no description", schema79);
        schema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "#/components/schemas/no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        schema7.setExternalDocs(externalDocumentation90);
        schema7.setUniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = schema7.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test07357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07357");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        java.math.BigDecimal bigDecimal31 = null;
        schema29.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema29.$ref("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema29.$ref("");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        java.lang.String str39 = schema36.getTitle();
        io.swagger.oas.models.media.Schema schema40 = schema17.not(schema36);
        java.lang.Boolean boolean41 = schema40.getDeprecated();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test07358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07358");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        schema13.setTitle("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema13.getProperties();
        io.swagger.oas.models.media.Schema schema20 = schema13.addRequiredItem("");
        schema20.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.multipleOf(bigDecimal23);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07359");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = objSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema0.minimum(bigDecimal20);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.multipleOf(bigDecimal24);
        java.util.List<java.lang.String> strList26 = schema25.getRequired();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
    }

    @Test
    public void test07360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07360");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.math.BigDecimal bigDecimal18 = null;
        schema13.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema13.name("");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML24 = schema21.getXml();
        java.math.BigDecimal bigDecimal25 = schema21.getMultipleOf();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test07361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07361");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        schema9.addExtension("#/components/schemas/", (java.lang.Object) objSchema12);
        objSchema12.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal23 = null;
        objSchema22.setMultipleOf(bigDecimal23);
        objSchema22.setType("");
        java.math.BigDecimal bigDecimal27 = objSchema22.getMaximum();
        io.swagger.oas.models.media.Schema schema29 = objSchema22.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int30 = objSchema22.getMinProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = objSchema22.getExtensions();
        objSchema12.setDefault((java.lang.Object) strMap31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema12.maximum(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema12.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = objSchema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07362");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        java.lang.String str24 = schema23.getPattern();
        io.swagger.oas.models.media.Schema schema26 = schema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.title("");
        schema26.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: #/components/schemas/\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = objSchema31.getName();
        objSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList39 = objSchema31.getEnum();
        io.swagger.oas.models.media.Schema schema41 = objSchema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = objSchema31.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = objSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema46 = objSchema31.title("*/*");
        java.lang.Boolean boolean47 = objSchema31.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema49 = objSchema31.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema49.type("*/*");
        java.math.BigDecimal bigDecimal52 = null;
        schema51.setMultipleOf(bigDecimal52);
        schema26.setDefault((java.lang.Object) bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema55.addProperties("*/*", schema61);
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        schema62.setTitle("*/*");
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.xml(xML67);
        schema62.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema62.$ref("*/*");
        schema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema62.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj77 = schema62.getDefault();
        java.math.BigDecimal bigDecimal78 = null;
        schema62.setMaximum(bigDecimal78);
        schema26.addEnumItemObject((java.lang.Object) schema62);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "no description" + "'", str24, "no description");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(objList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test07363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07363");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.util.List<java.lang.Object> objList43 = schema39.getEnum();
        java.lang.Integer int44 = schema39.getMinLength();
        java.util.List<java.lang.String> strList45 = schema39.getRequired();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(objList43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test07364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07364");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setExclusiveMinimum((java.lang.Boolean) true);
        schema7.setType(",");
        schema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema7.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema25.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
    }

    @Test
    public void test07365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07365");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = objSchema5.multipleOf(bigDecimal12);
        objSchema5.setTitle("");
        java.lang.String str16 = objSchema5.getType();
        java.lang.Object obj17 = null;
        boolean boolean18 = objSchema5.equals(obj17);
        io.swagger.oas.models.media.Schema schema20 = objSchema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema22.getAdditionalProperties();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test07366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07366");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal12 = null;
        objSchema11.setMultipleOf(bigDecimal12);
        objSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = objSchema16.getMinLength();
        objSchema11.addEnumItemObject((java.lang.Object) objSchema16);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int25 = objSchema16.getMaxLength();
        schema7.addExtension("no description", (java.lang.Object) objSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema7.format("");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema7.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass33 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test07367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07367");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMinimum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07368");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema16.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.maximum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test07369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07369");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.String str13 = schema12.get$ref();
        java.lang.Boolean boolean14 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema15.set$ref("no description");
        objSchema15.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.String str30 = objSchema25.getName();
        objSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList33 = objSchema25.getEnum();
        io.swagger.oas.models.media.Schema schema35 = objSchema25.name(",");
        objSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema15.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str39 = objSchema15.getType();
        io.swagger.oas.models.media.Schema schema41 = objSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema12.additionalProperties(schema41);
        java.math.BigDecimal bigDecimal43 = schema12.getMultipleOf();
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema12.$ref("hi!");
        java.lang.Boolean boolean48 = schema47.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(objList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + true + "'", boolean48, true);
    }

    @Test
    public void test07370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07370");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema15 = objSchema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.maximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07371");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test07372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07372");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = objSchema15.addProperties("*/*", schema21);
        io.swagger.oas.models.media.Schema schema24 = objSchema15.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.$ref("*/*");
        io.swagger.oas.models.media.Schema schema31 = schema24.$ref("");
        io.swagger.oas.models.media.Schema schema33 = schema31.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema14.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07373");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.discriminator(discriminator12);
        schema13.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test07374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07374");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        java.lang.String str14 = schema13.getName();
        java.lang.Boolean boolean15 = schema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema13.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = schema13.getMaximum();
        io.swagger.oas.models.media.XML xML19 = null;
        schema13.setXml(xML19);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test07375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07375");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        java.lang.Object obj13 = objSchema4.getDefault();
        objSchema4.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema4.setMinItems((java.lang.Integer) 10);
        java.lang.String str18 = objSchema4.getFormat();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test07376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07376");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = schema7.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.maximum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07377");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        java.lang.Integer int23 = schema22.getMaxItems();
        java.lang.Boolean boolean24 = schema22.getReadOnly();
        java.lang.Integer int25 = schema22.getMinItems();
        schema22.setMinItems((java.lang.Integer) (-1));
        java.lang.String str28 = schema22.getType();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test07378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07378");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema19.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema29 = objSchema0.properties(strMap28);
        io.swagger.oas.models.media.XML xML30 = schema29.getXml();
        schema29.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNull(discriminator33);
    }

    @Test
    public void test07379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07379");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.not(schema7);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test07380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07380");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str26 = schema25.getTitle();
        schema25.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema41 = schema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.xml(xML42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.xml(xML44);
        io.swagger.oas.models.media.XML xML46 = schema41.getXml();
        schema25.setNot(schema41);
        io.swagger.oas.models.media.Schema schema49 = schema25.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test07381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07381");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("hi!");
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.minProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean17 = schema16.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test07382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07382");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        objSchema0.setExternalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema7.setPattern("no description");
        objSchema7.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = objSchema7.addProperties("*/*", schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        schema14.setTitle("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema24 = objSchema0.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal26 = null;
        objSchema25.setMultipleOf(bigDecimal26);
        objSchema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        objSchema25.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema39.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = objSchema25.properties(strMap48);
        schema24.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.title("");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = objSchema55.getMinLength();
        java.lang.Integer int61 = objSchema55.getMinLength();
        schema54.addEnumItemObject((java.lang.Object) objSchema55);
        java.lang.Boolean boolean63 = schema54.getNullable();
        schema54.setExclusiveMaximum((java.lang.Boolean) true);
        schema54.setMinLength((java.lang.Integer) 10);
        java.lang.Object obj68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema54.example(obj68);
        schema54.setTitle("");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07383");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        objSchema0.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int22 = schema21.getMinItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test07384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07384");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        java.lang.Object obj25 = null;
        objSchema18.addEnumItemObject(obj25);
        io.swagger.oas.models.media.Schema schema28 = objSchema18.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema18.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema43 = schema40.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = objSchema44.getMinLength();
        schema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema44);
        java.lang.Boolean boolean51 = schema40.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.String str58 = objSchema53.getName();
        objSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList61 = objSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema63 = objSchema53.name(",");
        objSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = null;
        io.swagger.oas.models.media.Schema schema73 = objSchema66.addProperties("*/*", schema72);
        io.swagger.oas.models.media.XML xML74 = null;
        schema73.setXml(xML74);
        schema73.setTitle("*/*");
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema73.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema73.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = objSchema53.properties(strMap82);
        java.lang.Object obj84 = schema83.getDefault();
        io.swagger.oas.models.media.Schema schema85 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema40.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema30.properties(strMap86);
        io.swagger.oas.models.media.Schema schema88 = schema7.properties(strMap86);
        java.util.List<java.lang.String> strList89 = schema88.getRequired();
        java.lang.String str90 = schema88.getName();
        java.lang.String str91 = schema88.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(objList61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "no description" + "'", str91, "no description");
    }

    @Test
    public void test07385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07385");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = objSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList15 = schema14.getEnum();
        java.lang.Boolean boolean16 = schema14.getExclusiveMinimum();
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema14.getNullable();
        java.lang.String str20 = schema14.getDescription();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(objList15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test07386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07386");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maximum(bigDecimal8);
        objSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema12.setMultipleOf(bigDecimal13);
        objSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = objSchema12.title("hi!");
        java.lang.Object obj19 = null;
        objSchema12.addEnumItemObject(obj19);
        objSchema12.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema12);
        io.swagger.oas.models.media.XML xML24 = schema23.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
    }

    @Test
    public void test07387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07387");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.$ref("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema17.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getReadOnly();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal22 = schema19.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema19.getProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test07388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07388");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.String str11 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 0\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07389");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema7.getDiscriminator();
        java.lang.Boolean boolean21 = schema7.getWriteOnly();
        schema7.setName("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        java.lang.String str29 = objSchema24.getName();
        objSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList32 = objSchema24.getEnum();
        java.lang.String str33 = objSchema24.getTitle();
        objSchema24.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = objSchema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = objSchema40.getNot();
        java.lang.Integer int46 = objSchema40.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema52.setPattern("no description");
        objSchema52.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int57 = objSchema52.getMinLength();
        objSchema47.addEnumItemObject((java.lang.Object) objSchema52);
        objSchema47.setMinProperties((java.lang.Integer) 100);
        objSchema47.setPattern("");
        java.math.BigDecimal bigDecimal63 = objSchema47.getMultipleOf();
        java.lang.String[] strArray81 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        io.swagger.oas.models.media.Schema schema84 = objSchema47.required((java.util.List<java.lang.String>) strList82);
        java.util.List<java.lang.Object> objList85 = schema84.getEnum();
        objSchema40.setEnum(objList85);
        schema39.setEnum(objList85);
        schema7.setEnum(objList85);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema7.multipleOf(bigDecimal89);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(objList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(objList85);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test07390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07390");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean29 = objSchema0.getNullable();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
    }

    @Test
    public void test07391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07391");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema12.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        schema12.setMaximum(bigDecimal20);
        schema12.setDescription("hi!");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07392");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema7.getNot();
        io.swagger.oas.models.media.Discriminator discriminator17 = schema7.getDiscriminator();
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.XML xML39 = null;
        schema38.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema29.additionalProperties(schema38);
        java.lang.String str44 = schema38.getName();
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal48 = null;
        objSchema47.setMultipleOf(bigDecimal48);
        objSchema47.setType("");
        java.math.BigDecimal bigDecimal52 = objSchema47.getMaximum();
        java.math.BigDecimal bigDecimal53 = null;
        objSchema47.setMultipleOf(bigDecimal53);
        java.math.BigDecimal bigDecimal55 = objSchema47.getMaximum();
        objSchema47.setDescription("*/*");
        schema46.setNot((io.swagger.oas.models.media.Schema) objSchema47);
        java.util.List<java.lang.String> strList59 = schema46.getRequired();
        java.lang.Integer int60 = schema46.getMaxProperties();
        schema46.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList63 = null;
        schema46.setRequired(strList63);
        io.swagger.oas.models.media.Schema schema66 = schema46.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema7.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema71 = schema66.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema71.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test07393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07393");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMultipleOf(bigDecimal18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07394");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema15.setPattern("no description");
        objSchema15.setReadOnly((java.lang.Boolean) false);
        objSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema15.properties(strMap22);
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.Schema schema38 = objSchema29.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        schema38.addExtension("#/components/schemas/", (java.lang.Object) objSchema41);
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        schema38.addEnumItemObject((java.lang.Object) operationParser47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema56.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema61 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema38.setAdditionalProperties(schema56);
        schema27.setNot(schema56);
        java.lang.Boolean boolean64 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = schema10.addProperties("#/components/schemas/no description", schema56);
        java.lang.String str66 = schema65.getFormat();
        io.swagger.oas.models.media.Schema schema68 = schema65.maxLength((java.lang.Integer) 100);
        schema68.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07395");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema0.minimum(bigDecimal33);
        objSchema0.setMinProperties((java.lang.Integer) (-1));
        objSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = objSchema0.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07396");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = objSchema0.getProperties();
        java.math.BigDecimal bigDecimal5 = objSchema0.getMinimum();
        java.lang.Boolean boolean6 = objSchema0.getNullable();
        java.lang.String str7 = objSchema0.getType();
        java.lang.Integer int8 = objSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        objSchema9.addExtension("", (java.lang.Object) objSchema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        objSchema13.setExternalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = objSchema13.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList25 = schema22.getRequired();
        io.swagger.oas.models.media.Schema schema26 = objSchema0.required(strList25);
        io.swagger.oas.models.media.Schema schema28 = objSchema0.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07397");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        java.lang.String str42 = schema39.getPattern();
        java.lang.Integer int43 = schema39.getMinLength();
        io.swagger.oas.models.media.Schema schema45 = schema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema51 = schema45.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema45.maximum(bigDecimal52);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        schema45.setDiscriminator(discriminator54);
        schema45.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "no description" + "'", str42, "no description");
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test07398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07398");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = objSchema23.getMinLength();
        objSchema18.addEnumItemObject((java.lang.Object) objSchema23);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = objSchema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int34 = schema33.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = null;
        io.swagger.oas.models.media.Schema schema42 = objSchema35.addProperties("*/*", schema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema42.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        schema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema46);
        java.lang.Boolean boolean53 = schema42.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.String str60 = objSchema55.getName();
        objSchema55.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList63 = objSchema55.getEnum();
        io.swagger.oas.models.media.Schema schema65 = objSchema55.name(",");
        objSchema55.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema68.setPattern("no description");
        objSchema68.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = null;
        io.swagger.oas.models.media.Schema schema75 = objSchema68.addProperties("*/*", schema74);
        io.swagger.oas.models.media.XML xML76 = null;
        schema75.setXml(xML76);
        schema75.setTitle("*/*");
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema75.xml(xML80);
        io.swagger.oas.models.media.Schema schema83 = schema75.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema83.getProperties();
        io.swagger.oas.models.media.Schema schema85 = objSchema55.properties(strMap84);
        java.lang.Object obj86 = schema85.getDefault();
        io.swagger.oas.models.media.Schema schema87 = schema42.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema33.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = objSchema0.properties(strMap88);
        objSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(objList63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test07399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07399");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal9 = null;
        objSchema8.setMultipleOf(bigDecimal9);
        objSchema8.setType("");
        java.math.BigDecimal bigDecimal13 = objSchema8.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        objSchema8.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = objSchema8.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = objSchema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema8.externalDocs(externalDocumentation20);
        objSchema0.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        objSchema23.setExternalDocs(externalDocumentation28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema32.addProperties("*/*", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.setTitle("*/*");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        java.lang.Boolean boolean46 = schema39.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema31.example((java.lang.Object) boolean46);
        schema21.setNot(schema31);
        io.swagger.oas.models.media.Schema schema50 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema50.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07400");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.multipleOf(bigDecimal16);
        schema17.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07401");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        java.lang.Boolean boolean18 = schema7.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.String str25 = objSchema20.getName();
        objSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList28 = objSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema30 = objSchema20.name(",");
        objSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = null;
        io.swagger.oas.models.media.Schema schema40 = objSchema33.addProperties("*/*", schema39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        schema40.setTitle("*/*");
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.xml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema40.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema48.getProperties();
        io.swagger.oas.models.media.Schema schema50 = objSchema20.properties(strMap49);
        java.lang.Object obj51 = schema50.getDefault();
        io.swagger.oas.models.media.Schema schema52 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML58 = null;
        schema55.setXml(xML58);
        java.lang.String str60 = schema55.getTitle();
        java.lang.Integer int61 = schema55.getMinItems();
        schema55.setMinItems((java.lang.Integer) 0);
        schema55.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema55.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean68 = schema67.getWriteOnly();
        java.math.BigDecimal bigDecimal69 = schema67.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(objList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(bigDecimal69);
    }

    @Test
    public void test07402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07402");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.minimum(bigDecimal22);
        objSchema5.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = objSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.lang.Boolean boolean30 = objSchema29.getDeprecated();
        java.lang.Boolean boolean31 = objSchema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = objSchema29.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema27.addProperties("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) objSchema29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema35.setPattern("no description");
        objSchema35.setReadOnly((java.lang.Boolean) false);
        java.lang.String str40 = objSchema35.getName();
        objSchema35.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList43 = objSchema35.getEnum();
        io.swagger.oas.models.media.Schema schema45 = objSchema35.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = objSchema35.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = objSchema35.getExternalDocs();
        io.swagger.oas.models.media.Schema schema50 = objSchema35.title("*/*");
        java.lang.Boolean boolean51 = objSchema35.getExclusiveMinimum();
        objSchema35.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = objSchema35.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        objSchema35.setProperties(strMap56);
        objSchema35.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema61 = objSchema35.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal63 = null;
        objSchema62.setMultipleOf(bigDecimal63);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        objSchema62.setRequired((java.util.List<java.lang.String>) strList69);
        objSchema35.setRequired((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        java.lang.String str78 = objSchema73.getName();
        objSchema73.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList81 = objSchema73.getEnum();
        io.swagger.oas.models.media.Schema schema83 = objSchema73.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = objSchema73.title("no description");
        objSchema35.setExample((java.lang.Object) schema85);
        io.swagger.oas.models.media.Schema schema88 = objSchema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema90 = objSchema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema27.setNot((io.swagger.oas.models.media.Schema) objSchema35);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(objList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(objList81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test07403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07403");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema9.setPattern("no description");
        objSchema9.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = objSchema9.addProperties("*/*", schema15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        schema16.setTitle("*/*");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.xml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.externalDocs(externalDocumentation23);
        schema8.addEnumItemObject((java.lang.Object) schema24);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setWriteOnly((java.lang.Boolean) true);
        schema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean32 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema24.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        objSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = objSchema37.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.$ref(",");
        java.lang.Boolean boolean48 = schema45.getNullable();
        schema45.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema45.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal54 = null;
        objSchema53.setMultipleOf(bigDecimal54);
        objSchema53.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema53.set$ref("no description");
        java.util.List<java.lang.Object> objList60 = objSchema53.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema53.discriminator(discriminator61);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema63.setPattern("no description");
        objSchema63.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema63.addProperties("*/*", schema69);
        io.swagger.oas.models.media.Schema schema72 = objSchema63.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal73 = schema72.getMinimum();
        java.math.BigDecimal bigDecimal74 = null;
        schema72.setMultipleOf(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = schema72.$ref("*/*");
        io.swagger.oas.models.media.Schema schema79 = schema77.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = schema62.additionalProperties(schema79);
        java.lang.Boolean boolean81 = schema79.getReadOnly();
        java.util.List<java.lang.String> strList82 = schema79.getRequired();
        java.lang.String str83 = schema79.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema79.getProperties();
        schema45.setProperties(strMap84);
        io.swagger.oas.models.media.Schema schema86 = schema36.properties(strMap84);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(objList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test07404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07404");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) true);
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema16.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07405");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema7.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.nullable((java.lang.Boolean) true);
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema18);
        java.lang.Integer int26 = objSchema18.getMinProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test07406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07406");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.addRequiredItem("no description");
        java.lang.String str19 = schema16.getName();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        schema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema31);
        schema27.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema40.setPattern("no description");
        objSchema40.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = null;
        io.swagger.oas.models.media.Schema schema47 = objSchema40.addProperties("*/*", schema46);
        io.swagger.oas.models.media.XML xML48 = null;
        schema47.setXml(xML48);
        schema47.setTitle("*/*");
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema47.xml(xML52);
        schema27.setDefault((java.lang.Object) xML52);
        io.swagger.oas.models.media.Schema schema56 = schema27.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema27.discriminator(discriminator57);
        io.swagger.oas.models.media.Schema schema60 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema61.setPattern("no description");
        objSchema61.setReadOnly((java.lang.Boolean) false);
        java.lang.String str66 = objSchema61.getName();
        objSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList69 = objSchema61.getEnum();
        io.swagger.oas.models.media.Schema schema71 = objSchema61.name(",");
        objSchema61.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema74.setPattern("no description");
        objSchema74.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = null;
        io.swagger.oas.models.media.Schema schema81 = objSchema74.addProperties("*/*", schema80);
        io.swagger.oas.models.media.XML xML82 = null;
        schema81.setXml(xML82);
        schema81.setTitle("*/*");
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema81.xml(xML86);
        io.swagger.oas.models.media.Schema schema89 = schema81.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema91 = objSchema61.properties(strMap90);
        io.swagger.oas.models.media.Schema schema92 = schema27.properties(strMap90);
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema27.multipleOf(bigDecimal93);
        java.lang.Boolean boolean95 = schema27.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap96 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema97 = schema16.properties(strMap96);
        java.lang.Object obj98 = null;
        schema97.setDefault(obj98);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(objList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test07407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07407");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.pattern("*/*");
        java.lang.Boolean boolean12 = schema11.getExclusiveMaximum();
        java.lang.Boolean boolean13 = schema11.getUniqueItems();
        java.math.BigDecimal bigDecimal14 = schema11.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07408");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean20 = schema7.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema7.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07409");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.discriminator(discriminator26);
        java.math.BigDecimal bigDecimal28 = schema25.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.externalDocs(externalDocumentation29);
        java.util.List<java.lang.String> strList31 = schema25.getRequired();
        java.lang.Object obj32 = schema25.getDefault();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test07410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07410");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        schema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal35 = null;
        objSchema34.setMultipleOf(bigDecimal35);
        objSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema39.setPattern("no description");
        objSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = objSchema39.getMinLength();
        objSchema34.addEnumItemObject((java.lang.Object) objSchema39);
        objSchema39.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int48 = objSchema39.getMaxLength();
        io.swagger.oas.models.media.Schema schema50 = objSchema39.maxLength((java.lang.Integer) 100);
        schema31.setNot((io.swagger.oas.models.media.Schema) objSchema39);
        java.lang.Object obj52 = schema31.getExample();
        io.swagger.oas.models.media.Schema schema54 = schema31.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema55.setPattern("no description");
        objSchema55.setReadOnly((java.lang.Boolean) false);
        objSchema55.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = objSchema55.properties(strMap62);
        io.swagger.oas.models.media.Schema schema65 = schema63.type("");
        io.swagger.oas.models.media.Schema schema67 = schema63.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal70 = schema67.getMaximum();
        io.swagger.oas.models.media.Schema schema72 = schema67.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema74 = schema67.maxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.Object> objList75 = schema74.getEnum();
        io.swagger.oas.models.media.Schema schema76 = schema31.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = schema76.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "#/components/schemas/" + "'", obj52, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(objList75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test07411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07411");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        java.lang.Object obj10 = schema9.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema9.getExtensions();
        java.lang.Integer int12 = schema9.getMinItems();
        java.lang.Boolean boolean13 = schema9.getWriteOnly();
        java.math.BigDecimal bigDecimal14 = schema9.getMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test07412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07412");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.$ref("*/*");
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: */*\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        java.lang.Boolean boolean30 = objSchema14.getExclusiveMinimum();
        objSchema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema14.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        objSchema14.setProperties(strMap35);
        java.lang.Object obj37 = objSchema14.getExample();
        java.lang.Object obj38 = objSchema14.getExample();
        io.swagger.oas.models.media.Schema schema40 = objSchema14.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema40.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema6.addProperties("*/*", schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test07413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07413");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList7 = objSchema0.getEnum();
        java.lang.Boolean boolean8 = objSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = schema10.getMaximum();
        java.lang.Integer int12 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema30.setPattern("no description");
        objSchema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema30.addProperties("*/*", schema36);
        io.swagger.oas.models.media.XML xML38 = null;
        schema37.setXml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema28.additionalProperties(schema37);
        java.lang.String str43 = schema37.getName();
        io.swagger.oas.models.media.Schema schema45 = schema37.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal47 = null;
        objSchema46.setMultipleOf(bigDecimal47);
        objSchema46.setType("");
        java.math.BigDecimal bigDecimal51 = objSchema46.getMaximum();
        java.math.BigDecimal bigDecimal52 = null;
        objSchema46.setMultipleOf(bigDecimal52);
        java.math.BigDecimal bigDecimal54 = objSchema46.getMaximum();
        objSchema46.setDescription("*/*");
        schema45.setNot((io.swagger.oas.models.media.Schema) objSchema46);
        io.swagger.oas.models.media.Schema schema59 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema60.setPattern("no description");
        objSchema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = objSchema60.addProperties("*/*", schema66);
        io.swagger.oas.models.media.Schema schema69 = objSchema60.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = objSchema60.xml(xML70);
        io.swagger.oas.models.media.Schema schema73 = objSchema60.deprecated((java.lang.Boolean) false);
        schema73.set$ref("*/*");
        io.swagger.oas.models.media.XML xML76 = null;
        schema73.setXml(xML76);
        schema73.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal81 = null;
        objSchema80.setMultipleOf(bigDecimal81);
        objSchema80.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema86 = objSchema80.title("hi!");
        io.swagger.oas.models.media.XML xML87 = objSchema80.getXml();
        io.swagger.oas.models.media.Schema schema88 = schema73.additionalProperties((io.swagger.oas.models.media.Schema) objSchema80);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema88.multipleOf(bigDecimal89);
        schema90.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema94 = schema90.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema95 = schema59.not(schema94);
        schema16.setExample((java.lang.Object) schema59);
        org.junit.Assert.assertNull(objList7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(xML87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test07414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07414");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        java.lang.String str9 = objSchema0.getTitle();
        objSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = objSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07415");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = objSchema11.getMinLength();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema11);
        schema7.setMinProperties((java.lang.Integer) 10);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML24 = schema23.getXml();
        java.lang.Boolean boolean25 = schema23.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        objSchema26.set$ref("no description");
        objSchema26.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.String str41 = objSchema36.getName();
        objSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList44 = objSchema36.getEnum();
        io.swagger.oas.models.media.Schema schema46 = objSchema36.name(",");
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        objSchema26.addExtension("#/components/schemas/", (java.lang.Object) false);
        java.lang.String str50 = objSchema26.getType();
        io.swagger.oas.models.media.Schema schema52 = objSchema26.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema53.setPattern("no description");
        objSchema53.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = objSchema53.addProperties("*/*", schema59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema60.getExtensions();
        io.swagger.oas.models.media.Schema schema63 = schema60.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema65 = schema60.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema66.setPattern("no description");
        objSchema66.setReadOnly((java.lang.Boolean) false);
        java.lang.String str71 = objSchema66.getName();
        objSchema66.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList74 = objSchema66.getEnum();
        io.swagger.oas.models.media.Schema schema76 = objSchema66.name(",");
        objSchema66.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema79.setPattern("no description");
        objSchema79.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = null;
        io.swagger.oas.models.media.Schema schema86 = objSchema79.addProperties("*/*", schema85);
        io.swagger.oas.models.media.XML xML87 = null;
        schema86.setXml(xML87);
        schema86.setTitle("*/*");
        io.swagger.oas.models.media.XML xML91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema86.xml(xML91);
        io.swagger.oas.models.media.Schema schema94 = schema86.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = schema94.getProperties();
        io.swagger.oas.models.media.Schema schema96 = objSchema66.properties(strMap95);
        io.swagger.oas.models.media.Schema schema97 = schema65.properties(strMap95);
        objSchema26.setProperties(strMap95);
        io.swagger.oas.models.media.Schema schema99 = schema23.properties(strMap95);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(objList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(objList74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test07416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07416");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.not(schema7);
        java.lang.Object obj9 = schema8.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.title("*/*");
        io.swagger.oas.models.media.Schema schema24 = schema22.description(",");
        java.math.BigDecimal bigDecimal25 = schema22.getMultipleOf();
        java.lang.Boolean boolean26 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema28 = schema22.title("hi!");
        java.lang.Object obj29 = schema28.getDefault();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.discriminator(discriminator30);
        schema8.setNot(schema28);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07417");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        io.swagger.oas.models.media.Schema schema30 = objSchema0.not((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07418");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema15.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema15.setDiscriminator(discriminator20);
        schema15.setMaxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean24 = schema15.getUniqueItems();
        schema15.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test07419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07419");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean18 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema26.setXml(xML27);
        schema26.setTitle("*/*");
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.xml(xML31);
        schema26.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema26.$ref("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema36.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema38.getReadOnly();
        java.lang.Boolean boolean40 = schema38.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = objSchema41.title("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema38.example((java.lang.Object) 1);
        io.swagger.oas.models.media.Schema schema52 = schema38.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal53 = schema52.getMaximum();
        io.swagger.oas.models.media.XML xML54 = schema52.getXml();
        objSchema0.setNot(schema52);
        schema52.setTitle("");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(xML54);
    }

    @Test
    public void test07420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07420");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.title(",");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 1);
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema18.$ref("*/*");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.maximum(bigDecimal27);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07421");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.maximum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test07422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07422");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setType("*/*");
        io.swagger.oas.annotations.Parameter[] parameterArray10 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray10, components17);
        boolean boolean19 = objSchema0.equals((java.lang.Object) components17);
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = objSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        schema25.setTitle("");
        schema25.setMaxProperties((java.lang.Integer) 0);
        java.lang.Object obj30 = schema25.getExample();
        schema25.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(parameterArray10);
        org.junit.Assert.assertNotNull(parameterListOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
        org.junit.Assert.assertNotNull(parameterListOptional16);
        org.junit.Assert.assertNotNull(parameterListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test07423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07423");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal17 = null;
        objSchema16.setMultipleOf(bigDecimal17);
        objSchema16.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        objSchema16.setExternalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = null;
        io.swagger.oas.models.media.Schema schema30 = objSchema23.addProperties("*/*", schema29);
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        schema30.setTitle("*/*");
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema30.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = schema38.getProperties();
        io.swagger.oas.models.media.Schema schema40 = objSchema16.properties(strMap39);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        objSchema41.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.XML xML56 = null;
        schema55.setXml(xML56);
        schema55.setTitle("*/*");
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema55.xml(xML60);
        io.swagger.oas.models.media.Schema schema63 = schema55.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = schema63.getProperties();
        io.swagger.oas.models.media.Schema schema65 = objSchema41.properties(strMap64);
        schema40.setProperties(strMap64);
        io.swagger.oas.models.media.Schema schema68 = schema40.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema68.title("");
        schema68.setType("no description");
        io.swagger.oas.models.media.Schema schema74 = schema68.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = schema74.nullable((java.lang.Boolean) false);
        schema74.setWriteOnly((java.lang.Boolean) false);
        schema12.setNot(schema74);
        java.lang.Integer int80 = schema74.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int80);
    }

    @Test
    public void test07424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07424");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = schema25.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int29 = schema25.getMinLength();
        java.lang.Boolean boolean30 = schema25.getExclusiveMinimum();
        java.lang.Boolean boolean31 = schema25.getUniqueItems();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + true + "'", boolean31, true);
    }

    @Test
    public void test07425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07425");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.deprecated((java.lang.Boolean) false);
        schema7.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07426");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema10.readOnly((java.lang.Boolean) true);
        java.lang.Object obj16 = schema10.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test07427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07427");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.maximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = schema23.getMultipleOf();
        java.lang.String str28 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: 0\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema23.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test07428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07428");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema5.discriminator(discriminator22);
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal27 = null;
        objSchema26.setMultipleOf(bigDecimal27);
        objSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = objSchema31.getMinLength();
        objSchema26.addEnumItemObject((java.lang.Object) objSchema31);
        objSchema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int40 = objSchema31.getMaxLength();
        objSchema31.setFormat("#/components/schemas/no description");
        schema23.setNot((io.swagger.oas.models.media.Schema) objSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema45.setPattern("no description");
        objSchema45.setReadOnly((java.lang.Boolean) false);
        objSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = objSchema45.properties(strMap52);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema53.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = objSchema31.addProperties("", schema57);
        io.swagger.oas.models.media.Schema schema66 = schema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema57.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema68.setMinLength((java.lang.Integer) 100);
        schema68.setName("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema68.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test07429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07429");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.multipleOf(bigDecimal13);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test07430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07430");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("hi!");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema22.setDiscriminator(discriminator23);
        schema22.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07431");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = objSchema0.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        objSchema0.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML22 = null;
        schema19.setXml(xML22);
        java.lang.String str24 = schema19.getPattern();
        schema19.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "no description" + "'", str24, "no description");
    }

    @Test
    public void test07432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07432");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.lang.Boolean boolean18 = schema17.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema17.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.maximum(bigDecimal21);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.Schema schema26 = schema22.maxProperties((java.lang.Integer) 0);
        schema26.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07433");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = objSchema0.readOnly((java.lang.Boolean) true);
        objSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int6 = objSchema0.getMaxLength();
        objSchema0.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test07434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07434");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = objSchema14.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = objSchema0.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str38 = objSchema33.getName();
        objSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList41 = objSchema33.getEnum();
        io.swagger.oas.models.media.Schema schema43 = objSchema33.exclusiveMaximum((java.lang.Boolean) false);
        schema43.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        objSchema46.addExtension("", (java.lang.Object) objSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema56.setPattern("no description");
        objSchema56.setReadOnly((java.lang.Boolean) false);
        objSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = objSchema56.properties(strMap63);
        io.swagger.oas.models.media.Schema schema66 = schema64.type("");
        io.swagger.oas.models.media.Schema schema67 = objSchema46.additionalProperties(schema64);
        io.swagger.oas.models.media.Schema schema68 = schema43.additionalProperties(schema67);
        schema32.setExample((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema71 = schema68.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema68.setDeprecated((java.lang.Boolean) true);
        schema68.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(objList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test07435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07435");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        java.lang.Object obj12 = objSchema0.getExample();
        java.util.List<java.lang.Object> objList13 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = objSchema0.title("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = objSchema0.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal24 = null;
        objSchema23.setMultipleOf(bigDecimal24);
        objSchema23.setType("");
        java.math.BigDecimal bigDecimal28 = objSchema23.getMaximum();
        io.swagger.oas.models.media.Schema schema30 = objSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.String str36 = objSchema31.getName();
        objSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList39 = objSchema31.getEnum();
        io.swagger.oas.models.media.Schema schema41 = objSchema31.exclusiveMaximum((java.lang.Boolean) false);
        schema41.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema41.getExtensions();
        java.lang.Integer int45 = schema41.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema41.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema23.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(objList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(objList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07436");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxProperties((java.lang.Integer) 1);
        java.lang.String str16 = schema15.toString();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema15.discriminator(discriminator25);
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07437");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema7.addExtension("#/components/schemas/", (java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        schema31.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema31.$ref("*/*");
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean44 = schema43.getReadOnly();
        java.lang.Boolean boolean45 = schema43.getExclusiveMinimum();
        schema43.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema49.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema52 = schema21.additionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema54 = schema21.exclusiveMinimum((java.lang.Boolean) true);
        schema54.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema54.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = schema58.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema62.setPattern("no description");
        objSchema62.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = objSchema62.addProperties("*/*", schema68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = schema69.getExtensions();
        io.swagger.oas.models.media.Schema schema72 = schema69.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema73.setPattern("no description");
        objSchema73.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int78 = objSchema73.getMinLength();
        schema69.setAdditionalProperties((io.swagger.oas.models.media.Schema) objSchema73);
        java.math.BigDecimal bigDecimal80 = null;
        schema69.setMaximum(bigDecimal80);
        schema69.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema69.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema69.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema89 = schema69.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema60.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema89);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + true + "'", boolean44, true);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test07438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07438");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        java.lang.Integer int12 = schema10.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test07439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07439");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = objSchema0.title("*/*");
        java.lang.Boolean boolean16 = objSchema0.getExclusiveMinimum();
        objSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = objSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        objSchema0.setProperties(strMap21);
        objSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema25.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = objSchema25.deprecated((java.lang.Boolean) false);
        schema38.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setNot(schema42);
        io.swagger.oas.models.media.Schema schema45 = objSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean46 = objSchema0.getNullable();
        objSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = objSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema51.setPattern("no description");
        objSchema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = objSchema51.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema schema60 = objSchema51.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = objSchema51.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = objSchema51.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal65 = objSchema51.getMultipleOf();
        objSchema51.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = objSchema51.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema69.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema50.setExample((java.lang.Object) schema69);
        java.lang.Integer int73 = schema69.getMaxProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int73);
    }

    @Test
    public void test07440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07440");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, , hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema12.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema26 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator27 = schema12.getDiscriminator();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
    }

    @Test
    public void test07441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07441");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = objSchema4.getName();
        io.swagger.oas.models.media.Schema schema14 = objSchema4.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int15 = objSchema4.getMinProperties();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = objSchema4.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.String str26 = objSchema21.getName();
        objSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList29 = objSchema21.getEnum();
        io.swagger.oas.models.media.Schema schema31 = objSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = objSchema21.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = objSchema21.getExternalDocs();
        java.lang.Integer int35 = objSchema21.getMaxLength();
        objSchema21.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema21.externalDocs(externalDocumentation38);
        schema39.setUniqueItems((java.lang.Boolean) true);
        schema39.setExclusiveMaximum((java.lang.Boolean) false);
        schema17.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(objList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test07442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07442");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.getAdditionalProperties();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test07443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07443");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        java.lang.Object obj7 = null;
        objSchema0.addEnumItemObject(obj7);
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = objSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        objSchema0.setDefault((java.lang.Object) "*/*");
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        objSchema0.setMultipleOf(bigDecimal24);
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = objSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setDescription("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07444");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema14.addProperties("*/*", schema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.xml(xML25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema11.addProperties(",", schema26);
        io.swagger.oas.models.media.Schema schema30 = schema26.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = schema26.getUniqueItems();
        schema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        schema26.setMinimum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
    }

    @Test
    public void test07445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07445");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = objSchema0.getMinLength();
        java.lang.Integer int6 = objSchema0.getMinLength();
        java.lang.Boolean boolean7 = objSchema0.getUniqueItems();
        java.lang.Integer int8 = objSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.addRequiredItem("");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test07446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07446");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        objSchema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema23.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.type("");
        io.swagger.oas.models.media.Schema schema34 = objSchema13.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema10.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema10.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema37.addProperties("*/*", schema43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema44.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.String str54 = objSchema49.getName();
        objSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList57 = objSchema49.getEnum();
        io.swagger.oas.models.media.Schema schema59 = objSchema49.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = objSchema49.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = objSchema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema64 = objSchema49.title("*/*");
        java.lang.Boolean boolean65 = objSchema49.getExclusiveMinimum();
        objSchema49.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = objSchema49.getUniqueItems();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = objSchema49.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.String str76 = objSchema71.getName();
        objSchema71.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList79 = objSchema71.getEnum();
        io.swagger.oas.models.media.Schema schema81 = objSchema71.name(",");
        objSchema71.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = objSchema71.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList86 = schema85.getEnum();
        io.swagger.oas.models.media.Schema schema88 = schema85.uniqueItems((java.lang.Boolean) true);
        schema70.setAdditionalProperties(schema85);
        io.swagger.oas.models.media.Schema schema90 = schema48.additionalProperties(schema85);
        schema10.setNot(schema90);
        schema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int94 = schema10.getMinProperties();
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema10.minimum(bigDecimal95);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(objList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(objList79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(objList86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test07447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07447");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = schema14.getMinimum();
        schema14.setType("no description");
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test07448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07448");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        io.swagger.oas.models.media.Schema schema13 = objSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxItems((java.lang.Integer) 100);
        schema16.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07449");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = objSchema19.addProperties("*/*", schema25);
        io.swagger.oas.models.media.Schema schema28 = objSchema19.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        schema28.addExtension("#/components/schemas/", (java.lang.Object) objSchema31);
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        schema28.addEnumItemObject((java.lang.Object) operationParser37);
        io.swagger.oas.models.media.Schema schema39 = objSchema5.addProperties("no description", schema28);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str42 = schema39.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema39.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema schema46 = schema44.type("");
        io.swagger.oas.models.media.Schema schema48 = schema44.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        schema50.setName("#/components/schemas/hi!");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07450");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        java.lang.Integer int18 = schema16.getMaxItems();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test07451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07451");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = objSchema12.addProperties("*/*", schema18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        schema7.addExtension("#/components/schemas/", (java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test07452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07452");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.lang.Boolean boolean13 = schema11.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema14.setPattern("no description");
        objSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str19 = objSchema14.getName();
        objSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList22 = objSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema24 = objSchema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = objSchema14.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = objSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = objSchema14.title("*/*");
        java.lang.Boolean boolean30 = objSchema14.getExclusiveMinimum();
        objSchema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = objSchema14.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        objSchema14.setProperties(strMap35);
        objSchema14.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = objSchema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = objSchema14.title("");
        schema11.setNot((io.swagger.oas.models.media.Schema) objSchema14);
        io.swagger.oas.models.media.Schema schema45 = objSchema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Object> objList46 = objSchema14.getEnum();
        objSchema14.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(objList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(objList46);
    }

    @Test
    public void test07453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07453");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.name(",");
        objSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema26.setPattern("no description");
        objSchema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = objSchema26.addProperties("*/*", schema32);
        io.swagger.oas.models.media.XML xML34 = null;
        schema33.setXml(xML34);
        schema33.setTitle("*/*");
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema33.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        io.swagger.oas.models.media.Schema schema43 = objSchema13.properties(strMap42);
        io.swagger.oas.models.media.Schema schema44 = schema12.properties(strMap42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema47.setPattern("no description");
        objSchema47.setReadOnly((java.lang.Boolean) false);
        objSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema47.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.title("*/*");
        io.swagger.oas.models.media.Schema schema60 = schema44.example((java.lang.Object) schema59);
        schema60.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int63 = schema60.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema60.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal67 = null;
        objSchema66.setMultipleOf(bigDecimal67);
        objSchema66.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema71.setPattern("no description");
        objSchema71.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int76 = objSchema71.getMinLength();
        objSchema66.addEnumItemObject((java.lang.Object) objSchema71);
        objSchema71.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema81 = objSchema71.maxProperties((java.lang.Integer) 0);
        objSchema71.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema85 = objSchema71.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema87 = objSchema71.type(",");
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = objSchema71.minimum(bigDecimal88);
        io.swagger.oas.models.media.Schema schema91 = schema89.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema93 = schema89.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator94 = null;
        schema89.setDiscriminator(discriminator94);
        schema65.setExample((java.lang.Object) schema89);
        io.swagger.oas.models.media.Schema schema98 = schema65.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test07454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07454");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        schema12.setMinLength((java.lang.Integer) 10);
        schema12.setType(",");
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema12.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07455");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.String str22 = objSchema17.getName();
        objSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList25 = objSchema17.getEnum();
        io.swagger.oas.models.media.Schema schema27 = objSchema17.name(",");
        java.lang.Object obj28 = null;
        objSchema17.addEnumItemObject(obj28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema17.externalDocs(externalDocumentation30);
        schema7.setExample((java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema schema34 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean35 = schema34.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal37 = null;
        objSchema36.setMultipleOf(bigDecimal37);
        objSchema36.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema41.setPattern("no description");
        objSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = objSchema41.getMinLength();
        objSchema36.addEnumItemObject((java.lang.Object) objSchema41);
        objSchema36.setMinProperties((java.lang.Integer) 100);
        objSchema36.setPattern("");
        java.math.BigDecimal bigDecimal52 = objSchema36.getMultipleOf();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "hi!", "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        io.swagger.oas.models.media.Schema schema73 = objSchema36.required((java.util.List<java.lang.String>) strList71);
        java.util.List<java.lang.Object> objList74 = schema73.getEnum();
        schema34.setEnum(objList74);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(objList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(objList74);
    }

    @Test
    public void test07456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07456");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema7.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int16 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal19 = null;
        objSchema18.setMultipleOf(bigDecimal19);
        objSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = objSchema18.title("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema27.setPattern("no description");
        objSchema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = null;
        io.swagger.oas.models.media.Schema schema34 = objSchema27.addProperties("*/*", schema33);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        schema34.setTitle("*/*");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        schema26.addEnumItemObject((java.lang.Object) schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema42.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema46 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema7.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema50.setPattern("no description");
        objSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.String str55 = objSchema50.getName();
        objSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList58 = objSchema50.getEnum();
        io.swagger.oas.models.media.Schema schema60 = objSchema50.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal61 = null;
        objSchema50.setMultipleOf(bigDecimal61);
        java.lang.Boolean boolean63 = objSchema50.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema65 = objSchema50.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema7.addProperties("hi!", schema65);
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema70 = schema66.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.List<java.lang.Object> objList71 = schema66.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(objList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(objList71);
    }

    @Test
    public void test07457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07457");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal15 = null;
        objSchema14.setMultipleOf(bigDecimal15);
        objSchema14.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema19.setPattern("no description");
        objSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = objSchema19.getMinLength();
        objSchema14.addEnumItemObject((java.lang.Object) objSchema19);
        objSchema19.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = objSchema19.getMaxLength();
        io.swagger.oas.models.media.Schema schema30 = objSchema19.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = objSchema19.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = schema32.getReadOnly();
        java.util.List<java.lang.String> strList34 = schema32.getRequired();
        io.swagger.oas.models.media.Schema schema36 = schema32.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema11.not(schema32);
        io.swagger.oas.models.media.Schema schema39 = schema11.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML40 = schema11.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(xML40);
    }

    @Test
    public void test07458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07458");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema5 = null;
        objSchema0.setAdditionalProperties(schema5);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema18.minProperties((java.lang.Integer) 10);
        schema18.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema18.readOnly((java.lang.Boolean) false);
        schema18.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema28.setPattern("no description");
        objSchema28.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = objSchema28.addProperties("*/*", schema34);
        io.swagger.oas.models.media.Schema schema37 = objSchema28.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = objSchema28.xml(xML38);
        java.math.BigDecimal bigDecimal40 = schema39.getMultipleOf();
        io.swagger.oas.models.media.Schema schema42 = schema39.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal43 = schema42.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema45 = schema18.properties(strMap44);
        io.swagger.oas.models.media.Schema schema46 = schema10.properties(strMap44);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07459");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        objSchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = objSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema12.setPattern("no description");
        objSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.String str17 = objSchema12.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        objSchema12.setProperties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = objSchema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = objSchema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int24 = objSchema12.getMaxItems();
        io.swagger.oas.models.media.Schema schema25 = objSchema0.additionalProperties((io.swagger.oas.models.media.Schema) objSchema12);
        java.lang.String str26 = objSchema0.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema0.externalDocs(externalDocumentation27);
        schema28.setMaxProperties((java.lang.Integer) 0);
        schema28.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema28.setExternalDocs(externalDocumentation33);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07460");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.name(",");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        objSchema13.addExtension("", (java.lang.Object) objSchema17);
        java.lang.Integer int23 = objSchema17.getMinProperties();
        java.math.BigDecimal bigDecimal24 = objSchema17.getMultipleOf();
        objSchema17.setPattern("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema10.not((io.swagger.oas.models.media.Schema) objSchema17);
        schema10.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = schema10.getMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test07461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07461");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        schema13.set$ref("*/*");
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        schema13.setMinimum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test07462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07462");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema11.setPattern("no description");
        objSchema11.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema11.addProperties("*/*", schema17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema9.additionalProperties(schema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema23.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = schema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema27.minProperties((java.lang.Integer) (-1));
        schema29.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07463");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = objSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07464");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        java.lang.Integer int13 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema20.setPattern("no description");
        objSchema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema20.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = objSchema20.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        java.math.BigDecimal bigDecimal31 = null;
        schema29.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema29.$ref("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema29.$ref("");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        java.lang.String str39 = schema36.getTitle();
        io.swagger.oas.models.media.Schema schema40 = schema17.not(schema36);
        io.swagger.oas.models.media.Schema schema42 = schema40.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = schema40.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07465");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.toString();
        schema14.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML31 = null;
        schema14.setXml(xML31);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema33.setPattern("no description");
        objSchema33.setReadOnly((java.lang.Boolean) false);
        objSchema33.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = objSchema33.properties(strMap40);
        schema41.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema41.minItems((java.lang.Integer) 100);
        java.lang.String str46 = schema45.get$ref();
        schema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        objSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = objSchema49.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = schema57.type("");
        io.swagger.oas.models.media.Schema schema61 = schema59.title("*/*");
        io.swagger.oas.models.media.Schema schema63 = schema61.description(",");
        java.lang.String[] strArray66 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        io.swagger.oas.models.media.Schema schema69 = schema61.required((java.util.List<java.lang.String>) strList67);
        schema61.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema73 = schema61.name("");
        io.swagger.oas.models.media.Schema schema75 = schema73.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema77 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList78 = schema73.getRequired();
        schema45.setRequired(strList78);
        io.swagger.oas.models.media.Schema schema80 = schema14.required(strList78);
        java.lang.Boolean boolean81 = schema80.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator82 = null;
        schema80.setDiscriminator(discriminator82);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test07466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07466");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.String str12 = schema8.getName();
        schema8.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMaximum(bigDecimal15);
        java.lang.Object obj17 = schema8.getDefault();
        java.lang.Object obj18 = schema8.getDefault();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test07467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07467");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setType("");
        java.math.BigDecimal bigDecimal5 = objSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = objSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema8.setPattern("no description");
        objSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.String str13 = objSchema8.getName();
        objSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList16 = objSchema8.getEnum();
        io.swagger.oas.models.media.Schema schema18 = objSchema8.exclusiveMaximum((java.lang.Boolean) false);
        schema18.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema18.getExtensions();
        java.lang.Integer int22 = schema18.getMinLength();
        io.swagger.oas.models.media.Schema schema24 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        objSchema0.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj26 = objSchema0.getExample();
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(objList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", obj26, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07468");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        schema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema17.setPattern("no description");
        objSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.String str22 = objSchema17.getName();
        objSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList25 = objSchema17.getEnum();
        io.swagger.oas.models.media.Schema schema27 = objSchema17.name(",");
        java.lang.Object obj28 = null;
        objSchema17.addEnumItemObject(obj28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema17.externalDocs(externalDocumentation30);
        schema7.setExample((java.lang.Object) objSchema17);
        io.swagger.oas.models.media.Schema schema34 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int35 = schema34.getMinLength();
        schema34.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(objList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test07469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07469");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        schema12.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema12.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema12.name("");
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str28 = schema25.getPattern();
        io.swagger.oas.models.media.Schema schema30 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "no description" + "'", str28, "no description");
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test07470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07470");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        objSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = objSchema16.properties(strMap23);
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        schema14.addExtension("*/*", (java.lang.Object) true);
        java.lang.String str28 = schema14.get$ref();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema14.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema32.setPattern("no description");
        objSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = objSchema32.getName();
        objSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList40 = objSchema32.getEnum();
        io.swagger.oas.models.media.Schema schema42 = objSchema32.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema32.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = objSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = objSchema32.title("*/*");
        java.lang.Boolean boolean48 = objSchema32.getExclusiveMinimum();
        objSchema32.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = objSchema32.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        objSchema32.setProperties(strMap53);
        objSchema32.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = objSchema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = objSchema32.title("");
        io.swagger.oas.models.media.Schema schema61 = schema14.addProperties("hi!", (io.swagger.oas.models.media.Schema) objSchema32);
        java.math.BigDecimal bigDecimal62 = schema14.getMaximum();
        java.lang.Boolean boolean63 = schema14.getWriteOnly();
        java.lang.String str64 = schema14.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(objList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test07471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07471");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.name("");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema30.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema37 = schema34.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.xml(xML40);
        java.math.BigDecimal bigDecimal42 = schema41.getMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test07472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07472");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema5.maxLength((java.lang.Integer) 100);
        java.lang.Object obj17 = objSchema5.getExample();
        objSchema5.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = objSchema5.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = objSchema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {no description=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07473");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.externalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema7.getMinLength();
        schema7.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = schema7.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test07474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07474");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema14.getName();
        java.lang.Integer int18 = schema14.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema14.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.minimum(bigDecimal20);
        schema14.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07475");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = schema14.getMinimum();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.format("");
        schema20.setDescription("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07476");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal11 = schema7.getMinimum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema15.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07477");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        objSchema0.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = objSchema13.getName();
        objSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList21 = objSchema13.getEnum();
        io.swagger.oas.models.media.Schema schema23 = objSchema13.exclusiveMaximum((java.lang.Boolean) false);
        objSchema0.setExample((java.lang.Object) objSchema13);
        java.lang.Boolean boolean25 = objSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = objSchema0.minimum(bigDecimal26);
        java.lang.Integer int28 = objSchema0.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema29.setPattern("no description");
        objSchema29.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = objSchema29.addProperties("*/*", schema35);
        io.swagger.oas.models.media.XML xML37 = null;
        schema36.setXml(xML37);
        schema36.setTitle("*/*");
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema36.xml(xML41);
        schema36.setName("#/components/schemas/");
        java.lang.Object obj45 = schema36.getDefault();
        io.swagger.oas.models.media.Schema schema47 = schema36.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema48.setPattern("no description");
        objSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = objSchema48.addProperties("*/*", schema54);
        io.swagger.oas.models.media.Schema schema57 = objSchema48.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal58 = schema57.getMinimum();
        java.math.BigDecimal bigDecimal59 = null;
        schema57.setMultipleOf(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema57.$ref("*/*");
        io.swagger.oas.models.media.Schema schema64 = schema62.uniqueItems((java.lang.Boolean) false);
        schema47.setNot(schema62);
        io.swagger.oas.models.media.Schema schema66 = objSchema0.additionalProperties(schema62);
        objSchema0.setType("class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(objList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test07478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07478");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        java.lang.Integer int14 = objSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = objSchema0.maxLength((java.lang.Integer) (-1));
        objSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = objSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = objSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema23.setPattern("no description");
        objSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.String str28 = objSchema23.getName();
        objSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList31 = objSchema23.getEnum();
        io.swagger.oas.models.media.Schema schema33 = objSchema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = objSchema23.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = objSchema23.getExternalDocs();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema23.xml(xML37);
        io.swagger.oas.models.media.XML xML39 = null;
        objSchema23.setXml(xML39);
        io.swagger.oas.models.media.Schema schema42 = objSchema23.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str43 = schema42.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        objSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = objSchema44.properties(strMap51);
        schema52.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema52.minItems((java.lang.Integer) 100);
        java.lang.Integer int57 = schema56.getMaxLength();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema56.multipleOf(bigDecimal58);
        schema56.setMinLength((java.lang.Integer) 10);
        schema56.setType(",");
        io.swagger.oas.models.media.Schema schema65 = schema56.uniqueItems((java.lang.Boolean) true);
        schema56.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema56.externalDocs(externalDocumentation68);
        io.swagger.oas.models.media.Schema schema71 = schema69.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema72 = schema42.additionalProperties(schema69);
        boolean boolean73 = objSchema0.equals((java.lang.Object) schema72);
        java.lang.Boolean boolean74 = schema72.getExclusiveMaximum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(objList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
    }

    @Test
    public void test07479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07479");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = objSchema0.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = objSchema0.addProperties("no description", (io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema35 = objSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = objSchema15.multipleOf(bigDecimal36);
        schema37.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema37.getNot();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema40);
    }

    @Test
    public void test07480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07480");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        objSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = objSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema18.setPattern("no description");
        objSchema18.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = objSchema18.addProperties("*/*", schema24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal30 = null;
        objSchema29.setMultipleOf(bigDecimal30);
        objSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema34.setPattern("no description");
        objSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = objSchema34.getMinLength();
        objSchema29.addEnumItemObject((java.lang.Object) objSchema34);
        objSchema34.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int43 = objSchema34.getMaxLength();
        schema25.addExtension("no description", (java.lang.Object) objSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema25.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema25.getExtensions();
        schema17.setExtensions(strMap47);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema17.xml(xML49);
        schema17.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07481");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = objSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = objSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07482");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        schema9.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj19 = schema18.getDefault();
        io.swagger.oas.models.media.Schema schema20 = schema18.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test07483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07483");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.addRequiredItem("#/components/schemas/");
        schema9.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        schema20.setTitle("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.xml(xML25);
        schema20.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema9.example((java.lang.Object) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) (-1));
        schema31.setWriteOnly((java.lang.Boolean) false);
        schema31.setName("#/components/schemas/no description");
        schema31.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07484");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = objSchema0.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj16 = objSchema0.getExample();
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test07485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07485");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int14 = objSchema5.getMaxLength();
        java.lang.Object obj15 = objSchema5.getExample();
        objSchema5.setMaxProperties((java.lang.Integer) (-1));
        objSchema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        schema23.setDiscriminator(discriminator24);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07486");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = objSchema0.getProperties();
        java.lang.Integer int4 = objSchema0.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = objSchema0.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        objSchema0.setDiscriminator(discriminator6);
        java.lang.Boolean boolean8 = objSchema0.getUniqueItems();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test07487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07487");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        objSchema0.setRequired((java.util.List<java.lang.String>) strList7);
        objSchema0.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean12 = objSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator13 = objSchema0.getDiscriminator();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(discriminator13);
    }

    @Test
    public void test07488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07488");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema5.setPattern("no description");
        objSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = objSchema5.getMinLength();
        objSchema0.addEnumItemObject((java.lang.Object) objSchema5);
        objSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = objSchema5.maxProperties((java.lang.Integer) 0);
        objSchema5.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema19 = objSchema5.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = objSchema5.type(",");
        schema21.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.discriminator(discriminator26);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema31.setPattern("no description");
        objSchema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = objSchema31.addProperties("*/*", schema37);
        io.swagger.oas.models.media.Schema schema40 = objSchema31.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = objSchema31.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = objSchema31.maxLength((java.lang.Integer) 100);
        java.lang.String str45 = objSchema31.getTitle();
        io.swagger.oas.models.media.Schema schema46 = schema29.not((io.swagger.oas.models.media.Schema) objSchema31);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07489");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        objSchema4.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = objSchema4.addRequiredItem(",");
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema13.getAdditionalProperties();
        schema13.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        schema13.setMaximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Integer int23 = schema13.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema13.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema25.setPattern("no description");
        objSchema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = null;
        io.swagger.oas.models.media.Schema schema32 = objSchema25.addProperties("*/*", schema31);
        io.swagger.oas.models.media.Schema schema34 = objSchema25.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema37.setPattern("no description");
        objSchema37.setReadOnly((java.lang.Boolean) false);
        schema34.addExtension("#/components/schemas/", (java.lang.Object) objSchema37);
        java.lang.String str43 = objSchema37.getType();
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema44.setPattern("no description");
        objSchema44.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = objSchema44.addProperties("*/*", schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        io.swagger.oas.models.media.Schema schema54 = schema51.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema56 = schema51.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema57.setPattern("no description");
        objSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.String str62 = objSchema57.getName();
        objSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList65 = objSchema57.getEnum();
        io.swagger.oas.models.media.Schema schema67 = objSchema57.name(",");
        objSchema57.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema70.setPattern("no description");
        objSchema70.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = null;
        io.swagger.oas.models.media.Schema schema77 = objSchema70.addProperties("*/*", schema76);
        io.swagger.oas.models.media.XML xML78 = null;
        schema77.setXml(xML78);
        schema77.setTitle("*/*");
        io.swagger.oas.models.media.XML xML82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema77.xml(xML82);
        io.swagger.oas.models.media.Schema schema85 = schema77.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema85.getProperties();
        io.swagger.oas.models.media.Schema schema87 = objSchema57.properties(strMap86);
        io.swagger.oas.models.media.Schema schema88 = schema56.properties(strMap86);
        objSchema37.setProperties(strMap86);
        io.swagger.oas.models.media.Schema schema91 = objSchema37.deprecated((java.lang.Boolean) true);
        schema13.setAdditionalProperties(schema91);
        java.util.List<java.lang.Object> objList93 = schema13.getEnum();
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(objList65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(objList93);
    }

    @Test
    public void test07490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07490");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description(",");
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema12.required((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = schema12.toString();
        io.swagger.oas.models.media.Schema schema23 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema12.getNullable();
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 0\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: */*\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,, #/components/schemas/]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test07491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07491");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema5 = null;
        objSchema0.setAdditionalProperties(schema5);
        io.swagger.oas.models.media.Schema schema8 = objSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal13 = null;
        objSchema12.setMultipleOf(bigDecimal13);
        objSchema12.setType("");
        java.math.BigDecimal bigDecimal17 = objSchema12.getMaximum();
        java.lang.Boolean boolean18 = objSchema12.getExclusiveMinimum();
        objSchema12.setExclusiveMinimum((java.lang.Boolean) true);
        objSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = objSchema12.writeOnly((java.lang.Boolean) true);
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) objSchema12);
        schema10.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = schema10.getMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test07492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07492");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        schema7.setTitle("*/*");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.xml(xML12);
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal18 = null;
        objSchema17.setMultipleOf(bigDecimal18);
        objSchema17.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        objSchema17.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema24.setPattern("no description");
        objSchema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = null;
        io.swagger.oas.models.media.Schema schema31 = objSchema24.addProperties("*/*", schema30);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        schema31.setTitle("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema31.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        io.swagger.oas.models.media.Schema schema41 = objSchema17.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal43 = null;
        objSchema42.setMultipleOf(bigDecimal43);
        objSchema42.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        objSchema42.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema56.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema66 = objSchema42.properties(strMap65);
        schema41.setProperties(strMap65);
        io.swagger.oas.models.media.Schema schema69 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.title("");
        io.swagger.oas.models.media.Schema schema73 = schema71.type("");
        schema16.setExample((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema76 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj77 = schema76.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
    }

    @Test
    public void test07493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07493");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema4.setPattern("no description");
        objSchema4.setReadOnly((java.lang.Boolean) false);
        objSchema0.addExtension("", (java.lang.Object) objSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema10.setPattern("no description");
        objSchema10.setReadOnly((java.lang.Boolean) false);
        objSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = objSchema10.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema schema21 = objSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 1);
        schema23.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: -1\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.String> strList28 = schema27.getRequired();
        java.math.BigDecimal bigDecimal29 = schema27.getMinimum();
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test07494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07494");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        objSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = objSchema0.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema13.setPattern("no description");
        objSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = objSchema13.addProperties("*/*", schema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema20.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema20.maxLength((java.lang.Integer) 10);
        schema12.addEnumItemObject((java.lang.Object) schema27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        schema12.setDefault((java.lang.Object) serverListOptional31);
        io.swagger.oas.models.media.Schema schema34 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML37 = null;
        schema12.setXml(xML37);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07495");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = objSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        java.lang.Object obj13 = schema9.getDefault();
        io.swagger.oas.models.media.Schema schema15 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean16 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str19 = schema18.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str19, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07496");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema7.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal16 = null;
        objSchema15.setMultipleOf(bigDecimal16);
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema21.setPattern("no description");
        objSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = objSchema21.addProperties("*/*", schema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("#/components/schemas/");
        objSchema15.addExtension("*/*", (java.lang.Object) "#/components/schemas/");
        java.util.List<java.lang.String> strList33 = objSchema15.getRequired();
        objSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema36.setPattern("no description");
        objSchema36.setReadOnly((java.lang.Boolean) false);
        objSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = objSchema36.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("hi!");
        objSchema15.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema49.setPattern("no description");
        objSchema49.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = null;
        io.swagger.oas.models.media.Schema schema56 = objSchema49.addProperties("*/*", schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        schema56.setXml(xML57);
        schema56.setTitle("*/*");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema62.name(",");
        objSchema15.addExtension(",", (java.lang.Object) ",");
        io.swagger.oas.models.media.Schema schema68 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) objSchema15);
        io.swagger.oas.models.media.Schema schema70 = schema14.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal71 = null;
        schema70.setMultipleOf(bigDecimal71);
        java.lang.Integer int73 = schema70.getMinItems();
        io.swagger.oas.models.media.Schema schema75 = schema70.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test07497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07497");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = objSchema0.getName();
        objSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Object> objList8 = objSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema10 = objSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema10.getNullable();
        schema10.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema16.setPattern("no description");
        objSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = objSchema16.addProperties("*/*", schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema23.minProperties((java.lang.Integer) 10);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema23.readOnly((java.lang.Boolean) false);
        schema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema23.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.discriminator(discriminator35);
        schema10.setExample((java.lang.Object) schema34);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema10.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal42 = null;
        objSchema41.setMultipleOf(bigDecimal42);
        objSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema46.setPattern("no description");
        objSchema46.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = objSchema46.getMinLength();
        objSchema41.addEnumItemObject((java.lang.Object) objSchema46);
        io.swagger.oas.models.media.Schema schema54 = objSchema46.readOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = schema54.getMaxItems();
        io.swagger.oas.models.media.Schema schema57 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: {*/*=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str58 = schema57.getType();
        java.math.BigDecimal bigDecimal59 = schema57.getMinimum();
        java.util.List<java.lang.String> strList60 = schema57.getRequired();
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [,]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema57);
        java.lang.Boolean boolean62 = schema61.getExclusiveMinimum();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
    }

    @Test
    public void test07498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07498");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema7.getExtensions();
        java.math.BigDecimal bigDecimal9 = schema7.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema7.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema7.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test07499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07499");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        objSchema0.setPattern("no description");
        objSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = objSchema0.addProperties("*/*", schema6);
        io.swagger.oas.models.media.Schema schema9 = schema7.title("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        schema9.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema9.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07500");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
        java.math.BigDecimal bigDecimal1 = null;
        objSchema0.setMultipleOf(bigDecimal1);
        objSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = objSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema8.minimum(bigDecimal16);
        java.util.List<java.lang.Object> objList18 = schema8.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(objList18);
    }
}

